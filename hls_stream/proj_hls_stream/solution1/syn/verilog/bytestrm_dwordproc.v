// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="bytestrm_dwordproc,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a35t-cpg236-1,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=4.375000,HLS_SYN_LAT=746,HLS_SYN_TPT=746,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=391,HLS_SYN_LUT=884,HLS_VERSION=2020_1}" *)

module bytestrm_dwordproc (
        strm_out_V_TDATA,
        strm_in_V_TDATA,
        strm_len,
        ap_clk,
        ap_rst_n,
        ap_start,
        strm_in_V_TVALID,
        strm_in_V_TREADY,
        strm_out_V_TVALID,
        strm_out_V_TREADY,
        ap_done,
        ap_ready,
        ap_idle
);


output  [7:0] strm_out_V_TDATA;
input  [7:0] strm_in_V_TDATA;
input  [15:0] strm_len;
input   ap_clk;
input   ap_rst_n;
input   ap_start;
input   strm_in_V_TVALID;
output   strm_in_V_TREADY;
output   strm_out_V_TVALID;
input   strm_out_V_TREADY;
output   ap_done;
output   ap_ready;
output   ap_idle;

 reg    ap_rst_n_inv;
wire    bytestrm_dwordproc_e_U0_ap_start;
wire    bytestrm_dwordproc_e_U0_ap_done;
wire    bytestrm_dwordproc_e_U0_ap_continue;
wire    bytestrm_dwordproc_e_U0_ap_idle;
wire    bytestrm_dwordproc_e_U0_ap_ready;
wire    bytestrm_dwordproc_e_U0_start_out;
wire    bytestrm_dwordproc_e_U0_start_write;
wire   [15:0] bytestrm_dwordproc_e_U0_strm_len_out_din;
wire    bytestrm_dwordproc_e_U0_strm_len_out_write;
wire   [15:0] bytestrm_dwordproc_e_U0_strm_len_out1_din;
wire    bytestrm_dwordproc_e_U0_strm_len_out1_write;
wire    Block_proc_U0_ap_start;
wire    Block_proc_U0_ap_done;
wire    Block_proc_U0_ap_continue;
wire    Block_proc_U0_ap_idle;
wire    Block_proc_U0_ap_ready;
wire    Block_proc_U0_start_out;
wire    Block_proc_U0_start_write;
wire    Block_proc_U0_strm_len_read;
wire   [13:0] Block_proc_U0_bytes_out_len_out_out_din;
wire    Block_proc_U0_bytes_out_len_out_out_write;
wire   [13:0] Block_proc_U0_ap_return;
wire    ap_channel_done_dwords_in_len_cast_l;
wire    dwords_in_len_cast_l_full_n;
wire    strm_bytes2words_U0_ap_start;
wire    strm_bytes2words_U0_ap_done;
wire    strm_bytes2words_U0_ap_continue;
wire    strm_bytes2words_U0_ap_idle;
wire    strm_bytes2words_U0_ap_ready;
wire   [31:0] strm_bytes2words_U0_words_out_V_din;
wire    strm_bytes2words_U0_words_out_V_write;
wire    strm_bytes2words_U0_bytes_in_V_TREADY;
wire    strm_bytes2words_U0_bytestrm_len_read;
wire    decimate_strm_U0_ap_start;
wire    decimate_strm_U0_ap_done;
wire    decimate_strm_U0_ap_continue;
wire    decimate_strm_U0_ap_idle;
wire    decimate_strm_U0_ap_ready;
wire   [31:0] decimate_strm_U0_strm_out_V_din;
wire    decimate_strm_U0_strm_out_V_write;
wire    decimate_strm_U0_strm_in_V_read;
wire    strm_words2bytes_U0_ap_start;
wire    strm_words2bytes_U0_ap_done;
wire    strm_words2bytes_U0_ap_continue;
wire    strm_words2bytes_U0_ap_idle;
wire    strm_words2bytes_U0_ap_ready;
wire   [7:0] strm_words2bytes_U0_bytes_out_V_TDATA;
wire    strm_words2bytes_U0_bytes_out_V_TVALID;
wire    strm_words2bytes_U0_words_in_V_read;
wire    strm_words2bytes_U0_bytes_out_len_loc_read;
wire    ap_sync_continue;
wire    strm_len_c_full_n;
wire   [15:0] strm_len_c_dout;
wire    strm_len_c_empty_n;
wire    strm_len_c2_full_n;
wire   [15:0] strm_len_c2_dout;
wire    strm_len_c2_empty_n;
wire    bytes_out_len_loc_c_full_n;
wire   [13:0] bytes_out_len_loc_c_dout;
wire    bytes_out_len_loc_c_empty_n;
wire   [13:0] dwords_in_len_cast_l_dout;
wire    dwords_in_len_cast_l_empty_n;
wire    dwordstrm_in_V_full_n;
wire   [31:0] dwordstrm_in_V_dout;
wire    dwordstrm_in_V_empty_n;
wire    dwordstrm_out_V_full_n;
wire   [31:0] dwordstrm_out_V_dout;
wire    dwordstrm_out_V_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_bytestrm_dwordproc_e_U0_ap_ready;
wire    ap_sync_bytestrm_dwordproc_e_U0_ap_ready;
reg   [1:0] bytestrm_dwordproc_e_U0_ap_ready_count;
reg    ap_sync_reg_strm_bytes2words_U0_ap_ready;
wire    ap_sync_strm_bytes2words_U0_ap_ready;
reg   [1:0] strm_bytes2words_U0_ap_ready_count;
wire   [0:0] start_for_Block_proc_U0_din;
wire    start_for_Block_proc_U0_full_n;
wire   [0:0] start_for_Block_proc_U0_dout;
wire    start_for_Block_proc_U0_empty_n;
wire   [0:0] start_for_strm_words2bytes_U0_din;
wire    start_for_strm_words2bytes_U0_full_n;
wire   [0:0] start_for_strm_words2bytes_U0_dout;
wire    start_for_strm_words2bytes_U0_empty_n;
wire    strm_bytes2words_U0_start_full_n;
wire    strm_bytes2words_U0_start_write;
wire    decimate_strm_U0_start_full_n;
wire    decimate_strm_U0_start_write;
wire    strm_words2bytes_U0_start_full_n;
wire    strm_words2bytes_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_bytestrm_dwordproc_e_U0_ap_ready = 1'b0;
#0 bytestrm_dwordproc_e_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_strm_bytes2words_U0_ap_ready = 1'b0;
#0 strm_bytes2words_U0_ap_ready_count = 2'd0;
end

bytestrm_dwordproc_e bytestrm_dwordproc_e_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(bytestrm_dwordproc_e_U0_ap_start),
    .start_full_n(start_for_Block_proc_U0_full_n),
    .ap_done(bytestrm_dwordproc_e_U0_ap_done),
    .ap_continue(bytestrm_dwordproc_e_U0_ap_continue),
    .ap_idle(bytestrm_dwordproc_e_U0_ap_idle),
    .ap_ready(bytestrm_dwordproc_e_U0_ap_ready),
    .start_out(bytestrm_dwordproc_e_U0_start_out),
    .start_write(bytestrm_dwordproc_e_U0_start_write),
    .strm_len(strm_len),
    .strm_len_out_din(bytestrm_dwordproc_e_U0_strm_len_out_din),
    .strm_len_out_full_n(strm_len_c_full_n),
    .strm_len_out_write(bytestrm_dwordproc_e_U0_strm_len_out_write),
    .strm_len_out1_din(bytestrm_dwordproc_e_U0_strm_len_out1_din),
    .strm_len_out1_full_n(strm_len_c2_full_n),
    .strm_len_out1_write(bytestrm_dwordproc_e_U0_strm_len_out1_write)
);

Block_proc Block_proc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(Block_proc_U0_ap_start),
    .start_full_n(start_for_strm_words2bytes_U0_full_n),
    .ap_done(Block_proc_U0_ap_done),
    .ap_continue(Block_proc_U0_ap_continue),
    .ap_idle(Block_proc_U0_ap_idle),
    .ap_ready(Block_proc_U0_ap_ready),
    .start_out(Block_proc_U0_start_out),
    .start_write(Block_proc_U0_start_write),
    .strm_len_dout(strm_len_c_dout),
    .strm_len_empty_n(strm_len_c_empty_n),
    .strm_len_read(Block_proc_U0_strm_len_read),
    .bytes_out_len_out_out_din(Block_proc_U0_bytes_out_len_out_out_din),
    .bytes_out_len_out_out_full_n(bytes_out_len_loc_c_full_n),
    .bytes_out_len_out_out_write(Block_proc_U0_bytes_out_len_out_out_write),
    .ap_return(Block_proc_U0_ap_return)
);

strm_bytes2words strm_bytes2words_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(strm_bytes2words_U0_ap_start),
    .ap_done(strm_bytes2words_U0_ap_done),
    .ap_continue(strm_bytes2words_U0_ap_continue),
    .ap_idle(strm_bytes2words_U0_ap_idle),
    .ap_ready(strm_bytes2words_U0_ap_ready),
    .words_out_V_din(strm_bytes2words_U0_words_out_V_din),
    .words_out_V_full_n(dwordstrm_in_V_full_n),
    .words_out_V_write(strm_bytes2words_U0_words_out_V_write),
    .bytes_in_V_TDATA(strm_in_V_TDATA),
    .bytes_in_V_TVALID(strm_in_V_TVALID),
    .bytes_in_V_TREADY(strm_bytes2words_U0_bytes_in_V_TREADY),
    .bytestrm_len_dout(strm_len_c2_dout),
    .bytestrm_len_empty_n(strm_len_c2_empty_n),
    .bytestrm_len_read(strm_bytes2words_U0_bytestrm_len_read)
);

decimate_strm decimate_strm_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(decimate_strm_U0_ap_start),
    .ap_done(decimate_strm_U0_ap_done),
    .ap_continue(decimate_strm_U0_ap_continue),
    .ap_idle(decimate_strm_U0_ap_idle),
    .ap_ready(decimate_strm_U0_ap_ready),
    .strm_out_V_din(decimate_strm_U0_strm_out_V_din),
    .strm_out_V_full_n(dwordstrm_out_V_full_n),
    .strm_out_V_write(decimate_strm_U0_strm_out_V_write),
    .strm_in_V_dout(dwordstrm_in_V_dout),
    .strm_in_V_empty_n(dwordstrm_in_V_empty_n),
    .strm_in_V_read(decimate_strm_U0_strm_in_V_read),
    .strm_len(dwords_in_len_cast_l_dout)
);

strm_words2bytes strm_words2bytes_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(strm_words2bytes_U0_ap_start),
    .ap_done(strm_words2bytes_U0_ap_done),
    .ap_continue(strm_words2bytes_U0_ap_continue),
    .ap_idle(strm_words2bytes_U0_ap_idle),
    .ap_ready(strm_words2bytes_U0_ap_ready),
    .bytes_out_V_TDATA(strm_words2bytes_U0_bytes_out_V_TDATA),
    .bytes_out_V_TVALID(strm_words2bytes_U0_bytes_out_V_TVALID),
    .bytes_out_V_TREADY(strm_out_V_TREADY),
    .words_in_V_dout(dwordstrm_out_V_dout),
    .words_in_V_empty_n(dwordstrm_out_V_empty_n),
    .words_in_V_read(strm_words2bytes_U0_words_in_V_read),
    .bytes_out_len_loc_dout(bytes_out_len_loc_c_dout),
    .bytes_out_len_loc_empty_n(bytes_out_len_loc_c_empty_n),
    .bytes_out_len_loc_read(strm_words2bytes_U0_bytes_out_len_loc_read)
);

fifo_w16_d2_A strm_len_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(bytestrm_dwordproc_e_U0_strm_len_out_din),
    .if_full_n(strm_len_c_full_n),
    .if_write(bytestrm_dwordproc_e_U0_strm_len_out_write),
    .if_dout(strm_len_c_dout),
    .if_empty_n(strm_len_c_empty_n),
    .if_read(Block_proc_U0_strm_len_read)
);

fifo_w16_d2_A strm_len_c2_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(bytestrm_dwordproc_e_U0_strm_len_out1_din),
    .if_full_n(strm_len_c2_full_n),
    .if_write(bytestrm_dwordproc_e_U0_strm_len_out1_write),
    .if_dout(strm_len_c2_dout),
    .if_empty_n(strm_len_c2_empty_n),
    .if_read(strm_bytes2words_U0_bytestrm_len_read)
);

fifo_w14_d3_A bytes_out_len_loc_c_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_proc_U0_bytes_out_len_out_out_din),
    .if_full_n(bytes_out_len_loc_c_full_n),
    .if_write(Block_proc_U0_bytes_out_len_out_out_write),
    .if_dout(bytes_out_len_loc_c_dout),
    .if_empty_n(bytes_out_len_loc_c_empty_n),
    .if_read(strm_words2bytes_U0_bytes_out_len_loc_read)
);

fifo_w14_d2_A dwords_in_len_cast_l_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(Block_proc_U0_ap_return),
    .if_full_n(dwords_in_len_cast_l_full_n),
    .if_write(Block_proc_U0_ap_done),
    .if_dout(dwords_in_len_cast_l_dout),
    .if_empty_n(dwords_in_len_cast_l_empty_n),
    .if_read(decimate_strm_U0_ap_ready)
);

fifo_w32_d4_A dwordstrm_in_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(strm_bytes2words_U0_words_out_V_din),
    .if_full_n(dwordstrm_in_V_full_n),
    .if_write(strm_bytes2words_U0_words_out_V_write),
    .if_dout(dwordstrm_in_V_dout),
    .if_empty_n(dwordstrm_in_V_empty_n),
    .if_read(decimate_strm_U0_strm_in_V_read)
);

fifo_w32_d2_A dwordstrm_out_V_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(decimate_strm_U0_strm_out_V_din),
    .if_full_n(dwordstrm_out_V_full_n),
    .if_write(decimate_strm_U0_strm_out_V_write),
    .if_dout(dwordstrm_out_V_dout),
    .if_empty_n(dwordstrm_out_V_empty_n),
    .if_read(strm_words2bytes_U0_words_in_V_read)
);

start_for_Block_pbkb start_for_Block_pbkb_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_Block_proc_U0_din),
    .if_full_n(start_for_Block_proc_U0_full_n),
    .if_write(bytestrm_dwordproc_e_U0_start_write),
    .if_dout(start_for_Block_proc_U0_dout),
    .if_empty_n(start_for_Block_proc_U0_empty_n),
    .if_read(Block_proc_U0_ap_ready)
);

start_for_strm_wocud start_for_strm_wocud_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_strm_words2bytes_U0_din),
    .if_full_n(start_for_strm_words2bytes_U0_full_n),
    .if_write(Block_proc_U0_start_write),
    .if_dout(start_for_strm_words2bytes_U0_dout),
    .if_empty_n(start_for_strm_words2bytes_U0_empty_n),
    .if_read(strm_words2bytes_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_bytestrm_dwordproc_e_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_bytestrm_dwordproc_e_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_bytestrm_dwordproc_e_U0_ap_ready <= ap_sync_bytestrm_dwordproc_e_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_sync_reg_strm_bytes2words_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_strm_bytes2words_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_strm_bytes2words_U0_ap_ready <= ap_sync_strm_bytes2words_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_sync_ready == 1'b1) & (bytestrm_dwordproc_e_U0_ap_ready == 1'b0))) begin
        bytestrm_dwordproc_e_U0_ap_ready_count <= (bytestrm_dwordproc_e_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (bytestrm_dwordproc_e_U0_ap_ready == 1'b1))) begin
        bytestrm_dwordproc_e_U0_ap_ready_count <= (bytestrm_dwordproc_e_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((strm_bytes2words_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        strm_bytes2words_U0_ap_ready_count <= (strm_bytes2words_U0_ap_ready_count - 2'd1);
    end else if (((strm_bytes2words_U0_ap_ready == 1'b1) & (ap_sync_ready == 1'b0))) begin
        strm_bytes2words_U0_ap_ready_count <= (strm_bytes2words_U0_ap_ready_count + 2'd1);
    end
end

assign Block_proc_U0_ap_continue = dwords_in_len_cast_l_full_n;

assign Block_proc_U0_ap_start = start_for_Block_proc_U0_empty_n;

assign ap_channel_done_dwords_in_len_cast_l = Block_proc_U0_ap_done;

assign ap_done = strm_words2bytes_U0_ap_done;

assign ap_idle = (strm_words2bytes_U0_ap_idle & strm_bytes2words_U0_ap_idle & (dwords_in_len_cast_l_empty_n ^ 1'b1) & decimate_strm_U0_ap_idle & bytestrm_dwordproc_e_U0_ap_idle & Block_proc_U0_ap_idle);

assign ap_ready = ap_sync_ready;

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign ap_sync_bytestrm_dwordproc_e_U0_ap_ready = (bytestrm_dwordproc_e_U0_ap_ready | ap_sync_reg_bytestrm_dwordproc_e_U0_ap_ready);

assign ap_sync_continue = 1'b1;

assign ap_sync_done = strm_words2bytes_U0_ap_done;

assign ap_sync_ready = (ap_sync_strm_bytes2words_U0_ap_ready & ap_sync_bytestrm_dwordproc_e_U0_ap_ready);

assign ap_sync_strm_bytes2words_U0_ap_ready = (strm_bytes2words_U0_ap_ready | ap_sync_reg_strm_bytes2words_U0_ap_ready);

assign bytestrm_dwordproc_e_U0_ap_continue = 1'b1;

assign bytestrm_dwordproc_e_U0_ap_start = ((ap_sync_reg_bytestrm_dwordproc_e_U0_ap_ready ^ 1'b1) & ap_start);

assign decimate_strm_U0_ap_continue = 1'b1;

assign decimate_strm_U0_ap_start = dwords_in_len_cast_l_empty_n;

assign decimate_strm_U0_start_full_n = 1'b1;

assign decimate_strm_U0_start_write = 1'b0;

assign start_for_Block_proc_U0_din = 1'b1;

assign start_for_strm_words2bytes_U0_din = 1'b1;

assign strm_bytes2words_U0_ap_continue = 1'b1;

assign strm_bytes2words_U0_ap_start = ((ap_sync_reg_strm_bytes2words_U0_ap_ready ^ 1'b1) & ap_start);

assign strm_bytes2words_U0_start_full_n = 1'b1;

assign strm_bytes2words_U0_start_write = 1'b0;

assign strm_in_V_TREADY = strm_bytes2words_U0_bytes_in_V_TREADY;

assign strm_out_V_TDATA = strm_words2bytes_U0_bytes_out_V_TDATA;

assign strm_out_V_TVALID = strm_words2bytes_U0_bytes_out_V_TVALID;

assign strm_words2bytes_U0_ap_continue = 1'b1;

assign strm_words2bytes_U0_ap_start = start_for_strm_words2bytes_U0_empty_n;

assign strm_words2bytes_U0_start_full_n = 1'b1;

assign strm_words2bytes_U0_start_write = 1'b0;

endmodule //bytestrm_dwordproc
