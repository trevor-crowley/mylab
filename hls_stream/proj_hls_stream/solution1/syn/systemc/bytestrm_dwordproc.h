// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.1
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _bytestrm_dwordproc_HH_
#define _bytestrm_dwordproc_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "bytestrm_dwordproc_e.h"
#include "Block_proc.h"
#include "strm_bytes2words.h"
#include "decimate_strm.h"
#include "strm_words2bytes.h"
#include "fifo_w16_d2_A.h"
#include "fifo_w14_d3_A.h"
#include "fifo_w14_d2_A.h"
#include "fifo_w32_d4_A.h"
#include "fifo_w32_d2_A.h"
#include "start_for_Block_pbkb.h"
#include "start_for_strm_wocud.h"

namespace ap_rtl {

struct bytestrm_dwordproc : public sc_module {
    // Port declarations 13
    sc_out< sc_lv<8> > strm_out_V_TDATA;
    sc_in< sc_lv<8> > strm_in_V_TDATA;
    sc_in< sc_lv<16> > strm_len;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > strm_in_V_TVALID;
    sc_out< sc_logic > strm_in_V_TREADY;
    sc_out< sc_logic > strm_out_V_TVALID;
    sc_in< sc_logic > strm_out_V_TREADY;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    bytestrm_dwordproc(sc_module_name name);
    SC_HAS_PROCESS(bytestrm_dwordproc);

    ~bytestrm_dwordproc();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    bytestrm_dwordproc_e* bytestrm_dwordproc_e_U0;
    Block_proc* Block_proc_U0;
    strm_bytes2words* strm_bytes2words_U0;
    decimate_strm* decimate_strm_U0;
    strm_words2bytes* strm_words2bytes_U0;
    fifo_w16_d2_A* strm_len_c_U;
    fifo_w16_d2_A* strm_len_c2_U;
    fifo_w14_d3_A* bytes_out_len_loc_c_U;
    fifo_w14_d2_A* dwords_in_len_cast_l_U;
    fifo_w32_d4_A* dwordstrm_in_V_U;
    fifo_w32_d2_A* dwordstrm_out_V_U;
    start_for_Block_pbkb* start_for_Block_pbkb_U;
    start_for_strm_wocud* start_for_strm_wocud_U;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_logic > bytestrm_dwordproc_e_U0_ap_start;
    sc_signal< sc_logic > bytestrm_dwordproc_e_U0_ap_done;
    sc_signal< sc_logic > bytestrm_dwordproc_e_U0_ap_continue;
    sc_signal< sc_logic > bytestrm_dwordproc_e_U0_ap_idle;
    sc_signal< sc_logic > bytestrm_dwordproc_e_U0_ap_ready;
    sc_signal< sc_logic > bytestrm_dwordproc_e_U0_start_out;
    sc_signal< sc_logic > bytestrm_dwordproc_e_U0_start_write;
    sc_signal< sc_lv<16> > bytestrm_dwordproc_e_U0_strm_len_out_din;
    sc_signal< sc_logic > bytestrm_dwordproc_e_U0_strm_len_out_write;
    sc_signal< sc_lv<16> > bytestrm_dwordproc_e_U0_strm_len_out1_din;
    sc_signal< sc_logic > bytestrm_dwordproc_e_U0_strm_len_out1_write;
    sc_signal< sc_logic > Block_proc_U0_ap_start;
    sc_signal< sc_logic > Block_proc_U0_ap_done;
    sc_signal< sc_logic > Block_proc_U0_ap_continue;
    sc_signal< sc_logic > Block_proc_U0_ap_idle;
    sc_signal< sc_logic > Block_proc_U0_ap_ready;
    sc_signal< sc_logic > Block_proc_U0_start_out;
    sc_signal< sc_logic > Block_proc_U0_start_write;
    sc_signal< sc_logic > Block_proc_U0_strm_len_read;
    sc_signal< sc_lv<14> > Block_proc_U0_bytes_out_len_out_out_din;
    sc_signal< sc_logic > Block_proc_U0_bytes_out_len_out_out_write;
    sc_signal< sc_lv<14> > Block_proc_U0_ap_return;
    sc_signal< sc_logic > ap_channel_done_dwords_in_len_cast_l;
    sc_signal< sc_logic > dwords_in_len_cast_l_full_n;
    sc_signal< sc_logic > strm_bytes2words_U0_ap_start;
    sc_signal< sc_logic > strm_bytes2words_U0_ap_done;
    sc_signal< sc_logic > strm_bytes2words_U0_ap_continue;
    sc_signal< sc_logic > strm_bytes2words_U0_ap_idle;
    sc_signal< sc_logic > strm_bytes2words_U0_ap_ready;
    sc_signal< sc_lv<32> > strm_bytes2words_U0_words_out_V_din;
    sc_signal< sc_logic > strm_bytes2words_U0_words_out_V_write;
    sc_signal< sc_logic > strm_bytes2words_U0_bytes_in_V_TREADY;
    sc_signal< sc_logic > strm_bytes2words_U0_bytestrm_len_read;
    sc_signal< sc_logic > decimate_strm_U0_ap_start;
    sc_signal< sc_logic > decimate_strm_U0_ap_done;
    sc_signal< sc_logic > decimate_strm_U0_ap_continue;
    sc_signal< sc_logic > decimate_strm_U0_ap_idle;
    sc_signal< sc_logic > decimate_strm_U0_ap_ready;
    sc_signal< sc_lv<32> > decimate_strm_U0_strm_out_V_din;
    sc_signal< sc_logic > decimate_strm_U0_strm_out_V_write;
    sc_signal< sc_logic > decimate_strm_U0_strm_in_V_read;
    sc_signal< sc_logic > strm_words2bytes_U0_ap_start;
    sc_signal< sc_logic > strm_words2bytes_U0_ap_done;
    sc_signal< sc_logic > strm_words2bytes_U0_ap_continue;
    sc_signal< sc_logic > strm_words2bytes_U0_ap_idle;
    sc_signal< sc_logic > strm_words2bytes_U0_ap_ready;
    sc_signal< sc_lv<8> > strm_words2bytes_U0_bytes_out_V_TDATA;
    sc_signal< sc_logic > strm_words2bytes_U0_bytes_out_V_TVALID;
    sc_signal< sc_logic > strm_words2bytes_U0_words_in_V_read;
    sc_signal< sc_logic > strm_words2bytes_U0_bytes_out_len_loc_read;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > strm_len_c_full_n;
    sc_signal< sc_lv<16> > strm_len_c_dout;
    sc_signal< sc_logic > strm_len_c_empty_n;
    sc_signal< sc_logic > strm_len_c2_full_n;
    sc_signal< sc_lv<16> > strm_len_c2_dout;
    sc_signal< sc_logic > strm_len_c2_empty_n;
    sc_signal< sc_logic > bytes_out_len_loc_c_full_n;
    sc_signal< sc_lv<14> > bytes_out_len_loc_c_dout;
    sc_signal< sc_logic > bytes_out_len_loc_c_empty_n;
    sc_signal< sc_lv<14> > dwords_in_len_cast_l_dout;
    sc_signal< sc_logic > dwords_in_len_cast_l_empty_n;
    sc_signal< sc_logic > dwordstrm_in_V_full_n;
    sc_signal< sc_lv<32> > dwordstrm_in_V_dout;
    sc_signal< sc_logic > dwordstrm_in_V_empty_n;
    sc_signal< sc_logic > dwordstrm_out_V_full_n;
    sc_signal< sc_lv<32> > dwordstrm_out_V_dout;
    sc_signal< sc_logic > dwordstrm_out_V_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_logic > ap_sync_reg_bytestrm_dwordproc_e_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_bytestrm_dwordproc_e_U0_ap_ready;
    sc_signal< sc_lv<2> > bytestrm_dwordproc_e_U0_ap_ready_count;
    sc_signal< sc_logic > ap_sync_reg_strm_bytes2words_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_strm_bytes2words_U0_ap_ready;
    sc_signal< sc_lv<2> > strm_bytes2words_U0_ap_ready_count;
    sc_signal< sc_lv<1> > start_for_Block_proc_U0_din;
    sc_signal< sc_logic > start_for_Block_proc_U0_full_n;
    sc_signal< sc_lv<1> > start_for_Block_proc_U0_dout;
    sc_signal< sc_logic > start_for_Block_proc_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_strm_words2bytes_U0_din;
    sc_signal< sc_logic > start_for_strm_words2bytes_U0_full_n;
    sc_signal< sc_lv<1> > start_for_strm_words2bytes_U0_dout;
    sc_signal< sc_logic > start_for_strm_words2bytes_U0_empty_n;
    sc_signal< sc_logic > strm_bytes2words_U0_start_full_n;
    sc_signal< sc_logic > strm_bytes2words_U0_start_write;
    sc_signal< sc_logic > decimate_strm_U0_start_full_n;
    sc_signal< sc_logic > decimate_strm_U0_start_write;
    sc_signal< sc_logic > strm_words2bytes_U0_start_full_n;
    sc_signal< sc_logic > strm_words2bytes_U0_start_write;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_Block_proc_U0_ap_continue();
    void thread_Block_proc_U0_ap_start();
    void thread_ap_channel_done_dwords_in_len_cast_l();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_ap_sync_bytestrm_dwordproc_e_U0_ap_ready();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_ap_sync_strm_bytes2words_U0_ap_ready();
    void thread_bytestrm_dwordproc_e_U0_ap_continue();
    void thread_bytestrm_dwordproc_e_U0_ap_start();
    void thread_decimate_strm_U0_ap_continue();
    void thread_decimate_strm_U0_ap_start();
    void thread_decimate_strm_U0_start_full_n();
    void thread_decimate_strm_U0_start_write();
    void thread_start_for_Block_proc_U0_din();
    void thread_start_for_strm_words2bytes_U0_din();
    void thread_strm_bytes2words_U0_ap_continue();
    void thread_strm_bytes2words_U0_ap_start();
    void thread_strm_bytes2words_U0_start_full_n();
    void thread_strm_bytes2words_U0_start_write();
    void thread_strm_in_V_TREADY();
    void thread_strm_out_V_TDATA();
    void thread_strm_out_V_TVALID();
    void thread_strm_words2bytes_U0_ap_continue();
    void thread_strm_words2bytes_U0_ap_start();
    void thread_strm_words2bytes_U0_start_full_n();
    void thread_strm_words2bytes_U0_start_write();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
