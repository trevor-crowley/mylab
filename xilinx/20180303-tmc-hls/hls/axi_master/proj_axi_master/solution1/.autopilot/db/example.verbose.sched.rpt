

================================================================
== Vivado HLS Report for 'example'
================================================================
* Date:           Sat Mar 10 18:02:20 2018

* Version:        2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)
* Project:        proj_axi_master
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  13.33|     11.67|        1.67|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  217|  217|  217|  217|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                     |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- memcpy.buff.a      |   51|   51|         3|          1|          1|    50|    yes   |
        |- Loop 2             |  100|  100|         2|          -|          -|    50|    no    |
        |- memcpy.a.buff.gep  |   51|   51|         3|          1|          1|    50|    yes   |
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3
  * Pipeline-1: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 21
* Pipeline : 2
  Pipeline-0 : II = 1, D = 3, States = { 8 9 10 }
  Pipeline-1 : II = 1, D = 3, States = { 14 15 16 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	11  / (exitcond1)
	9  / (!exitcond1)
9 --> 
	10  / true
10 --> 
	8  / true
11 --> 
	12  / true
12 --> 
	13  / (!exitcond)
	14  / (exitcond)
13 --> 
	12  / true
14 --> 
	17  / (exitcond6)
	15  / (!exitcond6)
15 --> 
	16  / true
16 --> 
	14  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 

* FSM state operations: 

 <State 1> : 11.67ns
ST_1 : Operation 22 [1/1] (0.00ns)   --->   "%buff = alloca [50 x i32], align 16" [example.cpp:104]   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>
ST_1 : Operation 23 [7/7] (11.6ns)   --->   "%a_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %a, i32 50) nounwind" [example.cpp:109]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 2> : 11.67ns
ST_2 : Operation 24 [6/7] (11.6ns)   --->   "%a_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %a, i32 50) nounwind" [example.cpp:109]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 3> : 11.67ns
ST_3 : Operation 25 [5/7] (11.6ns)   --->   "%a_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %a, i32 50) nounwind" [example.cpp:109]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 4> : 11.67ns
ST_4 : Operation 26 [4/7] (11.6ns)   --->   "%a_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %a, i32 50) nounwind" [example.cpp:109]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 5> : 11.67ns
ST_5 : Operation 27 [3/7] (11.6ns)   --->   "%a_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %a, i32 50) nounwind" [example.cpp:109]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 6> : 11.67ns
ST_6 : Operation 28 [2/7] (11.6ns)   --->   "%a_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %a, i32 50) nounwind" [example.cpp:109]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 7> : 11.67ns
ST_7 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %a) nounwind, !map !7"
ST_7 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([8 x i8]* @example_str) nounwind"
ST_7 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %a, [6 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 50, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [example.cpp:101]
ST_7 : Operation 32 [1/7] (11.6ns)   --->   "%a_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %a, i32 50) nounwind" [example.cpp:109]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 33 [1/1] (1.30ns)   --->   "br label %burst.rd.header"

 <State 8> : 1.61ns
ST_8 : Operation 34 [1/1] (0.00ns)   --->   "%indvar = phi i6 [ 0, %0 ], [ %indvar_next, %burst.rd.body ]"
ST_8 : Operation 35 [1/1] (1.18ns)   --->   "%exitcond1 = icmp eq i6 %indvar, -14"   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 36 [1/1] (1.61ns)   --->   "%indvar_next = add i6 %indvar, 1"   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.24> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 37 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %burst.rd.end.preheader, label %burst.rd.body"

 <State 9> : 11.67ns
ST_9 : Operation 38 [1/1] (11.6ns)   --->   "%a_read = call i32 @_ssdm_op_Read.m_axi.i32P(i32* %a) nounwind" [example.cpp:109]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 10> : 2.77ns
ST_10 : Operation 39 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 50, i64 50, i64 50) nounwind"
ST_10 : Operation 40 [1/1] (0.00ns)   --->   "%burstread_rbegin = call i32 (...)* @_ssdm_op_SpecRegionBegin([17 x i8]* @burstread_OC_region_s) nounwind"
ST_10 : Operation 41 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind"
ST_10 : Operation 42 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecLoopName([14 x i8]* @memcpy_OC_buff_OC_a_s) nounwind"
ST_10 : Operation 43 [1/1] (0.00ns)   --->   "%tmp = zext i6 %indvar to i64" [example.cpp:109]
ST_10 : Operation 44 [1/1] (0.00ns)   --->   "%buff_addr = getelementptr [50 x i32]* %buff, i64 0, i64 %tmp" [example.cpp:109]
ST_10 : Operation 45 [1/1] (2.77ns)   --->   "store i32 %a_read, i32* %buff_addr, align 4" [example.cpp:109]   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>
ST_10 : Operation 46 [1/1] (0.00ns)   --->   "%burstread_rend = call i32 (...)* @_ssdm_op_SpecRegionEnd([17 x i8]* @burstread_OC_region_s, i32 %burstread_rbegin) nounwind"
ST_10 : Operation 47 [1/1] (0.00ns)   --->   "br label %burst.rd.header"

 <State 11> : 1.30ns
ST_11 : Operation 48 [1/1] (1.30ns)   --->   "br label %burst.rd.end" [example.cpp:111]

 <State 12> : 11.67ns
ST_12 : Operation 49 [1/1] (0.00ns)   --->   "%i = phi i6 [ %i_1, %1 ], [ 0, %burst.rd.end.preheader ]"
ST_12 : Operation 50 [1/1] (1.18ns)   --->   "%exitcond = icmp eq i6 %i, -14" [example.cpp:111]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 51 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 50, i64 50, i64 50) nounwind"
ST_12 : Operation 52 [1/1] (1.61ns)   --->   "%i_1 = add i6 %i, 1" [example.cpp:111]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.24> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 53 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %burst.wr.header.preheader, label %1" [example.cpp:111]
ST_12 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_1 = zext i6 %i to i64" [example.cpp:112]
ST_12 : Operation 55 [1/1] (0.00ns)   --->   "%buff_addr_1 = getelementptr inbounds [50 x i32]* %buff, i64 0, i64 %tmp_1" [example.cpp:112]
ST_12 : Operation 56 [2/2] (2.77ns)   --->   "%buff_load = load i32* %buff_addr_1, align 4" [example.cpp:112]   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>
ST_12 : Operation 57 [1/1] (11.6ns)   --->   "%a_wr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %a, i32 50) nounwind" [example.cpp:115]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 58 [1/1] (1.30ns)   --->   "br label %burst.wr.header"

 <State 13> : 7.79ns
ST_13 : Operation 59 [1/2] (2.77ns)   --->   "%buff_load = load i32* %buff_addr_1, align 4" [example.cpp:112]   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>
ST_13 : Operation 60 [1/1] (2.24ns)   --->   "%tmp_2 = add nsw i32 %buff_load, 100" [example.cpp:112]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.24> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 61 [1/1] (2.77ns)   --->   "store i32 %tmp_2, i32* %buff_addr_1, align 4" [example.cpp:112]   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>
ST_13 : Operation 62 [1/1] (0.00ns)   --->   "br label %burst.rd.end" [example.cpp:111]

 <State 14> : 2.77ns
ST_14 : Operation 63 [1/1] (0.00ns)   --->   "%indvar4 = phi i6 [ %indvar_next5, %burst.wr.body ], [ 0, %burst.wr.header.preheader ]"
ST_14 : Operation 64 [1/1] (1.18ns)   --->   "%exitcond6 = icmp eq i6 %indvar4, -14"   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 65 [1/1] (1.61ns)   --->   "%indvar_next5 = add i6 %indvar4, 1"   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.24> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 66 [1/1] (0.00ns)   --->   "br i1 %exitcond6, label %memcpy.tail, label %burst.wr.body"
ST_14 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_4 = zext i6 %indvar4 to i64" [example.cpp:115]
ST_14 : Operation 68 [1/1] (0.00ns)   --->   "%buff_addr_2 = getelementptr [50 x i32]* %buff, i64 0, i64 %tmp_4" [example.cpp:115]
ST_14 : Operation 69 [2/2] (2.77ns)   --->   "%buff_load_1 = load i32* %buff_addr_2, align 4" [example.cpp:115]   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>

 <State 15> : 2.77ns
ST_15 : Operation 70 [1/2] (2.77ns)   --->   "%buff_load_1 = load i32* %buff_addr_2, align 4" [example.cpp:115]   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>

 <State 16> : 11.67ns
ST_16 : Operation 71 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 50, i64 50, i64 50) nounwind"
ST_16 : Operation 72 [1/1] (0.00ns)   --->   "%burstwrite_rbegin = call i32 (...)* @_ssdm_op_SpecRegionBegin([18 x i8]* @burstwrite_OC_region) nounwind"
ST_16 : Operation 73 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str3) nounwind"
ST_16 : Operation 74 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecLoopName([18 x i8]* @memcpy_OC_a_OC_buff_s) nounwind"
ST_16 : Operation 75 [1/1] (11.6ns)   --->   "call void @_ssdm_op_Write.m_axi.i32P(i32* %a, i32 %buff_load_1, i4 -1) nounwind" [example.cpp:115]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 76 [1/1] (0.00ns)   --->   "%burstwrite_rend = call i32 (...)* @_ssdm_op_SpecRegionEnd([18 x i8]* @burstwrite_OC_region, i32 %burstwrite_rbegin) nounwind"
ST_16 : Operation 77 [1/1] (0.00ns)   --->   "br label %burst.wr.header"

 <State 17> : 11.67ns
ST_17 : Operation 78 [5/5] (11.6ns)   --->   "%a_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %a) nounwind" [example.cpp:115]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 18> : 11.67ns
ST_18 : Operation 79 [4/5] (11.6ns)   --->   "%a_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %a) nounwind" [example.cpp:115]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 19> : 11.67ns
ST_19 : Operation 80 [3/5] (11.6ns)   --->   "%a_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %a) nounwind" [example.cpp:115]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 20> : 11.67ns
ST_20 : Operation 81 [2/5] (11.6ns)   --->   "%a_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %a) nounwind" [example.cpp:115]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 21> : 11.67ns
ST_21 : Operation 82 [1/5] (11.6ns)   --->   "%a_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %a) nounwind" [example.cpp:115]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 83 [1/1] (0.00ns)   --->   "ret void" [example.cpp:116]


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 13.3ns, clock uncertainty: 1.67ns.

 <State 1>: 11.7ns
The critical path consists of the following:
	bus request on port 'a' (example.cpp:109) [6]  (11.7 ns)

 <State 2>: 11.7ns
The critical path consists of the following:
	bus request on port 'a' (example.cpp:109) [6]  (11.7 ns)

 <State 3>: 11.7ns
The critical path consists of the following:
	bus request on port 'a' (example.cpp:109) [6]  (11.7 ns)

 <State 4>: 11.7ns
The critical path consists of the following:
	bus request on port 'a' (example.cpp:109) [6]  (11.7 ns)

 <State 5>: 11.7ns
The critical path consists of the following:
	bus request on port 'a' (example.cpp:109) [6]  (11.7 ns)

 <State 6>: 11.7ns
The critical path consists of the following:
	bus request on port 'a' (example.cpp:109) [6]  (11.7 ns)

 <State 7>: 11.7ns
The critical path consists of the following:
	bus request on port 'a' (example.cpp:109) [6]  (11.7 ns)

 <State 8>: 1.61ns
The critical path consists of the following:
	'phi' operation ('indvar') with incoming values : ('indvar_next') [9]  (0 ns)
	'add' operation ('indvar_next') [11]  (1.61 ns)

 <State 9>: 11.7ns
The critical path consists of the following:
	bus read on port 'a' (example.cpp:109) [19]  (11.7 ns)

 <State 10>: 2.77ns
The critical path consists of the following:
	'getelementptr' operation ('buff_addr', example.cpp:109) [20]  (0 ns)
	'store' operation (example.cpp:109) of variable 'a_read', example.cpp:109 on array 'buff', example.cpp:104 [21]  (2.77 ns)

 <State 11>: 1.3ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i') with incoming values : ('i', example.cpp:111) [27]  (1.3 ns)

 <State 12>: 11.7ns
The critical path consists of the following:
	bus request on port 'a' (example.cpp:115) [40]  (11.7 ns)

 <State 13>: 7.79ns
The critical path consists of the following:
	'load' operation ('buff_load', example.cpp:112) on array 'buff', example.cpp:104 [35]  (2.77 ns)
	'add' operation ('tmp_2', example.cpp:112) [36]  (2.25 ns)
	'store' operation (example.cpp:112) of variable 'tmp_2', example.cpp:112 on array 'buff', example.cpp:104 [37]  (2.77 ns)

 <State 14>: 2.77ns
The critical path consists of the following:
	'phi' operation ('indvar4') with incoming values : ('indvar_next5') [43]  (0 ns)
	'getelementptr' operation ('buff_addr_2', example.cpp:115) [53]  (0 ns)
	'load' operation ('buff_load_1', example.cpp:115) on array 'buff', example.cpp:104 [54]  (2.77 ns)

 <State 15>: 2.77ns
The critical path consists of the following:
	'load' operation ('buff_load_1', example.cpp:115) on array 'buff', example.cpp:104 [54]  (2.77 ns)

 <State 16>: 11.7ns
The critical path consists of the following:
	bus write on port 'a' (example.cpp:115) [55]  (11.7 ns)

 <State 17>: 11.7ns
The critical path consists of the following:
	bus access on port 'a' (example.cpp:115) [59]  (11.7 ns)

 <State 18>: 11.7ns
The critical path consists of the following:
	bus access on port 'a' (example.cpp:115) [59]  (11.7 ns)

 <State 19>: 11.7ns
The critical path consists of the following:
	bus access on port 'a' (example.cpp:115) [59]  (11.7 ns)

 <State 20>: 11.7ns
The critical path consists of the following:
	bus access on port 'a' (example.cpp:115) [59]  (11.7 ns)

 <State 21>: 11.7ns
The critical path consists of the following:
	bus access on port 'a' (example.cpp:115) [59]  (11.7 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
