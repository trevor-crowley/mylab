

================================================================
== Vivado HLS Report for 'example'
================================================================
* Date:           Sat Mar 10 18:02:20 2018

* Version:        2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)
* Project:        proj_axi_master
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  13.33|     11.67|        1.67|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  217|  217|  217|  217|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+
        |                     |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        |      Loop Name      | min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+
        |- memcpy.buff.a      |   51|   51|         3|          1|          1|    50|    yes   |
        |- Loop 2             |  100|  100|         2|          -|          -|    50|    no    |
        |- memcpy.a.buff.gep  |   51|   51|         3|          1|          1|    50|    yes   |
        +---------------------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 1, depth = 3
  * Pipeline-1: initiation interval (II) = 1, depth = 3


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 21
* Pipeline : 2
  Pipeline-0 : II = 1, D = 3, States = { 8 9 10 }
  Pipeline-1 : II = 1, D = 3, States = { 14 15 16 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / true
5 --> 
	6  / true
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	11  / (exitcond1)
	9  / (!exitcond1)
9 --> 
	10  / true
10 --> 
	8  / true
11 --> 
	12  / true
12 --> 
	13  / (!exitcond)
	14  / (exitcond)
13 --> 
	12  / true
14 --> 
	17  / (exitcond6)
	15  / (!exitcond6)
15 --> 
	16  / true
16 --> 
	14  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	20  / true
20 --> 
	21  / true
21 --> 

* FSM state operations: 

 <State 1> : 11.67ns
ST_1 : Operation 22 [1/1] (2.77ns)   --->   "%buff = alloca [50 x i32], align 16" [example.cpp:104]   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>
ST_1 : Operation 23 [7/7] (11.6ns)   --->   "%a_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %a, i32 50) nounwind" [example.cpp:109]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 2> : 11.67ns
ST_2 : Operation 24 [6/7] (11.6ns)   --->   "%a_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %a, i32 50) nounwind" [example.cpp:109]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 3> : 11.67ns
ST_3 : Operation 25 [5/7] (11.6ns)   --->   "%a_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %a, i32 50) nounwind" [example.cpp:109]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 4> : 11.67ns
ST_4 : Operation 26 [4/7] (11.6ns)   --->   "%a_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %a, i32 50) nounwind" [example.cpp:109]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 5> : 11.67ns
ST_5 : Operation 27 [3/7] (11.6ns)   --->   "%a_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %a, i32 50) nounwind" [example.cpp:109]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 6> : 11.67ns
ST_6 : Operation 28 [2/7] (11.6ns)   --->   "%a_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %a, i32 50) nounwind" [example.cpp:109]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 7> : 11.67ns
ST_7 : Operation 29 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i32* %a) nounwind, !map !7"
ST_7 : Operation 30 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([8 x i8]* @example_str) nounwind"
ST_7 : Operation 31 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32* %a, [6 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 50, [1 x i8]* @p_str1, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 16, i32 16, i32 16, i32 16, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [example.cpp:101]
ST_7 : Operation 32 [1/7] (11.6ns)   --->   "%a_rd_req = call i1 @_ssdm_op_ReadReq.m_axi.i32P(i32* %a, i32 50) nounwind" [example.cpp:109]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_7 : Operation 33 [1/1] (1.30ns)   --->   "br label %burst.rd.header"

 <State 8> : 1.61ns
ST_8 : Operation 34 [1/1] (0.00ns)   --->   "%indvar = phi i6 [ 0, %0 ], [ %indvar_next, %burst.rd.body ]"
ST_8 : Operation 35 [1/1] (1.18ns)   --->   "%exitcond1 = icmp eq i6 %indvar, -14"   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 36 [1/1] (1.61ns)   --->   "%indvar_next = add i6 %indvar, 1"   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.61> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_8 : Operation 37 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %burst.rd.end.preheader, label %burst.rd.body"

 <State 9> : 11.67ns
ST_9 : Operation 38 [1/1] (11.6ns)   --->   "%a_read = call i32 @_ssdm_op_Read.m_axi.i32P(i32* %a) nounwind" [example.cpp:109]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 10> : 2.77ns
ST_10 : Operation 39 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 50, i64 50, i64 50) nounwind"
ST_10 : Operation 40 [1/1] (0.00ns)   --->   "%burstread_rbegin = call i32 (...)* @_ssdm_op_SpecRegionBegin([17 x i8]* @burstread_OC_region_s) nounwind"
ST_10 : Operation 41 [1/1] (0.00ns)   --->   "%empty_3 = call i32 (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str2) nounwind"
ST_10 : Operation 42 [1/1] (0.00ns)   --->   "%empty_4 = call i32 (...)* @_ssdm_op_SpecLoopName([14 x i8]* @memcpy_OC_buff_OC_a_s) nounwind"
ST_10 : Operation 43 [1/1] (0.00ns)   --->   "%tmp = zext i6 %indvar to i64" [example.cpp:109]
ST_10 : Operation 44 [1/1] (0.00ns)   --->   "%buff_addr = getelementptr [50 x i32]* %buff, i64 0, i64 %tmp" [example.cpp:109]
ST_10 : Operation 45 [1/1] (2.77ns)   --->   "store i32 %a_read, i32* %buff_addr, align 4" [example.cpp:109]   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>
ST_10 : Operation 46 [1/1] (0.00ns)   --->   "%burstread_rend = call i32 (...)* @_ssdm_op_SpecRegionEnd([17 x i8]* @burstread_OC_region_s, i32 %burstread_rbegin) nounwind"
ST_10 : Operation 47 [1/1] (0.00ns)   --->   "br label %burst.rd.header"

 <State 11> : 1.30ns
ST_11 : Operation 48 [1/1] (1.30ns)   --->   "br label %burst.rd.end" [example.cpp:111]

 <State 12> : 11.67ns
ST_12 : Operation 49 [1/1] (0.00ns)   --->   "%i = phi i6 [ %i_1, %1 ], [ 0, %burst.rd.end.preheader ]"
ST_12 : Operation 50 [1/1] (1.18ns)   --->   "%exitcond = icmp eq i6 %i, -14" [example.cpp:111]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 51 [1/1] (0.00ns)   --->   "%empty_5 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 50, i64 50, i64 50) nounwind"
ST_12 : Operation 52 [1/1] (1.61ns)   --->   "%i_1 = add i6 %i, 1" [example.cpp:111]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.61> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_12 : Operation 53 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %burst.wr.header.preheader, label %1" [example.cpp:111]
ST_12 : Operation 54 [1/1] (0.00ns)   --->   "%tmp_1 = zext i6 %i to i64" [example.cpp:112]
ST_12 : Operation 55 [1/1] (0.00ns)   --->   "%buff_addr_1 = getelementptr inbounds [50 x i32]* %buff, i64 0, i64 %tmp_1" [example.cpp:112]
ST_12 : Operation 56 [2/2] (2.77ns)   --->   "%buff_load = load i32* %buff_addr_1, align 4" [example.cpp:112]   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>
ST_12 : Operation 57 [1/1] (11.6ns)   --->   "%a_wr_req = call i1 @_ssdm_op_WriteReq.m_axi.i32P(i32* %a, i32 50) nounwind" [example.cpp:115]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_12 : Operation 58 [1/1] (1.30ns)   --->   "br label %burst.wr.header"

 <State 13> : 7.79ns
ST_13 : Operation 59 [1/2] (2.77ns)   --->   "%buff_load = load i32* %buff_addr_1, align 4" [example.cpp:112]   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>
ST_13 : Operation 60 [1/1] (2.24ns)   --->   "%tmp_2 = add nsw i32 %buff_load, 100" [example.cpp:112]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.61> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_13 : Operation 61 [1/1] (2.77ns)   --->   "store i32 %tmp_2, i32* %buff_addr_1, align 4" [example.cpp:112]   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>
ST_13 : Operation 62 [1/1] (0.00ns)   --->   "br label %burst.rd.end" [example.cpp:111]

 <State 14> : 2.77ns
ST_14 : Operation 63 [1/1] (0.00ns)   --->   "%indvar4 = phi i6 [ %indvar_next5, %burst.wr.body ], [ 0, %burst.wr.header.preheader ]"
ST_14 : Operation 64 [1/1] (1.18ns)   --->   "%exitcond6 = icmp eq i6 %indvar4, -14"   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.18> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 65 [1/1] (1.61ns)   --->   "%indvar_next5 = add i6 %indvar4, 1"   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.61> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_14 : Operation 66 [1/1] (0.00ns)   --->   "br i1 %exitcond6, label %memcpy.tail, label %burst.wr.body"
ST_14 : Operation 67 [1/1] (0.00ns)   --->   "%tmp_4 = zext i6 %indvar4 to i64" [example.cpp:115]
ST_14 : Operation 68 [1/1] (0.00ns)   --->   "%buff_addr_2 = getelementptr [50 x i32]* %buff, i64 0, i64 %tmp_4" [example.cpp:115]
ST_14 : Operation 69 [2/2] (2.77ns)   --->   "%buff_load_1 = load i32* %buff_addr_2, align 4" [example.cpp:115]   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>

 <State 15> : 2.77ns
ST_15 : Operation 70 [1/2] (2.77ns)   --->   "%buff_load_1 = load i32* %buff_addr_2, align 4" [example.cpp:115]   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 2.77> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 50> <RAM>

 <State 16> : 11.67ns
ST_16 : Operation 71 [1/1] (0.00ns)   --->   "%empty_6 = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 50, i64 50, i64 50) nounwind"
ST_16 : Operation 72 [1/1] (0.00ns)   --->   "%burstwrite_rbegin = call i32 (...)* @_ssdm_op_SpecRegionBegin([18 x i8]* @burstwrite_OC_region) nounwind"
ST_16 : Operation 73 [1/1] (0.00ns)   --->   "%empty_7 = call i32 (...)* @_ssdm_op_SpecPipeline(i32 1, i32 1, i32 1, i32 0, [1 x i8]* @p_str3) nounwind"
ST_16 : Operation 74 [1/1] (0.00ns)   --->   "%empty_8 = call i32 (...)* @_ssdm_op_SpecLoopName([18 x i8]* @memcpy_OC_a_OC_buff_s) nounwind"
ST_16 : Operation 75 [1/1] (11.6ns)   --->   "call void @_ssdm_op_Write.m_axi.i32P(i32* %a, i32 %buff_load_1, i4 -1) nounwind" [example.cpp:115]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_16 : Operation 76 [1/1] (0.00ns)   --->   "%burstwrite_rend = call i32 (...)* @_ssdm_op_SpecRegionEnd([18 x i8]* @burstwrite_OC_region, i32 %burstwrite_rbegin) nounwind"
ST_16 : Operation 77 [1/1] (0.00ns)   --->   "br label %burst.wr.header"

 <State 17> : 11.67ns
ST_17 : Operation 78 [5/5] (11.6ns)   --->   "%a_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %a) nounwind" [example.cpp:115]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 18> : 11.67ns
ST_18 : Operation 79 [4/5] (11.6ns)   --->   "%a_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %a) nounwind" [example.cpp:115]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 19> : 11.67ns
ST_19 : Operation 80 [3/5] (11.6ns)   --->   "%a_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %a) nounwind" [example.cpp:115]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 20> : 11.67ns
ST_20 : Operation 81 [2/5] (11.6ns)   --->   "%a_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %a) nounwind" [example.cpp:115]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>

 <State 21> : 11.67ns
ST_21 : Operation 82 [1/5] (11.6ns)   --->   "%a_wr_resp = call i1 @_ssdm_op_WriteResp.m_axi.i32P(i32* %a) nounwind" [example.cpp:115]   --->   Core 9 'm_axi' <Latency = 6> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write' 'readreq' 'writereq' 'writeresp'>
ST_21 : Operation 83 [1/1] (0.00ns)   --->   "ret void" [example.cpp:116]


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ a]:  wired=1; compound=1; hidden=0; nouse=0; global=0; static=0; extern=0; dir=2; type=4; pingpong=0; private_global=0; IO mode=m_axi:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
buff              (alloca           ) [ 0011111111111111100000]
StgValue_29       (specbitsmap      ) [ 0000000000000000000000]
StgValue_30       (spectopmodule    ) [ 0000000000000000000000]
StgValue_31       (specinterface    ) [ 0000000000000000000000]
a_rd_req          (readreq          ) [ 0000000000000000000000]
StgValue_33       (br               ) [ 0000000111100000000000]
indvar            (phi              ) [ 0000000011100000000000]
exitcond1         (icmp             ) [ 0000000011100000000000]
indvar_next       (add              ) [ 0000000111100000000000]
StgValue_37       (br               ) [ 0000000000000000000000]
a_read            (read             ) [ 0000000010100000000000]
empty             (speclooptripcount) [ 0000000000000000000000]
burstread_rbegin  (specregionbegin  ) [ 0000000000000000000000]
empty_3           (specpipeline     ) [ 0000000000000000000000]
empty_4           (specloopname     ) [ 0000000000000000000000]
tmp               (zext             ) [ 0000000000000000000000]
buff_addr         (getelementptr    ) [ 0000000000000000000000]
StgValue_45       (store            ) [ 0000000000000000000000]
burstread_rend    (specregionend    ) [ 0000000000000000000000]
StgValue_47       (br               ) [ 0000000111100000000000]
StgValue_48       (br               ) [ 0000000000011100000000]
i                 (phi              ) [ 0000000000001000000000]
exitcond          (icmp             ) [ 0000000000001111100000]
empty_5           (speclooptripcount) [ 0000000000000000000000]
i_1               (add              ) [ 0000000000011100000000]
StgValue_53       (br               ) [ 0000000000000000000000]
tmp_1             (zext             ) [ 0000000000000000000000]
buff_addr_1       (getelementptr    ) [ 0000000000000100000000]
a_wr_req          (writereq         ) [ 0000000000000000000000]
StgValue_58       (br               ) [ 0000000000001111100000]
buff_load         (load             ) [ 0000000000000000000000]
tmp_2             (add              ) [ 0000000000000000000000]
StgValue_61       (store            ) [ 0000000000000000000000]
StgValue_62       (br               ) [ 0000000000011100000000]
indvar4           (phi              ) [ 0000000000000010000000]
exitcond6         (icmp             ) [ 0000000000000011100000]
indvar_next5      (add              ) [ 0000000000001011100000]
StgValue_66       (br               ) [ 0000000000000000000000]
tmp_4             (zext             ) [ 0000000000000000000000]
buff_addr_2       (getelementptr    ) [ 0000000000000011000000]
buff_load_1       (load             ) [ 0000000000000010100000]
empty_6           (speclooptripcount) [ 0000000000000000000000]
burstwrite_rbegin (specregionbegin  ) [ 0000000000000000000000]
empty_7           (specpipeline     ) [ 0000000000000000000000]
empty_8           (specloopname     ) [ 0000000000000000000000]
StgValue_75       (write            ) [ 0000000000000000000000]
burstwrite_rend   (specregionend    ) [ 0000000000000000000000]
StgValue_77       (br               ) [ 0000000000001011100000]
a_wr_resp         (writeresp        ) [ 0000000000000000000000]
StgValue_83       (ret              ) [ 0000000000000000000000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="a">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="a"/></StgValue>
</bind>
</comp>

<comp id="2" class="1001" name="const_2">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="4" class="1001" name="const_4">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_ReadReq.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="example_str"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="1"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="28" class="1001" name="const_28">
<pin_list>
<pin id="29" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="30" class="1001" name="const_30">
<pin_list>
<pin id="31" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="32" class="1001" name="const_32">
<pin_list>
<pin id="33" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopTripCount"/></StgValue>
</bind>
</comp>

<comp id="34" class="1001" name="const_34">
<pin_list>
<pin id="35" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="36" class="1001" name="const_36">
<pin_list>
<pin id="37" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecRegionBegin"/></StgValue>
</bind>
</comp>

<comp id="38" class="1001" name="const_38">
<pin_list>
<pin id="39" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="burstread_OC_region_s"/></StgValue>
</bind>
</comp>

<comp id="40" class="1001" name="const_40">
<pin_list>
<pin id="41" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecPipeline"/></StgValue>
</bind>
</comp>

<comp id="42" class="1001" name="const_42">
<pin_list>
<pin id="43" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="44" class="1001" name="const_44">
<pin_list>
<pin id="45" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="46" class="1001" name="const_46">
<pin_list>
<pin id="47" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecLoopName"/></StgValue>
</bind>
</comp>

<comp id="48" class="1001" name="const_48">
<pin_list>
<pin id="49" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="memcpy_OC_buff_OC_a_s"/></StgValue>
</bind>
</comp>

<comp id="50" class="1001" name="const_50">
<pin_list>
<pin id="51" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="52" class="1001" name="const_52">
<pin_list>
<pin id="53" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecRegionEnd"/></StgValue>
</bind>
</comp>

<comp id="54" class="1001" name="const_54">
<pin_list>
<pin id="55" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteReq.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="56" class="1001" name="const_56">
<pin_list>
<pin id="57" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="58" class="1001" name="const_58">
<pin_list>
<pin id="59" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="burstwrite_OC_region"/></StgValue>
</bind>
</comp>

<comp id="60" class="1001" name="const_60">
<pin_list>
<pin id="61" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str3"/></StgValue>
</bind>
</comp>

<comp id="62" class="1001" name="const_62">
<pin_list>
<pin id="63" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="memcpy_OC_a_OC_buff_s"/></StgValue>
</bind>
</comp>

<comp id="64" class="1001" name="const_64">
<pin_list>
<pin id="65" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="66" class="1001" name="const_66">
<pin_list>
<pin id="67" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="68" class="1001" name="const_68">
<pin_list>
<pin id="69" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_WriteResp.m_axi.i32P"/></StgValue>
</bind>
</comp>

<comp id="70" class="1004" name="buff_alloca_fu_70">
<pin_list>
<pin id="71" dir="0" index="0" bw="1" slack="0"/>
<pin id="72" dir="1" index="1" bw="32" slack="2147483647"/>
</pin_list>
<bind>
<opcode="alloca(26) " fcode="alloca"/>
<opset="buff/1 "/>
</bind>
</comp>

<comp id="74" class="1004" name="grp_writeresp_fu_74">
<pin_list>
<pin id="75" dir="0" index="0" bw="1" slack="0"/>
<pin id="76" dir="0" index="1" bw="32" slack="0"/>
<pin id="77" dir="0" index="2" bw="7" slack="0"/>
<pin id="78" dir="1" index="3" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opcode="readreq(1154) writereq(1155) writeresp(1158) " fcode="writeresp"/>
<opset="a_rd_req/1 a_wr_req/12 a_wr_resp/17 "/>
</bind>
</comp>

<comp id="82" class="1004" name="a_read_read_fu_82">
<pin_list>
<pin id="83" dir="0" index="0" bw="32" slack="0"/>
<pin id="84" dir="0" index="1" bw="32" slack="0"/>
<pin id="85" dir="1" index="2" bw="32" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="a_read/9 "/>
</bind>
</comp>

<comp id="89" class="1004" name="StgValue_75_write_fu_89">
<pin_list>
<pin id="90" dir="0" index="0" bw="0" slack="0"/>
<pin id="91" dir="0" index="1" bw="32" slack="0"/>
<pin id="92" dir="0" index="2" bw="32" slack="1"/>
<pin id="93" dir="0" index="3" bw="1" slack="0"/>
<pin id="94" dir="1" index="4" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_75/16 "/>
</bind>
</comp>

<comp id="99" class="1004" name="buff_addr_gep_fu_99">
<pin_list>
<pin id="100" dir="0" index="0" bw="32" slack="2147483647"/>
<pin id="101" dir="0" index="1" bw="1" slack="0"/>
<pin id="102" dir="0" index="2" bw="6" slack="0"/>
<pin id="103" dir="1" index="3" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="buff_addr/10 "/>
</bind>
</comp>

<comp id="105" class="1004" name="grp_access_fu_105">
<pin_list>
<pin id="106" dir="0" index="0" bw="6" slack="0"/>
<pin id="107" dir="0" index="1" bw="32" slack="0"/>
<pin id="108" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="load(27) store(28) " fcode="load"/>
<opset="StgValue_45/10 buff_load/12 StgValue_61/13 buff_load_1/14 "/>
</bind>
</comp>

<comp id="110" class="1004" name="buff_addr_1_gep_fu_110">
<pin_list>
<pin id="111" dir="0" index="0" bw="32" slack="2147483647"/>
<pin id="112" dir="0" index="1" bw="1" slack="0"/>
<pin id="113" dir="0" index="2" bw="6" slack="0"/>
<pin id="114" dir="1" index="3" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="buff_addr_1/12 "/>
</bind>
</comp>

<comp id="117" class="1004" name="buff_addr_2_gep_fu_117">
<pin_list>
<pin id="118" dir="0" index="0" bw="32" slack="2147483647"/>
<pin id="119" dir="0" index="1" bw="1" slack="0"/>
<pin id="120" dir="0" index="2" bw="6" slack="0"/>
<pin id="121" dir="1" index="3" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="getelementptr(29) " fcode="getelementptr"/>
<opset="buff_addr_2/14 "/>
</bind>
</comp>

<comp id="124" class="1005" name="indvar_reg_124">
<pin_list>
<pin id="125" dir="0" index="0" bw="6" slack="1"/>
<pin id="126" dir="1" index="1" bw="6" slack="1"/>
</pin_list>
<bind>
<opset="indvar (phireg) "/>
</bind>
</comp>

<comp id="128" class="1004" name="indvar_phi_fu_128">
<pin_list>
<pin id="129" dir="0" index="0" bw="1" slack="1"/>
<pin id="130" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="131" dir="0" index="2" bw="6" slack="0"/>
<pin id="132" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="133" dir="1" index="4" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="indvar/8 "/>
</bind>
</comp>

<comp id="136" class="1005" name="i_reg_136">
<pin_list>
<pin id="137" dir="0" index="0" bw="6" slack="1"/>
<pin id="138" dir="1" index="1" bw="6" slack="1"/>
</pin_list>
<bind>
<opset="i (phireg) "/>
</bind>
</comp>

<comp id="140" class="1004" name="i_phi_fu_140">
<pin_list>
<pin id="141" dir="0" index="0" bw="6" slack="0"/>
<pin id="142" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="143" dir="0" index="2" bw="1" slack="1"/>
<pin id="144" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="145" dir="1" index="4" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="i/12 "/>
</bind>
</comp>

<comp id="147" class="1005" name="indvar4_reg_147">
<pin_list>
<pin id="148" dir="0" index="0" bw="6" slack="1"/>
<pin id="149" dir="1" index="1" bw="6" slack="1"/>
</pin_list>
<bind>
<opset="indvar4 (phireg) "/>
</bind>
</comp>

<comp id="151" class="1004" name="indvar4_phi_fu_151">
<pin_list>
<pin id="152" dir="0" index="0" bw="6" slack="0"/>
<pin id="153" dir="0" index="1" bw="0" slack="2147483647"/>
<pin id="154" dir="0" index="2" bw="1" slack="1"/>
<pin id="155" dir="0" index="3" bw="0" slack="2147483647"/>
<pin id="156" dir="1" index="4" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="phi(47) " fcode="phi"/>
<opset="indvar4/14 "/>
</bind>
</comp>

<comp id="158" class="1004" name="exitcond1_fu_158">
<pin_list>
<pin id="159" dir="0" index="0" bw="6" slack="0"/>
<pin id="160" dir="0" index="1" bw="5" slack="0"/>
<pin id="161" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="exitcond1/8 "/>
</bind>
</comp>

<comp id="164" class="1004" name="indvar_next_fu_164">
<pin_list>
<pin id="165" dir="0" index="0" bw="6" slack="0"/>
<pin id="166" dir="0" index="1" bw="1" slack="0"/>
<pin id="167" dir="1" index="2" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="indvar_next/8 "/>
</bind>
</comp>

<comp id="170" class="1004" name="tmp_fu_170">
<pin_list>
<pin id="171" dir="0" index="0" bw="6" slack="2"/>
<pin id="172" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="tmp/10 "/>
</bind>
</comp>

<comp id="175" class="1004" name="exitcond_fu_175">
<pin_list>
<pin id="176" dir="0" index="0" bw="6" slack="0"/>
<pin id="177" dir="0" index="1" bw="5" slack="0"/>
<pin id="178" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="exitcond/12 "/>
</bind>
</comp>

<comp id="181" class="1004" name="i_1_fu_181">
<pin_list>
<pin id="182" dir="0" index="0" bw="6" slack="0"/>
<pin id="183" dir="0" index="1" bw="1" slack="0"/>
<pin id="184" dir="1" index="2" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="i_1/12 "/>
</bind>
</comp>

<comp id="187" class="1004" name="tmp_1_fu_187">
<pin_list>
<pin id="188" dir="0" index="0" bw="6" slack="0"/>
<pin id="189" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="tmp_1/12 "/>
</bind>
</comp>

<comp id="192" class="1004" name="tmp_2_fu_192">
<pin_list>
<pin id="193" dir="0" index="0" bw="32" slack="0"/>
<pin id="194" dir="0" index="1" bw="8" slack="0"/>
<pin id="195" dir="1" index="2" bw="32" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="tmp_2/13 "/>
</bind>
</comp>

<comp id="199" class="1004" name="exitcond6_fu_199">
<pin_list>
<pin id="200" dir="0" index="0" bw="6" slack="0"/>
<pin id="201" dir="0" index="1" bw="5" slack="0"/>
<pin id="202" dir="1" index="2" bw="1" slack="1"/>
</pin_list>
<bind>
<opcode="icmp(45) " fcode="icmp"/>
<opset="exitcond6/14 "/>
</bind>
</comp>

<comp id="205" class="1004" name="indvar_next5_fu_205">
<pin_list>
<pin id="206" dir="0" index="0" bw="6" slack="0"/>
<pin id="207" dir="0" index="1" bw="1" slack="0"/>
<pin id="208" dir="1" index="2" bw="6" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="indvar_next5/14 "/>
</bind>
</comp>

<comp id="211" class="1004" name="tmp_4_fu_211">
<pin_list>
<pin id="212" dir="0" index="0" bw="6" slack="0"/>
<pin id="213" dir="1" index="1" bw="64" slack="0"/>
</pin_list>
<bind>
<opcode="zext(34) " fcode="zext"/>
<opset="tmp_4/14 "/>
</bind>
</comp>

<comp id="216" class="1005" name="exitcond1_reg_216">
<pin_list>
<pin id="217" dir="0" index="0" bw="1" slack="1"/>
<pin id="218" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="exitcond1 "/>
</bind>
</comp>

<comp id="220" class="1005" name="indvar_next_reg_220">
<pin_list>
<pin id="221" dir="0" index="0" bw="6" slack="0"/>
<pin id="222" dir="1" index="1" bw="6" slack="0"/>
</pin_list>
<bind>
<opset="indvar_next "/>
</bind>
</comp>

<comp id="225" class="1005" name="a_read_reg_225">
<pin_list>
<pin id="226" dir="0" index="0" bw="32" slack="1"/>
<pin id="227" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="a_read "/>
</bind>
</comp>

<comp id="230" class="1005" name="exitcond_reg_230">
<pin_list>
<pin id="231" dir="0" index="0" bw="1" slack="1"/>
<pin id="232" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="exitcond "/>
</bind>
</comp>

<comp id="234" class="1005" name="i_1_reg_234">
<pin_list>
<pin id="235" dir="0" index="0" bw="6" slack="0"/>
<pin id="236" dir="1" index="1" bw="6" slack="0"/>
</pin_list>
<bind>
<opset="i_1 "/>
</bind>
</comp>

<comp id="239" class="1005" name="buff_addr_1_reg_239">
<pin_list>
<pin id="240" dir="0" index="0" bw="6" slack="1"/>
<pin id="241" dir="1" index="1" bw="6" slack="1"/>
</pin_list>
<bind>
<opset="buff_addr_1 "/>
</bind>
</comp>

<comp id="244" class="1005" name="exitcond6_reg_244">
<pin_list>
<pin id="245" dir="0" index="0" bw="1" slack="1"/>
<pin id="246" dir="1" index="1" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<opset="exitcond6 "/>
</bind>
</comp>

<comp id="248" class="1005" name="indvar_next5_reg_248">
<pin_list>
<pin id="249" dir="0" index="0" bw="6" slack="0"/>
<pin id="250" dir="1" index="1" bw="6" slack="0"/>
</pin_list>
<bind>
<opset="indvar_next5 "/>
</bind>
</comp>

<comp id="253" class="1005" name="buff_addr_2_reg_253">
<pin_list>
<pin id="254" dir="0" index="0" bw="6" slack="1"/>
<pin id="255" dir="1" index="1" bw="6" slack="1"/>
</pin_list>
<bind>
<opset="buff_addr_2 "/>
</bind>
</comp>

<comp id="258" class="1005" name="buff_load_1_reg_258">
<pin_list>
<pin id="259" dir="0" index="0" bw="32" slack="1"/>
<pin id="260" dir="1" index="1" bw="32" slack="1"/>
</pin_list>
<bind>
<opset="buff_load_1 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="73"><net_src comp="2" pin="0"/><net_sink comp="70" pin=0"/></net>

<net id="79"><net_src comp="4" pin="0"/><net_sink comp="74" pin=0"/></net>

<net id="80"><net_src comp="0" pin="0"/><net_sink comp="74" pin=1"/></net>

<net id="81"><net_src comp="6" pin="0"/><net_sink comp="74" pin=2"/></net>

<net id="86"><net_src comp="30" pin="0"/><net_sink comp="82" pin=0"/></net>

<net id="87"><net_src comp="0" pin="0"/><net_sink comp="82" pin=1"/></net>

<net id="88"><net_src comp="54" pin="0"/><net_sink comp="74" pin=0"/></net>

<net id="95"><net_src comp="64" pin="0"/><net_sink comp="89" pin=0"/></net>

<net id="96"><net_src comp="0" pin="0"/><net_sink comp="89" pin=1"/></net>

<net id="97"><net_src comp="66" pin="0"/><net_sink comp="89" pin=3"/></net>

<net id="98"><net_src comp="68" pin="0"/><net_sink comp="74" pin=0"/></net>

<net id="104"><net_src comp="50" pin="0"/><net_sink comp="99" pin=1"/></net>

<net id="109"><net_src comp="99" pin="3"/><net_sink comp="105" pin=0"/></net>

<net id="115"><net_src comp="50" pin="0"/><net_sink comp="110" pin=1"/></net>

<net id="116"><net_src comp="110" pin="3"/><net_sink comp="105" pin=0"/></net>

<net id="122"><net_src comp="50" pin="0"/><net_sink comp="117" pin=1"/></net>

<net id="123"><net_src comp="117" pin="3"/><net_sink comp="105" pin=0"/></net>

<net id="127"><net_src comp="24" pin="0"/><net_sink comp="124" pin=0"/></net>

<net id="134"><net_src comp="124" pin="1"/><net_sink comp="128" pin=0"/></net>

<net id="135"><net_src comp="128" pin="4"/><net_sink comp="124" pin=0"/></net>

<net id="139"><net_src comp="24" pin="0"/><net_sink comp="136" pin=0"/></net>

<net id="146"><net_src comp="136" pin="1"/><net_sink comp="140" pin=2"/></net>

<net id="150"><net_src comp="24" pin="0"/><net_sink comp="147" pin=0"/></net>

<net id="157"><net_src comp="147" pin="1"/><net_sink comp="151" pin=2"/></net>

<net id="162"><net_src comp="128" pin="4"/><net_sink comp="158" pin=0"/></net>

<net id="163"><net_src comp="26" pin="0"/><net_sink comp="158" pin=1"/></net>

<net id="168"><net_src comp="128" pin="4"/><net_sink comp="164" pin=0"/></net>

<net id="169"><net_src comp="28" pin="0"/><net_sink comp="164" pin=1"/></net>

<net id="173"><net_src comp="124" pin="1"/><net_sink comp="170" pin=0"/></net>

<net id="174"><net_src comp="170" pin="1"/><net_sink comp="99" pin=2"/></net>

<net id="179"><net_src comp="140" pin="4"/><net_sink comp="175" pin=0"/></net>

<net id="180"><net_src comp="26" pin="0"/><net_sink comp="175" pin=1"/></net>

<net id="185"><net_src comp="140" pin="4"/><net_sink comp="181" pin=0"/></net>

<net id="186"><net_src comp="28" pin="0"/><net_sink comp="181" pin=1"/></net>

<net id="190"><net_src comp="140" pin="4"/><net_sink comp="187" pin=0"/></net>

<net id="191"><net_src comp="187" pin="1"/><net_sink comp="110" pin=2"/></net>

<net id="196"><net_src comp="105" pin="2"/><net_sink comp="192" pin=0"/></net>

<net id="197"><net_src comp="56" pin="0"/><net_sink comp="192" pin=1"/></net>

<net id="198"><net_src comp="192" pin="2"/><net_sink comp="105" pin=1"/></net>

<net id="203"><net_src comp="151" pin="4"/><net_sink comp="199" pin=0"/></net>

<net id="204"><net_src comp="26" pin="0"/><net_sink comp="199" pin=1"/></net>

<net id="209"><net_src comp="151" pin="4"/><net_sink comp="205" pin=0"/></net>

<net id="210"><net_src comp="28" pin="0"/><net_sink comp="205" pin=1"/></net>

<net id="214"><net_src comp="151" pin="4"/><net_sink comp="211" pin=0"/></net>

<net id="215"><net_src comp="211" pin="1"/><net_sink comp="117" pin=2"/></net>

<net id="219"><net_src comp="158" pin="2"/><net_sink comp="216" pin=0"/></net>

<net id="223"><net_src comp="164" pin="2"/><net_sink comp="220" pin=0"/></net>

<net id="224"><net_src comp="220" pin="1"/><net_sink comp="128" pin=2"/></net>

<net id="228"><net_src comp="82" pin="2"/><net_sink comp="225" pin=0"/></net>

<net id="229"><net_src comp="225" pin="1"/><net_sink comp="105" pin=1"/></net>

<net id="233"><net_src comp="175" pin="2"/><net_sink comp="230" pin=0"/></net>

<net id="237"><net_src comp="181" pin="2"/><net_sink comp="234" pin=0"/></net>

<net id="238"><net_src comp="234" pin="1"/><net_sink comp="140" pin=0"/></net>

<net id="242"><net_src comp="110" pin="3"/><net_sink comp="239" pin=0"/></net>

<net id="243"><net_src comp="239" pin="1"/><net_sink comp="105" pin=0"/></net>

<net id="247"><net_src comp="199" pin="2"/><net_sink comp="244" pin=0"/></net>

<net id="251"><net_src comp="205" pin="2"/><net_sink comp="248" pin=0"/></net>

<net id="252"><net_src comp="248" pin="1"/><net_sink comp="151" pin=0"/></net>

<net id="256"><net_src comp="117" pin="3"/><net_sink comp="253" pin=0"/></net>

<net id="257"><net_src comp="253" pin="1"/><net_sink comp="105" pin=0"/></net>

<net id="261"><net_src comp="105" pin="2"/><net_sink comp="258" pin=0"/></net>

<net id="262"><net_src comp="258" pin="1"/><net_sink comp="89" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: a | {12 16 17 18 19 20 21 }
 - Input state : 
	Port: example : a | {1 2 3 4 5 6 7 9 }
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
		exitcond1 : 1
		indvar_next : 1
		StgValue_37 : 2
	State 9
	State 10
		buff_addr : 1
		StgValue_45 : 2
		burstread_rend : 1
	State 11
	State 12
		exitcond : 1
		i_1 : 1
		StgValue_53 : 2
		tmp_1 : 1
		buff_addr_1 : 2
		buff_load : 3
	State 13
		tmp_2 : 1
		StgValue_61 : 2
	State 14
		exitcond6 : 1
		indvar_next5 : 1
		StgValue_66 : 2
		tmp_4 : 1
		buff_addr_2 : 2
		buff_load_1 : 3
	State 15
	State 16
		burstwrite_rend : 1
	State 17
	State 18
	State 19
	State 20
	State 21


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|-------------------------|---------|---------|
| Operation|     Functional Unit     |    FF   |   LUT   |
|----------|-------------------------|---------|---------|
|          |    indvar_next_fu_164   |    0    |    15   |
|    add   |        i_1_fu_181       |    0    |    15   |
|          |       tmp_2_fu_192      |    0    |    39   |
|          |   indvar_next5_fu_205   |    0    |    15   |
|----------|-------------------------|---------|---------|
|          |     exitcond1_fu_158    |    0    |    11   |
|   icmp   |     exitcond_fu_175     |    0    |    11   |
|          |     exitcond6_fu_199    |    0    |    11   |
|----------|-------------------------|---------|---------|
| writeresp|   grp_writeresp_fu_74   |    0    |    0    |
|----------|-------------------------|---------|---------|
|   read   |    a_read_read_fu_82    |    0    |    0    |
|----------|-------------------------|---------|---------|
|   write  | StgValue_75_write_fu_89 |    0    |    0    |
|----------|-------------------------|---------|---------|
|          |        tmp_fu_170       |    0    |    0    |
|   zext   |       tmp_1_fu_187      |    0    |    0    |
|          |       tmp_4_fu_211      |    0    |    0    |
|----------|-------------------------|---------|---------|
|   Total  |                         |    0    |   117   |
|----------|-------------------------|---------|---------|

Memories:
+----+--------+--------+--------+
|    |  BRAM  |   FF   |   LUT  |
+----+--------+--------+--------+
|buff|    1   |    0   |    0   |
+----+--------+--------+--------+
|Total|    1   |    0   |    0   |
+----+--------+--------+--------+

* Register list:
+--------------------+--------+
|                    |   FF   |
+--------------------+--------+
|   a_read_reg_225   |   32   |
| buff_addr_1_reg_239|    6   |
| buff_addr_2_reg_253|    6   |
| buff_load_1_reg_258|   32   |
|  exitcond1_reg_216 |    1   |
|  exitcond6_reg_244 |    1   |
|  exitcond_reg_230  |    1   |
|     i_1_reg_234    |    6   |
|      i_reg_136     |    6   |
|   indvar4_reg_147  |    6   |
|indvar_next5_reg_248|    6   |
| indvar_next_reg_220|    6   |
|   indvar_reg_124   |    6   |
+--------------------+--------+
|        Total       |   115  |
+--------------------+--------+

* Multiplexer (MUX) list: 
|---------------------|------|------|------|--------||---------||---------|
|         Comp        |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|---------------------|------|------|------|--------||---------||---------|
| grp_writeresp_fu_74 |  p0  |   3  |   1  |    3   |
|  grp_access_fu_105  |  p0  |   5  |   6  |   30   ||    27   |
|  grp_access_fu_105  |  p1  |   2  |  32  |   64   ||    9    |
|    indvar_reg_124   |  p0  |   2  |   6  |   12   ||    9    |
|---------------------|------|------|------|--------||---------||---------|
|        Total        |      |      |      |   109  ||  5.597  ||    45   |
|---------------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+--------+
|           |  BRAM  |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+--------+
|  Function |    -   |    -   |    0   |   117  |
|   Memory  |    1   |    -   |    0   |    0   |
|Multiplexer|    -   |    5   |    -   |   45   |
|  Register |    -   |    -   |   115  |    -   |
+-----------+--------+--------+--------+--------+
|   Total   |    1   |    5   |   115  |   162  |
+-----------+--------+--------+--------+--------+
