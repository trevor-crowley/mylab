

================================================================
== Vivado HLS Report for 'mandelbrot'
================================================================
* Date:           Sun Feb 25 22:13:22 2018

* Version:        2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)
* Project:        mandelbrot
* Solution:       solution3
* Product family: artix7
* Target device:  xc7a200tfbg676-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      8.42|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  515|  515|  515|  515|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- myloop  |  512|  512|         2|          -|          -|   256|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 5
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / true
4 --> 
	5  / (!exitcond)
5 --> 
	4  / true

* FSM state operations: 

 <State 1> : 7.89ns
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "%im_read = call float @_ssdm_op_Read.ap_auto.float(float %im) nounwind"
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "%re_read = call float @_ssdm_op_Read.ap_auto.float(float %re) nounwind"
ST_1 : Operation 8 [1/1] (4.33ns)   --->   "%d_assign = fpext float %re_read to double" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 108 'Float2Double' <Latency = 0> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%ireg_V = bitcast double %d_assign to i64" [mandelbrot/C/mandelbrot.cpp:17]
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%tmp_4 = trunc i64 %ireg_V to i63" [mandelbrot/C/mandelbrot.cpp:17]
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%isneg = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V, i32 63)" [mandelbrot/C/mandelbrot.cpp:17]
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%exp_tmp_V = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V, i32 52, i32 62)" [mandelbrot/C/mandelbrot.cpp:17]
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%tmp_2 = zext i11 %exp_tmp_V to i12" [mandelbrot/C/mandelbrot.cpp:17]
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%tmp_11 = trunc i64 %ireg_V to i52" [mandelbrot/C/mandelbrot.cpp:17]
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%tmp = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_11)" [mandelbrot/C/mandelbrot.cpp:17]
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%p_Result_s = zext i53 %tmp to i54" [mandelbrot/C/mandelbrot.cpp:17]
ST_1 : Operation 17 [1/1] (2.73ns)   --->   "%man_V_1 = sub i54 0, %p_Result_s" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 18 [1/1] (2.34ns)   --->   "%tmp_7 = icmp eq i63 %tmp_4, 0" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 19 [1/1] (1.77ns)   --->   "%F2 = sub i12 1075, %tmp_2" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 20 [1/1] (1.61ns)   --->   "%tmp_9 = icmp sgt i12 %F2, 28" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 21 [1/1] (1.77ns)   --->   "%tmp_s = add i12 -28, %F2" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 22 [1/1] (1.77ns)   --->   "%tmp_1 = sub i12 28, %F2" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 23 [1/1] (4.33ns)   --->   "%d_assign_1 = fpext float %im_read to double" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 108 'Float2Double' <Latency = 0> <II = 1> <Delay = 4.33> <FuncUnit> <Opcode : 'fpext'> <InPorts = 1> <OutPorts = 1>
ST_1 : Operation 24 [1/1] (0.00ns)   --->   "%ireg_V_1 = bitcast double %d_assign_1 to i64" [mandelbrot/C/mandelbrot.cpp:19]
ST_1 : Operation 25 [1/1] (0.00ns)   --->   "%tmp_38 = trunc i64 %ireg_V_1 to i63" [mandelbrot/C/mandelbrot.cpp:19]
ST_1 : Operation 26 [1/1] (0.00ns)   --->   "%isneg_1 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %ireg_V_1, i32 63)" [mandelbrot/C/mandelbrot.cpp:19]
ST_1 : Operation 27 [1/1] (0.00ns)   --->   "%exp_tmp_V_1 = call i11 @_ssdm_op_PartSelect.i11.i64.i32.i32(i64 %ireg_V_1, i32 52, i32 62)" [mandelbrot/C/mandelbrot.cpp:19]
ST_1 : Operation 28 [1/1] (0.00ns)   --->   "%tmp_15 = zext i11 %exp_tmp_V_1 to i12" [mandelbrot/C/mandelbrot.cpp:19]
ST_1 : Operation 29 [1/1] (0.00ns)   --->   "%tmp_40 = trunc i64 %ireg_V_1 to i52" [mandelbrot/C/mandelbrot.cpp:19]
ST_1 : Operation 30 [1/1] (0.00ns)   --->   "%tmp_16 = call i53 @_ssdm_op_BitConcatenate.i53.i1.i52(i1 true, i52 %tmp_40)" [mandelbrot/C/mandelbrot.cpp:19]
ST_1 : Operation 31 [1/1] (0.00ns)   --->   "%p_Result_1 = zext i53 %tmp_16 to i54" [mandelbrot/C/mandelbrot.cpp:19]
ST_1 : Operation 32 [1/1] (2.73ns)   --->   "%man_V_4 = sub i54 0, %p_Result_1" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 33 [1/1] (2.34ns)   --->   "%tmp_17 = icmp eq i63 %tmp_38, 0" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 34 [1/1] (1.77ns)   --->   "%F2_1 = sub i12 1075, %tmp_15" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 35 [1/1] (1.61ns)   --->   "%tmp_18 = icmp sgt i12 %F2_1, 28" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 36 [1/1] (1.77ns)   --->   "%tmp_19 = add i12 -28, %F2_1" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_1 : Operation 37 [1/1] (1.77ns)   --->   "%tmp_20 = sub i12 28, %F2_1" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

 <State 2> : 8.42ns
ST_2 : Operation 38 [1/1] (1.15ns)   --->   "%p_Val2_18 = select i1 %isneg, i54 %man_V_1, i54 %p_Result_s" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 39 [1/1] (1.15ns)   --->   "%sh_amt = select i1 %tmp_9, i12 %tmp_s, i12 %tmp_1" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 40 [1/1] (0.00ns)   --->   "%sh_amt_cast = sext i12 %sh_amt to i32" [mandelbrot/C/mandelbrot.cpp:17]
ST_2 : Operation 41 [1/1] (1.61ns)   --->   "%tmp_3 = icmp eq i12 %F2, 28" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 42 [1/1] (0.00ns)   --->   "%tmp_23 = trunc i54 %p_Val2_18 to i32" [mandelbrot/C/mandelbrot.cpp:17]
ST_2 : Operation 43 [1/1] (1.61ns)   --->   "%tmp_5 = icmp ult i12 %sh_amt, 54" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_25 = call i7 @_ssdm_op_PartSelect.i7.i12.i32.i32(i12 %sh_amt, i32 5, i32 11)" [mandelbrot/C/mandelbrot.cpp:17]
ST_2 : Operation 45 [1/1] (1.23ns)   --->   "%icmp = icmp eq i7 %tmp_25, 0" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_3)   --->   "%tmp_8 = zext i32 %sh_amt_cast to i54" [mandelbrot/C/mandelbrot.cpp:17]
ST_2 : Operation 47 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_3)   --->   "%tmp_6 = ashr i54 %p_Val2_18, %tmp_8" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.30> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_3)   --->   "%tmp_28 = trunc i54 %tmp_6 to i32" [mandelbrot/C/mandelbrot.cpp:17]
ST_2 : Operation 49 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_3)   --->   "%p_Val2_0_i_i_i1 = select i1 %isneg, i32 -1, i32 0" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 50 [1/1] (3.47ns) (out node of the LUT)   --->   "%p_Val2_3 = select i1 %tmp_5, i32 %tmp_28, i32 %p_Val2_0_i_i_i1" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 51 [1/1] (1.61ns)   --->   "%tmp_12 = icmp sgt i12 %tmp_s, 54" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 52 [1/1] (1.77ns)   --->   "%tmp_13 = add i12 -29, %F2" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 53 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_4)   --->   "%tmp_17_cast = sext i12 %tmp_13 to i32" [mandelbrot/C/mandelbrot.cpp:17]
ST_2 : Operation 54 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_4)   --->   "%tmp_37 = call i1 @_ssdm_op_BitSelect.i1.i54.i32(i54 %p_Val2_18, i32 %tmp_17_cast)" [mandelbrot/C/mandelbrot.cpp:17]
ST_2 : Operation 55 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_4)   --->   "%qb = select i1 %tmp_12, i1 %isneg, i1 %tmp_37" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 56 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_4)   --->   "%tmp_14 = zext i1 %qb to i32" [mandelbrot/C/mandelbrot.cpp:17]
ST_2 : Operation 57 [1/1] (2.18ns) (out node of the LUT)   --->   "%p_Val2_4 = add nsw i32 %tmp_14, %p_Val2_3" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 58 [1/1] (1.15ns)   --->   "%p_Val2_21 = select i1 %isneg_1, i54 %man_V_4, i54 %p_Result_1" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 59 [1/1] (1.15ns)   --->   "%sh_amt_1 = select i1 %tmp_18, i12 %tmp_19, i12 %tmp_20" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 60 [1/1] (0.00ns)   --->   "%sh_amt_1_cast = sext i12 %sh_amt_1 to i32" [mandelbrot/C/mandelbrot.cpp:19]
ST_2 : Operation 61 [1/1] (1.61ns)   --->   "%tmp_21 = icmp eq i12 %F2_1, 28" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_41 = trunc i54 %p_Val2_21 to i32" [mandelbrot/C/mandelbrot.cpp:19]
ST_2 : Operation 63 [1/1] (1.61ns)   --->   "%tmp_22 = icmp ult i12 %sh_amt_1, 54" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 64 [1/1] (0.00ns)   --->   "%tmp_42 = call i7 @_ssdm_op_PartSelect.i7.i12.i32.i32(i12 %sh_amt_1, i32 5, i32 11)" [mandelbrot/C/mandelbrot.cpp:19]
ST_2 : Operation 65 [1/1] (1.23ns)   --->   "%icmp5 = icmp eq i7 %tmp_42, 0" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_8)   --->   "%tmp_24 = zext i32 %sh_amt_1_cast to i54" [mandelbrot/C/mandelbrot.cpp:19]
ST_2 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_8)   --->   "%tmp_26 = ashr i54 %p_Val2_21, %tmp_24" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.30> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_8)   --->   "%tmp_43 = trunc i54 %tmp_26 to i32" [mandelbrot/C/mandelbrot.cpp:19]
ST_2 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_8)   --->   "%p_Val2_0_i_i_i3 = select i1 %isneg_1, i32 -1, i32 0" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 70 [1/1] (3.47ns) (out node of the LUT)   --->   "%p_Val2_8 = select i1 %tmp_22, i32 %tmp_43, i32 %p_Val2_0_i_i_i3" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 71 [1/1] (1.61ns)   --->   "%tmp_29 = icmp sgt i12 %tmp_19, 54" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 72 [1/1] (1.77ns)   --->   "%tmp_30 = add i12 -29, %F2_1" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 73 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_9)   --->   "%tmp_39_cast = sext i12 %tmp_30 to i32" [mandelbrot/C/mandelbrot.cpp:19]
ST_2 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_9)   --->   "%tmp_44 = call i1 @_ssdm_op_BitSelect.i1.i54.i32(i54 %p_Val2_21, i32 %tmp_39_cast)" [mandelbrot/C/mandelbrot.cpp:19]
ST_2 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_9)   --->   "%qb_1 = select i1 %tmp_29, i1 %isneg_1, i1 %tmp_44" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_2 : Operation 76 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_9)   --->   "%tmp_31 = zext i1 %qb_1 to i32" [mandelbrot/C/mandelbrot.cpp:19]
ST_2 : Operation 77 [1/1] (2.18ns) (out node of the LUT)   --->   "%p_Val2_9 = add nsw i32 %tmp_31, %p_Val2_8" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>

 <State 3> : 6.38ns
ST_3 : Operation 78 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float %re) nounwind, !map !88"
ST_3 : Operation 79 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(float %im) nounwind, !map !94"
ST_3 : Operation 80 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i16* %outp) nounwind, !map !98"
ST_3 : Operation 81 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([11 x i8]* @mandelbrot_str) nounwind"
ST_3 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_5)   --->   "%tmp_10 = shl i32 %tmp_23, %sh_amt_cast" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.30> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node sel_tmp8)   --->   "%sel_tmp1 = xor i1 %tmp_7, true" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node sel_tmp8)   --->   "%sel_tmp2 = and i1 %tmp_3, %sel_tmp1" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 85 [1/1] (0.00ns) (grouped into LUT with out node sel_tmp8)   --->   "%sel_tmp3 = select i1 %sel_tmp2, i32 %tmp_23, i32 0" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 86 [1/1] (0.57ns)   --->   "%sel_tmp6_demorgan = or i1 %tmp_7, %tmp_3" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 87 [1/1] (0.00ns) (grouped into LUT with out node sel_tmp8)   --->   "%sel_tmp6 = xor i1 %sel_tmp6_demorgan, true" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 88 [1/1] (0.00ns) (grouped into LUT with out node sel_tmp8)   --->   "%sel_tmp7 = and i1 %tmp_9, %sel_tmp6" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 89 [1/1] (1.15ns) (out node of the LUT)   --->   "%sel_tmp8 = select i1 %sel_tmp7, i32 %p_Val2_4, i32 %sel_tmp3" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 90 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_5)   --->   "%sel_tmp13_demorgan = or i1 %sel_tmp6_demorgan, %tmp_9" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 91 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_5)   --->   "%sel_tmp = xor i1 %sel_tmp13_demorgan, true" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 92 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_5)   --->   "%sel_tmp4 = and i1 %icmp, %sel_tmp" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 93 [1/1] (3.30ns) (out node of the LUT)   --->   "%p_Val2_5 = select i1 %sel_tmp4, i32 %tmp_10, i32 %sel_tmp8" [mandelbrot/C/mandelbrot.cpp:17]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 94 [1/1] (1.35ns)   --->   "store i32 %p_Val2_5, i32* @z_re_V, align 4" [mandelbrot/C/mandelbrot.cpp:18]
ST_3 : Operation 95 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_20)   --->   "%tmp_27 = shl i32 %tmp_41, %sh_amt_1_cast" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 28 'Shift' <Latency = 0> <II = 1> <Delay = 3.30> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 96 [1/1] (0.00ns) (grouped into LUT with out node sel_tmp13)   --->   "%sel_tmp5 = xor i1 %tmp_17, true" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 97 [1/1] (0.00ns) (grouped into LUT with out node sel_tmp13)   --->   "%sel_tmp9 = and i1 %tmp_21, %sel_tmp5" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 98 [1/1] (0.00ns) (grouped into LUT with out node sel_tmp13)   --->   "%sel_tmp10 = select i1 %sel_tmp9, i32 %tmp_41, i32 0" [mandelbrot/C/mandelbrot.cpp:35]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 99 [1/1] (0.57ns)   --->   "%sel_tmp24_demorgan = or i1 %tmp_17, %tmp_21" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 100 [1/1] (0.00ns) (grouped into LUT with out node sel_tmp13)   --->   "%sel_tmp11 = xor i1 %sel_tmp24_demorgan, true" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node sel_tmp13)   --->   "%sel_tmp12 = and i1 %tmp_18, %sel_tmp11" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 102 [1/1] (1.15ns) (out node of the LUT)   --->   "%sel_tmp13 = select i1 %sel_tmp12, i32 %p_Val2_9, i32 %sel_tmp10" [mandelbrot/C/mandelbrot.cpp:35]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 103 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_20)   --->   "%sel_tmp31_demorgan = or i1 %sel_tmp24_demorgan, %tmp_18" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_20)   --->   "%sel_tmp14 = xor i1 %sel_tmp31_demorgan, true" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 105 [1/1] (0.00ns) (grouped into LUT with out node p_Val2_20)   --->   "%sel_tmp15 = and i1 %icmp5, %sel_tmp14" [mandelbrot/C/mandelbrot.cpp:19]   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.57> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 106 [1/1] (3.30ns) (out node of the LUT)   --->   "%p_Val2_20 = select i1 %sel_tmp15, i32 %tmp_27, i32 %sel_tmp13" [mandelbrot/C/mandelbrot.cpp:35]   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 1.15> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 107 [1/1] (1.35ns)   --->   "store i32 %p_Val2_20, i32* @z_im_V, align 4" [mandelbrot/C/mandelbrot.cpp:20]
ST_3 : Operation 108 [1/1] (0.00ns)   --->   "%tmp_32 = call i60 @_ssdm_op_BitConcatenate.i60.i32.i28(i32 %p_Val2_20, i28 0)" [mandelbrot/C/mandelbrot.cpp:35]
ST_3 : Operation 109 [1/1] (1.35ns)   --->   "br label %0" [mandelbrot/C/mandelbrot.cpp:24]

 <State 4> : 6.95ns
ST_4 : Operation 110 [1/1] (0.00ns)   --->   "%i = phi i9 [ 0, %codeRepl_ifconv ], [ %i_1, %"ap_fixed_base<64, 8, true, 5, 3, 0>.exit183" ]"
ST_4 : Operation 111 [1/1] (1.34ns)   --->   "%exitcond = icmp eq i9 %i, -256" [mandelbrot/C/mandelbrot.cpp:24]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 1.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 112 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 256, i64 256, i64 256) nounwind"
ST_4 : Operation 113 [1/1] (1.73ns)   --->   "%i_1 = add i9 %i, 1" [mandelbrot/C/mandelbrot.cpp:24]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 114 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %1, label %"ap_fixed_base<64, 8, true, 5, 3, 0>.exit183"" [mandelbrot/C/mandelbrot.cpp:24]
ST_4 : Operation 115 [1/1] (0.00ns)   --->   "%z_re_V_load = load i32* @z_re_V, align 4" [mandelbrot/C/mandelbrot.cpp:27]
ST_4 : Operation 116 [1/1] (0.00ns)   --->   "%OP1_V = sext i32 %z_re_V_load to i64" [mandelbrot/C/mandelbrot.cpp:27]
ST_4 : Operation 117 [1/1] (6.88ns)   --->   "%p_Val2_2 = mul nsw i64 %OP1_V, %OP1_V" [mandelbrot/C/mandelbrot.cpp:27]   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 118 [1/1] (0.00ns)   --->   "%p_Val2_7 = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %p_Val2_2, i32 28, i32 59)" [mandelbrot/C/mandelbrot.cpp:27]
ST_4 : Operation 119 [1/1] (0.00ns)   --->   "%tmp_45 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %p_Val2_2, i32 27)" [mandelbrot/C/mandelbrot.cpp:27]
ST_4 : Operation 120 [1/1] (0.00ns)   --->   "%z_im_V_load = load i32* @z_im_V, align 4" [mandelbrot/C/mandelbrot.cpp:28]
ST_4 : Operation 121 [1/1] (0.00ns)   --->   "%OP1_V_1 = sext i32 %z_im_V_load to i64" [mandelbrot/C/mandelbrot.cpp:28]
ST_4 : Operation 122 [1/1] (6.88ns)   --->   "%p_Val2_11 = mul nsw i64 %OP1_V_1, %OP1_V_1" [mandelbrot/C/mandelbrot.cpp:28]   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 123 [1/1] (0.00ns)   --->   "%p_Val2_12 = call i32 @_ssdm_op_PartSelect.i32.i64.i32.i32(i64 %p_Val2_11, i32 28, i32 59)" [mandelbrot/C/mandelbrot.cpp:28]
ST_4 : Operation 124 [1/1] (0.00ns)   --->   "%tmp_46 = call i1 @_ssdm_op_BitSelect.i1.i64.i32(i64 %p_Val2_11, i32 27)" [mandelbrot/C/mandelbrot.cpp:28]
ST_4 : Operation 125 [1/1] (0.00ns)   --->   "%r_V = call i33 @_ssdm_op_BitConcatenate.i33.i32.i1(i32 %z_re_V_load, i1 false)" [mandelbrot/C/mandelbrot.cpp:35]
ST_4 : Operation 126 [1/1] (0.00ns)   --->   "%OP1_V_cast = sext i33 %r_V to i65" [mandelbrot/C/mandelbrot.cpp:35]
ST_4 : Operation 127 [1/1] (0.00ns)   --->   "%OP2_V_2_cast = sext i32 %z_im_V_load to i65" [mandelbrot/C/mandelbrot.cpp:35]
ST_4 : Operation 128 [1/1] (6.95ns)   --->   "%p_Val2_14 = mul i65 %OP2_V_2_cast, %OP1_V_cast" [mandelbrot/C/mandelbrot.cpp:35]   --->   Core 16 'Mul' <Latency = 0> <II = 1> <Delay = 6.95> <FuncUnit> <Opcode : 'mul'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 129 [1/1] (0.00ns)   --->   "%tmp_47 = trunc i65 %p_Val2_14 to i60" [mandelbrot/C/mandelbrot.cpp:35]
ST_4 : Operation 130 [1/1] (0.00ns)   --->   "%tmp_48 = call i1 @_ssdm_op_BitSelect.i1.i65.i32(i65 %p_Val2_14, i32 27)" [mandelbrot/C/mandelbrot.cpp:35]
ST_4 : Operation 131 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i16P(i16* %outp, i16 0) nounwind" [mandelbrot/C/mandelbrot.cpp:42]
ST_4 : Operation 132 [1/1] (0.00ns)   --->   "ret void" [mandelbrot/C/mandelbrot.cpp:46]

 <State 5> : 7.25ns
ST_5 : Operation 133 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str1) nounwind" [mandelbrot/C/mandelbrot.cpp:24]
ST_5 : Operation 134 [1/1] (0.00ns)   --->   "%tmp_33 = zext i1 %tmp_45 to i32" [mandelbrot/C/mandelbrot.cpp:27]
ST_5 : Operation 135 [1/1] (2.18ns)   --->   "%p_Val2_10 = add nsw i32 %tmp_33, %p_Val2_7" [mandelbrot/C/mandelbrot.cpp:27]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 136 [1/1] (0.00ns)   --->   "%tmp_34 = zext i1 %tmp_46 to i32" [mandelbrot/C/mandelbrot.cpp:28]
ST_5 : Operation 137 [1/1] (2.18ns)   --->   "%p_Val2_13 = add nsw i32 %tmp_34, %p_Val2_12" [mandelbrot/C/mandelbrot.cpp:28]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 138 [1/1] (2.90ns)   --->   "%p_Val2_15 = add i60 %tmp_47, %tmp_32" [mandelbrot/C/mandelbrot.cpp:35]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 139 [1/1] (0.00ns)   --->   "%p_Val2_16 = call i32 @_ssdm_op_PartSelect.i32.i60.i32.i32(i60 %p_Val2_15, i32 28, i32 59)" [mandelbrot/C/mandelbrot.cpp:35]
ST_5 : Operation 140 [1/1] (0.00ns)   --->   "%tmp_35 = zext i1 %tmp_48 to i32" [mandelbrot/C/mandelbrot.cpp:35]
ST_5 : Operation 141 [1/1] (2.18ns)   --->   "%p_Val2_17 = add nsw i32 %tmp_35, %p_Val2_16" [mandelbrot/C/mandelbrot.cpp:35]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.18> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 142 [1/1] (1.35ns)   --->   "store i32 %p_Val2_17, i32* @z_im_V, align 4" [mandelbrot/C/mandelbrot.cpp:35]
ST_5 : Operation 143 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%p_Val2_s = sub i32 %p_Val2_10, %p_Val2_13" [mandelbrot/C/mandelbrot.cpp:36]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.85> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 144 [1/1] (3.71ns) (root node of TernaryAdder)   --->   "%p_Val2_1 = add i32 %p_Val2_5, %p_Val2_s" [mandelbrot/C/mandelbrot.cpp:36]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.85> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_5 : Operation 145 [1/1] (1.35ns)   --->   "store i32 %p_Val2_1, i32* @z_re_V, align 4" [mandelbrot/C/mandelbrot.cpp:36]
ST_5 : Operation 146 [1/1] (0.00ns)   --->   "br label %0" [mandelbrot/C/mandelbrot.cpp:24]


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 7.89ns
The critical path consists of the following:
	wire read on port 'im' [10]  (0 ns)
	'fpext' operation ('d', mandelbrot/C/mandelbrot.cpp:19) [60]  (4.33 ns)
	'sub' operation ('F2', mandelbrot/C/mandelbrot.cpp:19) [72]  (1.78 ns)
	'add' operation ('tmp_19', mandelbrot/C/mandelbrot.cpp:19) [74]  (1.78 ns)

 <State 2>: 8.42ns
The critical path consists of the following:
	'select' operation ('sh_amt', mandelbrot/C/mandelbrot.cpp:17) [28]  (1.15 ns)
	'icmp' operation ('tmp_5', mandelbrot/C/mandelbrot.cpp:17) [32]  (1.61 ns)
	'select' operation ('__Val2__', mandelbrot/C/mandelbrot.cpp:17) [40]  (3.47 ns)
	'add' operation ('__Val2__', mandelbrot/C/mandelbrot.cpp:17) [47]  (2.18 ns)

 <State 3>: 6.38ns
The critical path consists of the following:
	'or' operation ('sel_tmp6_demorgan', mandelbrot/C/mandelbrot.cpp:17) [51]  (0.57 ns)
	'xor' operation ('sel_tmp6', mandelbrot/C/mandelbrot.cpp:17) [52]  (0 ns)
	'and' operation ('sel_tmp7', mandelbrot/C/mandelbrot.cpp:17) [53]  (0 ns)
	'select' operation ('sel_tmp8', mandelbrot/C/mandelbrot.cpp:17) [54]  (1.15 ns)
	'select' operation ('__Val2__', mandelbrot/C/mandelbrot.cpp:17) [58]  (3.31 ns)
	'store' operation (mandelbrot/C/mandelbrot.cpp:18) of variable '__Val2__', mandelbrot/C/mandelbrot.cpp:17 on static variable 'z_re_V' [59]  (1.35 ns)

 <State 4>: 6.95ns
The critical path consists of the following:
	'load' operation ('z_re_V_load', mandelbrot/C/mandelbrot.cpp:27) on static variable 'z_re_V' [118]  (0 ns)
	'mul' operation ('__Val2__', mandelbrot/C/mandelbrot.cpp:35) [135]  (6.95 ns)

 <State 5>: 7.25ns
The critical path consists of the following:
	'add' operation ('__Val2__', mandelbrot/C/mandelbrot.cpp:27) [124]  (2.18 ns)
	'sub' operation ('p_Val2_s', mandelbrot/C/mandelbrot.cpp:36) [143]  (0 ns)
	'add' operation ('p_Val2_1', mandelbrot/C/mandelbrot.cpp:36) [144]  (3.72 ns)
	'store' operation (mandelbrot/C/mandelbrot.cpp:36) of variable 'p_Val2_1', mandelbrot/C/mandelbrot.cpp:36 on static variable 'z_re_V' [145]  (1.35 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
