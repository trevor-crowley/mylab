-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2017.4
-- Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity design_1_v_tpg_0_0_tpgPatternDPColorSqu is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    y : IN STD_LOGIC_VECTOR (15 downto 0);
    x : IN STD_LOGIC_VECTOR (15 downto 0);
    color : IN STD_LOGIC_VECTOR (7 downto 0);
    dpDynamicRange : IN STD_LOGIC_VECTOR (7 downto 0);
    dpYUVCoef : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    ap_return_2 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of design_1_v_tpg_0_0_tpgPatternDPColorSqu is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv6_3F : STD_LOGIC_VECTOR (5 downto 0) := "111111";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv10_3F : STD_LOGIC_VECTOR (9 downto 0) := "0000111111";
    constant ap_const_lv10_3C1 : STD_LOGIC_VECTOR (9 downto 0) := "1111000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal vBarSel_1 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    signal yCount_V_4 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    signal hBarSel_5_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    signal DPtpgBarArray_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal DPtpgBarArray_ce0 : STD_LOGIC;
    signal DPtpgBarArray_q0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelRgb_VESA_5_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelRgb_VESA_5_ce0 : STD_LOGIC;
    signal DPtpgBarSelRgb_VESA_5_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal DPtpgBarSelRgb_VESA_4_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelRgb_VESA_4_ce0 : STD_LOGIC;
    signal DPtpgBarSelRgb_VESA_4_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal DPtpgBarSelRgb_VESA_1_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelRgb_VESA_1_ce0 : STD_LOGIC;
    signal DPtpgBarSelRgb_VESA_1_q0 : STD_LOGIC_VECTOR (0 downto 0);
    signal DPtpgBarSelRgb_CEA_r_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelRgb_CEA_r_ce0 : STD_LOGIC;
    signal DPtpgBarSelRgb_CEA_r_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal DPtpgBarSelRgb_CEA_g_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelRgb_CEA_g_ce0 : STD_LOGIC;
    signal DPtpgBarSelRgb_CEA_g_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal DPtpgBarSelRgb_CEA_b_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelRgb_CEA_b_ce0 : STD_LOGIC;
    signal DPtpgBarSelRgb_CEA_b_q0 : STD_LOGIC_VECTOR (5 downto 0);
    signal DPtpgBarSelYuv_601_y_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelYuv_601_y_ce0 : STD_LOGIC;
    signal DPtpgBarSelYuv_601_y_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelYuv_709_y_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelYuv_709_y_ce0 : STD_LOGIC;
    signal DPtpgBarSelYuv_709_y_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelYuv_601_u_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelYuv_601_u_ce0 : STD_LOGIC;
    signal DPtpgBarSelYuv_601_u_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelYuv_601_v_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelYuv_601_v_ce0 : STD_LOGIC;
    signal DPtpgBarSelYuv_601_v_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelYuv_709_u_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelYuv_709_u_ce0 : STD_LOGIC;
    signal DPtpgBarSelYuv_709_u_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelYuv_709_v_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelYuv_709_v_ce0 : STD_LOGIC;
    signal DPtpgBarSelYuv_709_v_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal xCount_V_2_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    signal tmp_59_fu_344_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_312_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_cond_26_fu_338_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_fu_332_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_76_fu_428_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_60_fu_374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_73_fu_410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_fu_470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal brmerge_reg_711 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter1_brmerge_reg_711 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter2_brmerge_reg_711 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter3_brmerge_reg_711 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_reg_pp0_iter4_brmerge_reg_711 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp3_fu_494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp6_fu_506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal DPtpgBarArray_load_reg_743 : STD_LOGIC_VECTOR (2 downto 0);
    signal DPtpgBarSelRgb_VESA_6_reg_808 : STD_LOGIC_VECTOR (0 downto 0);
    signal DPtpgBarSelRgb_VESA_9_reg_813 : STD_LOGIC_VECTOR (0 downto 0);
    signal DPtpgBarSelRgb_VESA_12_reg_818 : STD_LOGIC_VECTOR (0 downto 0);
    signal DPtpgBarSelRgb_CEA_r_1_reg_823 : STD_LOGIC_VECTOR (5 downto 0);
    signal DPtpgBarSelRgb_CEA_g_1_reg_828 : STD_LOGIC_VECTOR (5 downto 0);
    signal DPtpgBarSelRgb_CEA_b_1_reg_833 : STD_LOGIC_VECTOR (5 downto 0);
    signal DPtpgBarSelYuv_601_y_1_reg_838 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelYuv_709_y_1_reg_843 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelYuv_601_u_1_reg_848 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelYuv_601_v_1_reg_853 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelYuv_709_u_1_reg_859 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelYuv_709_v_1_reg_864 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_reg_pp0_iter0_vBarSel_3_loc_2_reg_272 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_vBarSel_3_loc_2_reg_272 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter0_hBarSel_5_0_loc_reg_287 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_reg_pp0_iter1_hBarSel_5_0_loc_reg_287 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_77_fu_532_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_78_fu_537_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_57_fu_356_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_75_fu_416_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_74_fu_440_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_fu_306_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_55_fu_326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_83_fu_398_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_fu_392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_cast_not_fu_464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_fu_476_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_62_fu_380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp2_fu_488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_64_fu_386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sel_tmp5_fu_500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_512_p3 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_47_cast_fu_520_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_49_fu_524_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal DPtpgBarSelRgb_VESA_10_fu_559_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal val_assign_1_fu_587_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelRgb_CEA_g_4_fu_576_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp1_fu_592_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal val_assign_s_fu_582_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sel_tmp4_fu_599_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelRgb_CEA_r_4_fu_573_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelRgb_VESA_7_fu_552_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal or_cond_fu_619_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal newSel_fu_613_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel1_fu_623_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelRgb_CEA_b_4_fu_579_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal DPtpgBarSelRgb_VESA_2_fu_566_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel3_fu_637_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal newSel4_fu_643_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal Scalar_val_0_V_writ_fu_629_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal Scalar_val_1_V_writ_fu_606_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal Scalar_val_2_V_writ_fu_649_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to4 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_64 : BOOLEAN;
    signal ap_condition_191 : BOOLEAN;

    component design_1_v_tpg_0_0_tpgPatternDPColorbkb IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (2 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorcud IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColordEe IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColoreOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorfYi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorg8j IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorhbi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (5 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColoribs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorjbC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorkbM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorlbW IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColormb6 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component design_1_v_tpg_0_0_tpgPatternDPColorncg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    DPtpgBarArray_U : component design_1_v_tpg_0_0_tpgPatternDPColorbkb
    generic map (
        DataWidth => 3,
        AddressRange => 16,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarArray_address0,
        ce0 => DPtpgBarArray_ce0,
        q0 => DPtpgBarArray_q0);

    DPtpgBarSelRgb_VESA_5_U : component design_1_v_tpg_0_0_tpgPatternDPColorcud
    generic map (
        DataWidth => 1,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelRgb_VESA_5_address0,
        ce0 => DPtpgBarSelRgb_VESA_5_ce0,
        q0 => DPtpgBarSelRgb_VESA_5_q0);

    DPtpgBarSelRgb_VESA_4_U : component design_1_v_tpg_0_0_tpgPatternDPColordEe
    generic map (
        DataWidth => 1,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelRgb_VESA_4_address0,
        ce0 => DPtpgBarSelRgb_VESA_4_ce0,
        q0 => DPtpgBarSelRgb_VESA_4_q0);

    DPtpgBarSelRgb_VESA_1_U : component design_1_v_tpg_0_0_tpgPatternDPColoreOg
    generic map (
        DataWidth => 1,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelRgb_VESA_1_address0,
        ce0 => DPtpgBarSelRgb_VESA_1_ce0,
        q0 => DPtpgBarSelRgb_VESA_1_q0);

    DPtpgBarSelRgb_CEA_r_U : component design_1_v_tpg_0_0_tpgPatternDPColorfYi
    generic map (
        DataWidth => 6,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelRgb_CEA_r_address0,
        ce0 => DPtpgBarSelRgb_CEA_r_ce0,
        q0 => DPtpgBarSelRgb_CEA_r_q0);

    DPtpgBarSelRgb_CEA_g_U : component design_1_v_tpg_0_0_tpgPatternDPColorg8j
    generic map (
        DataWidth => 6,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelRgb_CEA_g_address0,
        ce0 => DPtpgBarSelRgb_CEA_g_ce0,
        q0 => DPtpgBarSelRgb_CEA_g_q0);

    DPtpgBarSelRgb_CEA_b_U : component design_1_v_tpg_0_0_tpgPatternDPColorhbi
    generic map (
        DataWidth => 6,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelRgb_CEA_b_address0,
        ce0 => DPtpgBarSelRgb_CEA_b_ce0,
        q0 => DPtpgBarSelRgb_CEA_b_q0);

    DPtpgBarSelYuv_601_y_U : component design_1_v_tpg_0_0_tpgPatternDPColoribs
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelYuv_601_y_address0,
        ce0 => DPtpgBarSelYuv_601_y_ce0,
        q0 => DPtpgBarSelYuv_601_y_q0);

    DPtpgBarSelYuv_709_y_U : component design_1_v_tpg_0_0_tpgPatternDPColorjbC
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelYuv_709_y_address0,
        ce0 => DPtpgBarSelYuv_709_y_ce0,
        q0 => DPtpgBarSelYuv_709_y_q0);

    DPtpgBarSelYuv_601_u_U : component design_1_v_tpg_0_0_tpgPatternDPColorkbM
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelYuv_601_u_address0,
        ce0 => DPtpgBarSelYuv_601_u_ce0,
        q0 => DPtpgBarSelYuv_601_u_q0);

    DPtpgBarSelYuv_601_v_U : component design_1_v_tpg_0_0_tpgPatternDPColorlbW
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelYuv_601_v_address0,
        ce0 => DPtpgBarSelYuv_601_v_ce0,
        q0 => DPtpgBarSelYuv_601_v_q0);

    DPtpgBarSelYuv_709_u_U : component design_1_v_tpg_0_0_tpgPatternDPColormb6
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelYuv_709_u_address0,
        ce0 => DPtpgBarSelYuv_709_u_ce0,
        q0 => DPtpgBarSelYuv_709_u_q0);

    DPtpgBarSelYuv_709_v_U : component design_1_v_tpg_0_0_tpgPatternDPColorncg
    generic map (
        DataWidth => 8,
        AddressRange => 8,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => DPtpgBarSelYuv_709_v_address0,
        ce0 => DPtpgBarSelYuv_709_v_ce0,
        q0 => DPtpgBarSelYuv_709_v_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_hBarSel_5_0_loc_reg_287_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_64)) then
                if (((tmp_73_fu_410_p2 = ap_const_lv1_0) and (tmp_60_fu_374_p2 = ap_const_lv1_0))) then 
                    ap_phi_reg_pp0_iter1_hBarSel_5_0_loc_reg_287 <= tmp_76_fu_428_p2;
                elsif (((tmp_60_fu_374_p2 = ap_const_lv1_0) and (tmp_73_fu_410_p2 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp0_iter1_hBarSel_5_0_loc_reg_287 <= hBarSel_5_0;
                elsif ((tmp_60_fu_374_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_hBarSel_5_0_loc_reg_287 <= ap_const_lv3_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_hBarSel_5_0_loc_reg_287 <= ap_phi_reg_pp0_iter0_hBarSel_5_0_loc_reg_287;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_vBarSel_3_loc_2_reg_272_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_cond_26_fu_338_p2 = ap_const_lv1_0) and (tmp_s_fu_312_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_56_fu_332_p2 = ap_const_lv1_1))) then 
                ap_phi_reg_pp0_iter1_vBarSel_3_loc_2_reg_272 <= tmp_59_fu_344_p2;
            elsif ((((tmp_s_fu_312_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond_26_fu_338_p2 = ap_const_lv1_1)) or ((tmp_56_fu_332_p2 = ap_const_lv1_0) and (or_cond_26_fu_338_p2 = ap_const_lv1_0) and (tmp_s_fu_312_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
                ap_phi_reg_pp0_iter1_vBarSel_3_loc_2_reg_272 <= vBarSel_1;
            elsif (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_s_fu_312_p2 = ap_const_lv1_1))) then 
                ap_phi_reg_pp0_iter1_vBarSel_3_loc_2_reg_272 <= ap_const_lv1_0;
            elsif (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                ap_phi_reg_pp0_iter1_vBarSel_3_loc_2_reg_272 <= ap_phi_reg_pp0_iter0_vBarSel_3_loc_2_reg_272;
            end if; 
        end if;
    end process;

    hBarSel_5_0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_64)) then
                if ((tmp_60_fu_374_p2 = ap_const_lv1_1)) then 
                    hBarSel_5_0 <= ap_const_lv3_0;
                elsif (((tmp_73_fu_410_p2 = ap_const_lv1_0) and (tmp_60_fu_374_p2 = ap_const_lv1_0))) then 
                    hBarSel_5_0 <= tmp_76_fu_428_p2;
                end if;
            end if; 
        end if;
    end process;

    vBarSel_1_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_64)) then
                if ((tmp_s_fu_312_p2 = ap_const_lv1_1)) then 
                    vBarSel_1 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_condition_191)) then 
                    vBarSel_1 <= tmp_59_fu_344_p2;
                end if;
            end if; 
        end if;
    end process;

    xCount_V_2_0_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_64)) then
                if ((tmp_60_fu_374_p2 = ap_const_lv1_1)) then 
                    xCount_V_2_0 <= ap_const_lv10_0;
                elsif (((tmp_60_fu_374_p2 = ap_const_lv1_0) and (tmp_73_fu_410_p2 = ap_const_lv1_1))) then 
                    xCount_V_2_0 <= tmp_74_fu_440_p2;
                elsif (((tmp_73_fu_410_p2 = ap_const_lv1_0) and (tmp_60_fu_374_p2 = ap_const_lv1_0))) then 
                    xCount_V_2_0 <= tmp_75_fu_416_p2;
                end if;
            end if; 
        end if;
    end process;

    yCount_V_4_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_fu_312_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (or_cond_26_fu_338_p2 = ap_const_lv1_1))) then 
                yCount_V_4 <= tmp_57_fu_356_p2;
            elsif ((((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_s_fu_312_p2 = ap_const_lv1_1)) or ((or_cond_26_fu_338_p2 = ap_const_lv1_0) and (tmp_s_fu_312_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (tmp_56_fu_332_p2 = ap_const_lv1_1)))) then 
                yCount_V_4 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                DPtpgBarArray_load_reg_743 <= DPtpgBarArray_q0;
                DPtpgBarSelYuv_601_v_1_reg_853 <= DPtpgBarSelYuv_601_v_q0;
                DPtpgBarSelYuv_709_v_1_reg_864 <= DPtpgBarSelYuv_709_v_q0;
                ap_reg_pp0_iter2_brmerge_reg_711 <= ap_reg_pp0_iter1_brmerge_reg_711;
                ap_reg_pp0_iter3_brmerge_reg_711 <= ap_reg_pp0_iter2_brmerge_reg_711;
                ap_reg_pp0_iter4_brmerge_reg_711 <= ap_reg_pp0_iter3_brmerge_reg_711;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp6_fu_506_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                DPtpgBarSelRgb_CEA_b_1_reg_833 <= DPtpgBarSelRgb_CEA_b_q0;
                DPtpgBarSelRgb_CEA_r_1_reg_823 <= DPtpgBarSelRgb_CEA_r_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp6_fu_506_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (sel_tmp3_fu_494_p2 = ap_const_lv1_1))) then
                DPtpgBarSelRgb_CEA_g_1_reg_828 <= DPtpgBarSelRgb_CEA_g_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_32_fu_482_p2 = ap_const_lv1_1))) then
                DPtpgBarSelRgb_VESA_12_reg_818 <= DPtpgBarSelRgb_VESA_1_q0;
                DPtpgBarSelRgb_VESA_6_reg_808 <= DPtpgBarSelRgb_VESA_5_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp6_fu_506_p2 = ap_const_lv1_0) and (sel_tmp3_fu_494_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (tmp_32_fu_482_p2 = ap_const_lv1_1))) then
                DPtpgBarSelRgb_VESA_9_reg_813 <= DPtpgBarSelRgb_VESA_4_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (sel_tmp6_fu_506_p2 = ap_const_lv1_1) and (ap_reg_pp0_iter3_brmerge_reg_711 = ap_const_lv1_1))) then
                DPtpgBarSelYuv_601_u_1_reg_848 <= DPtpgBarSelYuv_601_u_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (sel_tmp6_fu_506_p2 = ap_const_lv1_1))) then
                DPtpgBarSelYuv_601_y_1_reg_838 <= DPtpgBarSelYuv_601_y_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((sel_tmp6_fu_506_p2 = ap_const_lv1_0) and (sel_tmp3_fu_494_p2 = ap_const_lv1_0) and (tmp_32_fu_482_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_reg_pp0_iter3_brmerge_reg_711 = ap_const_lv1_1))) then
                DPtpgBarSelYuv_709_u_1_reg_859 <= DPtpgBarSelYuv_709_u_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_32_fu_482_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                DPtpgBarSelYuv_709_y_1_reg_843 <= DPtpgBarSelYuv_709_y_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ap_reg_pp0_iter1_brmerge_reg_711 <= brmerge_reg_711;
                brmerge_reg_711 <= brmerge_fu_470_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    DPtpgBarArray_address0 <= tmp_77_fu_532_p1(4 - 1 downto 0);

    DPtpgBarArray_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            DPtpgBarArray_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarArray_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        DPtpgBarSelRgb_CEA_b_4_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DPtpgBarSelRgb_CEA_b_1_reg_833),8));

    DPtpgBarSelRgb_CEA_b_address0 <= tmp_78_fu_537_p1(3 - 1 downto 0);

    DPtpgBarSelRgb_CEA_b_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            DPtpgBarSelRgb_CEA_b_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelRgb_CEA_b_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        DPtpgBarSelRgb_CEA_g_4_fu_576_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DPtpgBarSelRgb_CEA_g_1_reg_828),8));

    DPtpgBarSelRgb_CEA_g_address0 <= tmp_78_fu_537_p1(3 - 1 downto 0);

    DPtpgBarSelRgb_CEA_g_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            DPtpgBarSelRgb_CEA_g_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelRgb_CEA_g_ce0 <= ap_const_logic_0;
        end if; 
    end process;

        DPtpgBarSelRgb_CEA_r_4_fu_573_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(DPtpgBarSelRgb_CEA_r_1_reg_823),8));

    DPtpgBarSelRgb_CEA_r_address0 <= tmp_78_fu_537_p1(3 - 1 downto 0);

    DPtpgBarSelRgb_CEA_r_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            DPtpgBarSelRgb_CEA_r_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelRgb_CEA_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelRgb_VESA_10_fu_559_p3 <= 
        ap_const_lv8_FF when (DPtpgBarSelRgb_VESA_9_reg_813(0) = '1') else 
        ap_const_lv8_0;
    DPtpgBarSelRgb_VESA_1_address0 <= tmp_78_fu_537_p1(3 - 1 downto 0);

    DPtpgBarSelRgb_VESA_1_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            DPtpgBarSelRgb_VESA_1_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelRgb_VESA_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelRgb_VESA_2_fu_566_p3 <= 
        ap_const_lv8_FF when (DPtpgBarSelRgb_VESA_12_reg_818(0) = '1') else 
        ap_const_lv8_0;
    DPtpgBarSelRgb_VESA_4_address0 <= tmp_78_fu_537_p1(3 - 1 downto 0);

    DPtpgBarSelRgb_VESA_4_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            DPtpgBarSelRgb_VESA_4_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelRgb_VESA_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelRgb_VESA_5_address0 <= tmp_78_fu_537_p1(3 - 1 downto 0);

    DPtpgBarSelRgb_VESA_5_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            DPtpgBarSelRgb_VESA_5_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelRgb_VESA_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelRgb_VESA_7_fu_552_p3 <= 
        ap_const_lv8_FF when (DPtpgBarSelRgb_VESA_6_reg_808(0) = '1') else 
        ap_const_lv8_0;
    DPtpgBarSelYuv_601_u_address0 <= tmp_78_fu_537_p1(3 - 1 downto 0);

    DPtpgBarSelYuv_601_u_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            DPtpgBarSelYuv_601_u_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelYuv_601_u_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelYuv_601_v_address0 <= tmp_78_fu_537_p1(3 - 1 downto 0);

    DPtpgBarSelYuv_601_v_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            DPtpgBarSelYuv_601_v_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelYuv_601_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelYuv_601_y_address0 <= tmp_78_fu_537_p1(3 - 1 downto 0);

    DPtpgBarSelYuv_601_y_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            DPtpgBarSelYuv_601_y_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelYuv_601_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelYuv_709_u_address0 <= tmp_78_fu_537_p1(3 - 1 downto 0);

    DPtpgBarSelYuv_709_u_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            DPtpgBarSelYuv_709_u_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelYuv_709_u_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelYuv_709_v_address0 <= tmp_78_fu_537_p1(3 - 1 downto 0);

    DPtpgBarSelYuv_709_v_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            DPtpgBarSelYuv_709_v_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelYuv_709_v_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    DPtpgBarSelYuv_709_y_address0 <= tmp_78_fu_537_p1(3 - 1 downto 0);

    DPtpgBarSelYuv_709_y_ce0_assign_proc : process(ap_enable_reg_pp0_iter3, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1))) then 
            DPtpgBarSelYuv_709_y_ce0 <= ap_const_logic_1;
        else 
            DPtpgBarSelYuv_709_y_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    Scalar_val_0_V_writ_fu_629_p3 <= 
        newSel_fu_613_p3 when (or_cond_fu_619_p2(0) = '1') else 
        newSel1_fu_623_p3;
    Scalar_val_1_V_writ_fu_606_p3 <= 
        val_assign_s_fu_582_p3 when (sel_tmp6_fu_506_p2(0) = '1') else 
        sel_tmp4_fu_599_p3;
    Scalar_val_2_V_writ_fu_649_p3 <= 
        newSel3_fu_637_p3 when (or_cond_fu_619_p2(0) = '1') else 
        newSel4_fu_643_p3;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_191_assign_proc : process(tmp_s_fu_312_p2, or_cond_26_fu_338_p2, tmp_56_fu_332_p2)
    begin
                ap_condition_191 <= ((or_cond_26_fu_338_p2 = ap_const_lv1_0) and (tmp_s_fu_312_p2 = ap_const_lv1_0) and (tmp_56_fu_332_p2 = ap_const_lv1_1));
    end process;


    ap_condition_64_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
                ap_condition_64 <= ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter5, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5)
    begin
        if (((ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to4_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4)
    begin
        if (((ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to4 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to4 <= ap_const_logic_0;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_hBarSel_5_0_loc_reg_287 <= "XXX";
    ap_phi_reg_pp0_iter0_vBarSel_3_loc_2_reg_272 <= "X";

    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to4)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to4 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= Scalar_val_0_V_writ_fu_629_p3;
    ap_return_1 <= Scalar_val_1_V_writ_fu_606_p3;
    ap_return_2 <= Scalar_val_2_V_writ_fu_649_p3;
    brmerge_fu_470_p2 <= (tmp_66_cast_not_fu_464_p2 or tmp_65_fu_392_p2);
    newSel1_fu_623_p3 <= 
        DPtpgBarSelRgb_VESA_7_fu_552_p3 when (tmp_32_fu_482_p2(0) = '1') else 
        DPtpgBarSelYuv_709_y_1_reg_843;
    newSel3_fu_637_p3 <= 
        DPtpgBarSelYuv_601_v_1_reg_853 when (sel_tmp6_fu_506_p2(0) = '1') else 
        DPtpgBarSelRgb_CEA_b_4_fu_579_p1;
    newSel4_fu_643_p3 <= 
        DPtpgBarSelRgb_VESA_2_fu_566_p3 when (tmp_32_fu_482_p2(0) = '1') else 
        DPtpgBarSelYuv_709_v_1_reg_864;
    newSel_fu_613_p3 <= 
        DPtpgBarSelYuv_601_y_1_reg_838 when (sel_tmp6_fu_506_p2(0) = '1') else 
        DPtpgBarSelRgb_CEA_r_4_fu_573_p1;
    or_cond_26_fu_338_p2 <= (tmp_56_fu_332_p2 and tmp_55_fu_326_p2);
    or_cond_fu_619_p2 <= (sel_tmp6_fu_506_p2 or sel_tmp3_fu_494_p2);
    sel_tmp1_fu_592_p3 <= 
        DPtpgBarSelRgb_VESA_10_fu_559_p3 when (tmp_32_fu_482_p2(0) = '1') else 
        val_assign_1_fu_587_p3;
    sel_tmp2_fu_488_p2 <= "0" when (dpDynamicRange = ap_const_lv8_0) else "1";
    sel_tmp3_fu_494_p2 <= (tmp_62_fu_380_p2 and sel_tmp2_fu_488_p2);
    sel_tmp4_fu_599_p3 <= 
        DPtpgBarSelRgb_CEA_g_4_fu_576_p1 when (sel_tmp3_fu_494_p2(0) = '1') else 
        sel_tmp1_fu_592_p3;
    sel_tmp5_fu_500_p2 <= (tmp_62_fu_380_p2 xor ap_const_lv1_1);
    sel_tmp6_fu_506_p2 <= (tmp_64_fu_386_p2 and sel_tmp5_fu_500_p2);
    tmp_31_fu_476_p2 <= (dpDynamicRange or color);
    tmp_32_fu_482_p2 <= "1" when (tmp_31_fu_476_p2 = ap_const_lv8_0) else "0";
    tmp_47_cast_fu_520_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_47_fu_512_p3),8));
    tmp_47_fu_512_p3 <= (ap_phi_reg_pp0_iter1_vBarSel_3_loc_2_reg_272 & ap_phi_reg_pp0_iter1_hBarSel_5_0_loc_reg_287);
    tmp_49_fu_524_p3 <= (ap_const_lv3_0 & tmp_47_cast_fu_520_p1);
    tmp_55_fu_326_p2 <= "0" when (yCount_V_4 = ap_const_lv6_3F) else "1";
    tmp_56_fu_332_p2 <= "1" when (x = ap_const_lv16_0) else "0";
    tmp_57_fu_356_p2 <= std_logic_vector(unsigned(yCount_V_4) + unsigned(ap_const_lv6_1));
    tmp_59_fu_344_p2 <= (vBarSel_1 xor ap_const_lv1_1);
    tmp_60_fu_374_p2 <= "1" when (x = ap_const_lv16_0) else "0";
    tmp_62_fu_380_p2 <= "1" when (color = ap_const_lv8_0) else "0";
    tmp_64_fu_386_p2 <= "1" when (dpYUVCoef = ap_const_lv8_0) else "0";
    tmp_65_fu_392_p2 <= "1" when (color = ap_const_lv8_1) else "0";
    tmp_66_cast_not_fu_464_p2 <= (tmp_83_fu_398_p1 xor ap_const_lv1_1);
    tmp_73_fu_410_p2 <= "1" when (unsigned(xCount_V_2_0) < unsigned(ap_const_lv10_3F)) else "0";
    tmp_74_fu_440_p2 <= std_logic_vector(unsigned(xCount_V_2_0) + unsigned(ap_const_lv10_1));
    tmp_75_fu_416_p2 <= std_logic_vector(unsigned(xCount_V_2_0) + unsigned(ap_const_lv10_3C1));
    tmp_76_fu_428_p2 <= std_logic_vector(unsigned(hBarSel_5_0) + unsigned(ap_const_lv3_1));
    tmp_77_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_49_fu_524_p3),64));
    tmp_78_fu_537_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(DPtpgBarArray_load_reg_743),64));
    tmp_83_fu_398_p1 <= x(1 - 1 downto 0);
    tmp_fu_306_p2 <= (y or x);
    tmp_s_fu_312_p2 <= "1" when (tmp_fu_306_p2 = ap_const_lv16_0) else "0";
    val_assign_1_fu_587_p3 <= 
        DPtpgBarSelYuv_709_u_1_reg_859 when (ap_reg_pp0_iter4_brmerge_reg_711(0) = '1') else 
        DPtpgBarSelYuv_709_v_1_reg_864;
    val_assign_s_fu_582_p3 <= 
        DPtpgBarSelYuv_601_u_1_reg_848 when (ap_reg_pp0_iter4_brmerge_reg_711(0) = '1') else 
        DPtpgBarSelYuv_601_v_1_reg_853;
end behav;
