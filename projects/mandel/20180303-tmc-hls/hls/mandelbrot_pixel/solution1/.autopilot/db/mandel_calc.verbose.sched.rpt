

================================================================
== Vivado HLS Report for 'mandel_calc'
================================================================
* Date:           Sun Mar  4 14:35:27 2018

* Version:        2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)
* Project:        hls_train
* Solution:       solution1
* Product family: artix7
* Target device:  xc7a35tcpg236-1


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|      7.87|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |  766|  766|  766|  766|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- myloop  |  765|  765|         3|          -|          -|   255|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 4
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / (!tmp_5)
3 --> 
	4  / true
4 --> 
	2  / true

* FSM state operations: 

 <State 1> : 1.66ns
ST_1 : Operation 5 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i18 %re_V), !map !84"
ST_1 : Operation 6 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i18 %im_V), !map !90"
ST_1 : Operation 7 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %count_out_V), !map !94"
ST_1 : Operation 8 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([12 x i8]* @mandel_calc_str) nounwind"
ST_1 : Operation 9 [1/1] (0.00ns)   --->   "%im_V_read = call i18 @_ssdm_op_Read.ap_auto.i18(i18 %im_V)"
ST_1 : Operation 10 [1/1] (0.00ns)   --->   "%re_V_read = call i18 @_ssdm_op_Read.ap_auto.i18(i18 %re_V)"
ST_1 : Operation 11 [1/1] (0.00ns)   --->   "%p_Val2_13 = call i30 @_ssdm_op_BitConcatenate.i30.i18.i12(i18 %re_V_read, i12 0)" [mandel_calc.cpp:21]
ST_1 : Operation 12 [1/1] (0.00ns)   --->   "%p_Val2_13_cast = sext i30 %p_Val2_13 to i32" [mandel_calc.cpp:21]
ST_1 : Operation 13 [1/1] (0.00ns)   --->   "%p_Val2_8 = call i30 @_ssdm_op_BitConcatenate.i30.i18.i12(i18 %im_V_read, i12 0)" [mandel_calc.cpp:22]
ST_1 : Operation 14 [1/1] (0.00ns)   --->   "%p_Val2_8_cast = sext i30 %p_Val2_8 to i32" [mandel_calc.cpp:22]
ST_1 : Operation 15 [1/1] (0.00ns)   --->   "%tmp_2 = call i34 @_ssdm_op_BitConcatenate.i34.i18.i16(i18 %im_V_read, i16 0)" [mandel_calc.cpp:34]
ST_1 : Operation 16 [1/1] (0.00ns)   --->   "%tmp_15_cast_cast = sext i34 %tmp_2 to i39" [mandel_calc.cpp:25]
ST_1 : Operation 17 [1/1] (1.66ns)   --->   "br label %0" [mandel_calc.cpp:25]

 <State 2> : 7.18ns
ST_2 : Operation 18 [1/1] (0.00ns)   --->   "%p_Val2_4 = phi i32 [ %p_Val2_8_cast, %codeRepl ], [ %p_Val2_12, %"ap_fixed_base<36, 4, true, 5, 3, 0>.exit" ]"
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%p_Val2_s = phi i32 [ %p_Val2_13_cast, %codeRepl ], [ %p_Val2_14, %"ap_fixed_base<36, 4, true, 5, 3, 0>.exit" ]" [mandel_calc.cpp:21]
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%count_V = phi i8 [ 0, %codeRepl ], [ %tmp_6, %"ap_fixed_base<36, 4, true, 5, 3, 0>.exit" ]" [mandel_calc.cpp:32]
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%t_V = phi i8 [ 0, %codeRepl ], [ %tmp_10, %"ap_fixed_base<36, 4, true, 5, 3, 0>.exit" ]" [mandel_calc.cpp:25]
ST_2 : Operation 22 [1/1] (1.47ns)   --->   "%tmp_5 = icmp eq i8 %t_V, -1" [mandel_calc.cpp:25]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.46> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 23 [1/1] (0.00ns)   --->   "%empty = call i32 (...)* @_ssdm_op_SpecLoopTripCount(i64 255, i64 255, i64 255)"
ST_2 : Operation 24 [1/1] (2.11ns)   --->   "%tmp_10 = add i8 %t_V, 1" [mandel_calc.cpp:25]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_2 : Operation 25 [1/1] (0.00ns)   --->   "br i1 %tmp_5, label %1, label %"ap_fixed_base<36, 4, true, 5, 3, 0>.exit"" [mandel_calc.cpp:25]
ST_2 : Operation 26 [1/1] (0.00ns)   --->   "%tmp_7 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %p_Val2_s, i32 12, i32 29)" [mandel_calc.cpp:28]
ST_2 : Operation 27 [1/1] (0.00ns)   --->   "%OP1_V = sext i18 %tmp_7 to i36" [mandel_calc.cpp:28]
ST_2 : Operation 28 [1/1] (7.18ns)   --->   "%p_Val2_1 = mul nsw i36 %OP1_V, %OP1_V" [mandel_calc.cpp:28]   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 7.18> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 29 [1/1] (0.00ns)   --->   "%p_Val2_2 = call i32 @_ssdm_op_PartSelect.i32.i36.i32.i32(i36 %p_Val2_1, i32 4, i32 35)" [mandel_calc.cpp:28]
ST_2 : Operation 30 [1/1] (0.00ns)   --->   "%tmp = call i1 @_ssdm_op_BitSelect.i1.i36.i32(i36 %p_Val2_1, i32 3)" [mandel_calc.cpp:28]
ST_2 : Operation 31 [1/1] (0.00ns)   --->   "%tmp_3 = call i18 @_ssdm_op_PartSelect.i18.i32.i32.i32(i32 %p_Val2_4, i32 12, i32 29)" [mandel_calc.cpp:29]
ST_2 : Operation 32 [1/1] (0.00ns)   --->   "%OP1_V_1 = sext i18 %tmp_3 to i36" [mandel_calc.cpp:29]
ST_2 : Operation 33 [1/1] (7.18ns)   --->   "%p_Val2_5 = mul nsw i36 %OP1_V_1, %OP1_V_1" [mandel_calc.cpp:29]   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 7.18> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 34 [1/1] (0.00ns)   --->   "%p_Val2_6 = call i32 @_ssdm_op_PartSelect.i32.i36.i32.i32(i36 %p_Val2_5, i32 4, i32 35)" [mandel_calc.cpp:29]
ST_2 : Operation 35 [1/1] (0.00ns)   --->   "%tmp_12 = call i1 @_ssdm_op_BitSelect.i1.i36.i32(i36 %p_Val2_5, i32 3)" [mandel_calc.cpp:29]
ST_2 : Operation 36 [1/1] (7.18ns)   --->   "%r_V_1 = mul nsw i36 %OP1_V, %OP1_V_1" [mandel_calc.cpp:34]   --->   Core 61 'DSP48' <Latency = 0> <II = 1> <Delay = 7.18> <IPBlock> <Opcode : 'mul' 'add' 'sub' 'select'> <InPorts = 0> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 37 [1/1] (0.00ns)   --->   "%tmp_13 = call i1 @_ssdm_op_BitSelect.i1.i36.i32(i36 %r_V_1, i32 2)" [mandel_calc.cpp:34]
ST_2 : Operation 38 [1/1] (0.00ns)   --->   "call void @_ssdm_op_Write.ap_auto.i8P(i8* %count_out_V, i8 %count_V)" [mandel_calc.cpp:38]
ST_2 : Operation 39 [1/1] (0.00ns)   --->   "ret void" [mandel_calc.cpp:63]

 <State 3> : 7.87ns
ST_3 : Operation 40 [1/1] (0.00ns)   --->   "%tmp_8 = zext i1 %tmp to i32" [mandel_calc.cpp:28]
ST_3 : Operation 41 [1/1] (2.70ns)   --->   "%p_Val2_3 = add nsw i32 %p_Val2_2, %tmp_8" [mandel_calc.cpp:28]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 42 [1/1] (0.00ns)   --->   "%tmp_9 = zext i1 %tmp_12 to i32" [mandel_calc.cpp:29]
ST_3 : Operation 43 [1/1] (2.70ns)   --->   "%p_Val2_7 = add nsw i32 %p_Val2_6, %tmp_9" [mandel_calc.cpp:29]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%tmp_s = sext i32 %p_Val2_3 to i33" [mandel_calc.cpp:31]
ST_3 : Operation 45 [1/1] (0.00ns)   --->   "%tmp_1 = sext i32 %p_Val2_7 to i33" [mandel_calc.cpp:31]
ST_3 : Operation 46 [1/1] (2.70ns)   --->   "%r_V = add nsw i33 %tmp_s, %tmp_1" [mandel_calc.cpp:31]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (2.46ns)   --->   "%val_assign = icmp slt i33 %r_V, 1073741825" [mandel_calc.cpp:31]   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.46> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%p_Val2_9 = call i37 @_ssdm_op_BitConcatenate.i37.i36.i1(i36 %r_V_1, i1 false)" [mandel_calc.cpp:34]
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%tmp_10_cast = zext i37 %p_Val2_9 to i39" [mandel_calc.cpp:34]
ST_3 : Operation 50 [1/1] (2.81ns)   --->   "%p_Val2_10 = add i39 %tmp_15_cast_cast, %tmp_10_cast" [mandel_calc.cpp:34]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%p_Val2_11 = call i32 @_ssdm_op_PartSelect.i32.i39.i32.i32(i39 %p_Val2_10, i32 4, i32 35)" [mandel_calc.cpp:34]
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "%tmp_11 = zext i1 %tmp_13 to i32" [mandel_calc.cpp:34]
ST_3 : Operation 53 [1/1] (2.70ns)   --->   "%p_Val2_12 = add nsw i32 %p_Val2_11, %tmp_11" [mandel_calc.cpp:34]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 54 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%p_Val2_s_8 = sub i32 %p_Val2_3, %p_Val2_7" [mandel_calc.cpp:35]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.25> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_3 : Operation 55 [1/1] (4.50ns) (root node of TernaryAdder)   --->   "%p_Val2_14 = add i32 %p_Val2_s_8, %p_Val2_13_cast" [mandel_calc.cpp:35]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 2.25> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>

 <State 4> : 2.12ns
ST_4 : Operation 56 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecLoopName([7 x i8]* @p_str1) nounwind" [mandel_calc.cpp:25]
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%tmp_4 = zext i1 %val_assign to i8" [mandel_calc.cpp:32]
ST_4 : Operation 58 [1/1] (2.11ns)   --->   "%tmp_6 = add i8 %tmp_4, %count_V" [mandel_calc.cpp:32]   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 2.70> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "br label %0" [mandel_calc.cpp:25]


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.66ns
The critical path consists of the following:
	wire read on port 'im_V' [8]  (0 ns)
	multiplexor before 'phi' operation ('__Val2__') with incoming values : ('p_Val2_8_cast', mandel_calc.cpp:22) ('__Val2__', mandel_calc.cpp:34) [18]  (1.66 ns)

 <State 2>: 7.18ns
The critical path consists of the following:
	'phi' operation ('__Val2__') with incoming values : ('p_Val2_8_cast', mandel_calc.cpp:22) ('__Val2__', mandel_calc.cpp:34) [18]  (0 ns)
	'mul' operation ('__Val2__', mandel_calc.cpp:29) [37]  (7.18 ns)

 <State 3>: 7.87ns
The critical path consists of the following:
	'add' operation ('__Val2__', mandel_calc.cpp:28) [34]  (2.7 ns)
	'add' operation ('r.V', mandel_calc.cpp:31) [44]  (2.7 ns)
	'icmp' operation ('val', mandel_calc.cpp:31) [45]  (2.46 ns)

 <State 4>: 2.12ns
The critical path consists of the following:
	'add' operation ('tmp_6', mandel_calc.cpp:32) [47]  (2.12 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
