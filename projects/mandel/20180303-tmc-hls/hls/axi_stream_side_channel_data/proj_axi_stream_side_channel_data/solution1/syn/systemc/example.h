// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _example_HH_
#define _example_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct example : public sc_module {
    // Port declarations 24
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst_n;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<32> > A_TDATA;
    sc_in< sc_logic > A_TVALID;
    sc_out< sc_logic > A_TREADY;
    sc_in< sc_lv<4> > A_TKEEP;
    sc_in< sc_lv<4> > A_TSTRB;
    sc_in< sc_lv<2> > A_TUSER;
    sc_in< sc_lv<1> > A_TLAST;
    sc_in< sc_lv<5> > A_TID;
    sc_in< sc_lv<6> > A_TDEST;
    sc_out< sc_lv<32> > B_TDATA;
    sc_out< sc_logic > B_TVALID;
    sc_in< sc_logic > B_TREADY;
    sc_out< sc_lv<4> > B_TKEEP;
    sc_out< sc_lv<4> > B_TSTRB;
    sc_out< sc_lv<2> > B_TUSER;
    sc_out< sc_lv<1> > B_TLAST;
    sc_out< sc_lv<5> > B_TID;
    sc_out< sc_lv<6> > B_TDEST;


    // Module declarations
    example(sc_module_name name);
    SC_HAS_PROCESS(example);

    ~example();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    sc_signal< sc_logic > ap_rst_n_inv;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > A_data_V_0_data_out;
    sc_signal< sc_logic > A_data_V_0_vld_in;
    sc_signal< sc_logic > A_data_V_0_vld_out;
    sc_signal< sc_logic > A_data_V_0_ack_in;
    sc_signal< sc_logic > A_data_V_0_ack_out;
    sc_signal< sc_lv<32> > A_data_V_0_payload_A;
    sc_signal< sc_lv<32> > A_data_V_0_payload_B;
    sc_signal< sc_logic > A_data_V_0_sel_rd;
    sc_signal< sc_logic > A_data_V_0_sel_wr;
    sc_signal< sc_logic > A_data_V_0_sel;
    sc_signal< sc_logic > A_data_V_0_load_A;
    sc_signal< sc_logic > A_data_V_0_load_B;
    sc_signal< sc_lv<2> > A_data_V_0_state;
    sc_signal< sc_logic > A_data_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > A_keep_V_0_data_out;
    sc_signal< sc_logic > A_keep_V_0_vld_in;
    sc_signal< sc_logic > A_keep_V_0_vld_out;
    sc_signal< sc_logic > A_keep_V_0_ack_in;
    sc_signal< sc_logic > A_keep_V_0_ack_out;
    sc_signal< sc_lv<4> > A_keep_V_0_payload_A;
    sc_signal< sc_lv<4> > A_keep_V_0_payload_B;
    sc_signal< sc_logic > A_keep_V_0_sel_rd;
    sc_signal< sc_logic > A_keep_V_0_sel_wr;
    sc_signal< sc_logic > A_keep_V_0_sel;
    sc_signal< sc_logic > A_keep_V_0_load_A;
    sc_signal< sc_logic > A_keep_V_0_load_B;
    sc_signal< sc_lv<2> > A_keep_V_0_state;
    sc_signal< sc_logic > A_keep_V_0_state_cmp_full;
    sc_signal< sc_lv<4> > A_strb_V_0_data_out;
    sc_signal< sc_logic > A_strb_V_0_vld_in;
    sc_signal< sc_logic > A_strb_V_0_vld_out;
    sc_signal< sc_logic > A_strb_V_0_ack_in;
    sc_signal< sc_logic > A_strb_V_0_ack_out;
    sc_signal< sc_lv<4> > A_strb_V_0_payload_A;
    sc_signal< sc_lv<4> > A_strb_V_0_payload_B;
    sc_signal< sc_logic > A_strb_V_0_sel_rd;
    sc_signal< sc_logic > A_strb_V_0_sel_wr;
    sc_signal< sc_logic > A_strb_V_0_sel;
    sc_signal< sc_logic > A_strb_V_0_load_A;
    sc_signal< sc_logic > A_strb_V_0_load_B;
    sc_signal< sc_lv<2> > A_strb_V_0_state;
    sc_signal< sc_logic > A_strb_V_0_state_cmp_full;
    sc_signal< sc_lv<2> > A_user_V_0_data_out;
    sc_signal< sc_logic > A_user_V_0_vld_in;
    sc_signal< sc_logic > A_user_V_0_vld_out;
    sc_signal< sc_logic > A_user_V_0_ack_in;
    sc_signal< sc_logic > A_user_V_0_ack_out;
    sc_signal< sc_lv<2> > A_user_V_0_payload_A;
    sc_signal< sc_lv<2> > A_user_V_0_payload_B;
    sc_signal< sc_logic > A_user_V_0_sel_rd;
    sc_signal< sc_logic > A_user_V_0_sel_wr;
    sc_signal< sc_logic > A_user_V_0_sel;
    sc_signal< sc_logic > A_user_V_0_load_A;
    sc_signal< sc_logic > A_user_V_0_load_B;
    sc_signal< sc_lv<2> > A_user_V_0_state;
    sc_signal< sc_logic > A_user_V_0_state_cmp_full;
    sc_signal< sc_lv<1> > A_last_V_0_data_out;
    sc_signal< sc_logic > A_last_V_0_vld_in;
    sc_signal< sc_logic > A_last_V_0_vld_out;
    sc_signal< sc_logic > A_last_V_0_ack_in;
    sc_signal< sc_logic > A_last_V_0_ack_out;
    sc_signal< sc_lv<1> > A_last_V_0_payload_A;
    sc_signal< sc_lv<1> > A_last_V_0_payload_B;
    sc_signal< sc_logic > A_last_V_0_sel_rd;
    sc_signal< sc_logic > A_last_V_0_sel_wr;
    sc_signal< sc_logic > A_last_V_0_sel;
    sc_signal< sc_logic > A_last_V_0_load_A;
    sc_signal< sc_logic > A_last_V_0_load_B;
    sc_signal< sc_lv<2> > A_last_V_0_state;
    sc_signal< sc_logic > A_last_V_0_state_cmp_full;
    sc_signal< sc_lv<5> > A_id_V_0_data_out;
    sc_signal< sc_logic > A_id_V_0_vld_in;
    sc_signal< sc_logic > A_id_V_0_vld_out;
    sc_signal< sc_logic > A_id_V_0_ack_in;
    sc_signal< sc_logic > A_id_V_0_ack_out;
    sc_signal< sc_lv<5> > A_id_V_0_payload_A;
    sc_signal< sc_lv<5> > A_id_V_0_payload_B;
    sc_signal< sc_logic > A_id_V_0_sel_rd;
    sc_signal< sc_logic > A_id_V_0_sel_wr;
    sc_signal< sc_logic > A_id_V_0_sel;
    sc_signal< sc_logic > A_id_V_0_load_A;
    sc_signal< sc_logic > A_id_V_0_load_B;
    sc_signal< sc_lv<2> > A_id_V_0_state;
    sc_signal< sc_logic > A_id_V_0_state_cmp_full;
    sc_signal< sc_lv<6> > A_dest_V_0_data_out;
    sc_signal< sc_logic > A_dest_V_0_vld_in;
    sc_signal< sc_logic > A_dest_V_0_vld_out;
    sc_signal< sc_logic > A_dest_V_0_ack_in;
    sc_signal< sc_logic > A_dest_V_0_ack_out;
    sc_signal< sc_lv<6> > A_dest_V_0_payload_A;
    sc_signal< sc_lv<6> > A_dest_V_0_payload_B;
    sc_signal< sc_logic > A_dest_V_0_sel_rd;
    sc_signal< sc_logic > A_dest_V_0_sel_wr;
    sc_signal< sc_logic > A_dest_V_0_sel;
    sc_signal< sc_logic > A_dest_V_0_load_A;
    sc_signal< sc_logic > A_dest_V_0_load_B;
    sc_signal< sc_lv<2> > A_dest_V_0_state;
    sc_signal< sc_logic > A_dest_V_0_state_cmp_full;
    sc_signal< sc_lv<32> > B_data_V_1_data_out;
    sc_signal< sc_logic > B_data_V_1_vld_in;
    sc_signal< sc_logic > B_data_V_1_vld_out;
    sc_signal< sc_logic > B_data_V_1_ack_in;
    sc_signal< sc_logic > B_data_V_1_ack_out;
    sc_signal< sc_lv<32> > B_data_V_1_payload_A;
    sc_signal< sc_lv<32> > B_data_V_1_payload_B;
    sc_signal< sc_logic > B_data_V_1_sel_rd;
    sc_signal< sc_logic > B_data_V_1_sel_wr;
    sc_signal< sc_logic > B_data_V_1_sel;
    sc_signal< sc_logic > B_data_V_1_load_A;
    sc_signal< sc_logic > B_data_V_1_load_B;
    sc_signal< sc_lv<2> > B_data_V_1_state;
    sc_signal< sc_logic > B_data_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > B_keep_V_1_data_out;
    sc_signal< sc_logic > B_keep_V_1_vld_in;
    sc_signal< sc_logic > B_keep_V_1_vld_out;
    sc_signal< sc_logic > B_keep_V_1_ack_in;
    sc_signal< sc_logic > B_keep_V_1_ack_out;
    sc_signal< sc_lv<4> > B_keep_V_1_payload_A;
    sc_signal< sc_lv<4> > B_keep_V_1_payload_B;
    sc_signal< sc_logic > B_keep_V_1_sel_rd;
    sc_signal< sc_logic > B_keep_V_1_sel_wr;
    sc_signal< sc_logic > B_keep_V_1_sel;
    sc_signal< sc_logic > B_keep_V_1_load_A;
    sc_signal< sc_logic > B_keep_V_1_load_B;
    sc_signal< sc_lv<2> > B_keep_V_1_state;
    sc_signal< sc_logic > B_keep_V_1_state_cmp_full;
    sc_signal< sc_lv<4> > B_strb_V_1_data_out;
    sc_signal< sc_logic > B_strb_V_1_vld_in;
    sc_signal< sc_logic > B_strb_V_1_vld_out;
    sc_signal< sc_logic > B_strb_V_1_ack_in;
    sc_signal< sc_logic > B_strb_V_1_ack_out;
    sc_signal< sc_lv<4> > B_strb_V_1_payload_A;
    sc_signal< sc_lv<4> > B_strb_V_1_payload_B;
    sc_signal< sc_logic > B_strb_V_1_sel_rd;
    sc_signal< sc_logic > B_strb_V_1_sel_wr;
    sc_signal< sc_logic > B_strb_V_1_sel;
    sc_signal< sc_logic > B_strb_V_1_load_A;
    sc_signal< sc_logic > B_strb_V_1_load_B;
    sc_signal< sc_lv<2> > B_strb_V_1_state;
    sc_signal< sc_logic > B_strb_V_1_state_cmp_full;
    sc_signal< sc_lv<2> > B_user_V_1_data_out;
    sc_signal< sc_logic > B_user_V_1_vld_in;
    sc_signal< sc_logic > B_user_V_1_vld_out;
    sc_signal< sc_logic > B_user_V_1_ack_in;
    sc_signal< sc_logic > B_user_V_1_ack_out;
    sc_signal< sc_lv<2> > B_user_V_1_payload_A;
    sc_signal< sc_lv<2> > B_user_V_1_payload_B;
    sc_signal< sc_logic > B_user_V_1_sel_rd;
    sc_signal< sc_logic > B_user_V_1_sel_wr;
    sc_signal< sc_logic > B_user_V_1_sel;
    sc_signal< sc_logic > B_user_V_1_load_A;
    sc_signal< sc_logic > B_user_V_1_load_B;
    sc_signal< sc_lv<2> > B_user_V_1_state;
    sc_signal< sc_logic > B_user_V_1_state_cmp_full;
    sc_signal< sc_lv<1> > B_last_V_1_data_out;
    sc_signal< sc_logic > B_last_V_1_vld_in;
    sc_signal< sc_logic > B_last_V_1_vld_out;
    sc_signal< sc_logic > B_last_V_1_ack_in;
    sc_signal< sc_logic > B_last_V_1_ack_out;
    sc_signal< sc_lv<1> > B_last_V_1_payload_A;
    sc_signal< sc_lv<1> > B_last_V_1_payload_B;
    sc_signal< sc_logic > B_last_V_1_sel_rd;
    sc_signal< sc_logic > B_last_V_1_sel_wr;
    sc_signal< sc_logic > B_last_V_1_sel;
    sc_signal< sc_logic > B_last_V_1_load_A;
    sc_signal< sc_logic > B_last_V_1_load_B;
    sc_signal< sc_lv<2> > B_last_V_1_state;
    sc_signal< sc_logic > B_last_V_1_state_cmp_full;
    sc_signal< sc_lv<5> > B_id_V_1_data_out;
    sc_signal< sc_logic > B_id_V_1_vld_in;
    sc_signal< sc_logic > B_id_V_1_vld_out;
    sc_signal< sc_logic > B_id_V_1_ack_in;
    sc_signal< sc_logic > B_id_V_1_ack_out;
    sc_signal< sc_lv<5> > B_id_V_1_payload_A;
    sc_signal< sc_lv<5> > B_id_V_1_payload_B;
    sc_signal< sc_logic > B_id_V_1_sel_rd;
    sc_signal< sc_logic > B_id_V_1_sel_wr;
    sc_signal< sc_logic > B_id_V_1_sel;
    sc_signal< sc_logic > B_id_V_1_load_A;
    sc_signal< sc_logic > B_id_V_1_load_B;
    sc_signal< sc_lv<2> > B_id_V_1_state;
    sc_signal< sc_logic > B_id_V_1_state_cmp_full;
    sc_signal< sc_lv<6> > B_dest_V_1_data_out;
    sc_signal< sc_logic > B_dest_V_1_vld_in;
    sc_signal< sc_logic > B_dest_V_1_vld_out;
    sc_signal< sc_logic > B_dest_V_1_ack_in;
    sc_signal< sc_logic > B_dest_V_1_ack_out;
    sc_signal< sc_lv<6> > B_dest_V_1_payload_A;
    sc_signal< sc_lv<6> > B_dest_V_1_payload_B;
    sc_signal< sc_logic > B_dest_V_1_sel_rd;
    sc_signal< sc_logic > B_dest_V_1_sel_wr;
    sc_signal< sc_logic > B_dest_V_1_sel;
    sc_signal< sc_logic > B_dest_V_1_load_A;
    sc_signal< sc_logic > B_dest_V_1_load_B;
    sc_signal< sc_lv<2> > B_dest_V_1_state;
    sc_signal< sc_logic > B_dest_V_1_state_cmp_full;
    sc_signal< sc_logic > A_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > B_TDATA_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<6> > i_1_fu_122_p2;
    sc_signal< sc_lv<6> > i_1_reg_172;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< bool > ap_block_state2;
    sc_signal< sc_lv<32> > val_assign_fu_162_p2;
    sc_signal< sc_lv<6> > i_reg_105;
    sc_signal< sc_lv<1> > exitcond_fu_116_p2;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<6> ap_const_lv6_32;
    static const sc_lv<6> ap_const_lv6_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_A_TDATA_blk_n();
    void thread_A_TREADY();
    void thread_A_data_V_0_ack_in();
    void thread_A_data_V_0_ack_out();
    void thread_A_data_V_0_data_out();
    void thread_A_data_V_0_load_A();
    void thread_A_data_V_0_load_B();
    void thread_A_data_V_0_sel();
    void thread_A_data_V_0_state_cmp_full();
    void thread_A_data_V_0_vld_in();
    void thread_A_data_V_0_vld_out();
    void thread_A_dest_V_0_ack_in();
    void thread_A_dest_V_0_ack_out();
    void thread_A_dest_V_0_data_out();
    void thread_A_dest_V_0_load_A();
    void thread_A_dest_V_0_load_B();
    void thread_A_dest_V_0_sel();
    void thread_A_dest_V_0_state_cmp_full();
    void thread_A_dest_V_0_vld_in();
    void thread_A_dest_V_0_vld_out();
    void thread_A_id_V_0_ack_in();
    void thread_A_id_V_0_ack_out();
    void thread_A_id_V_0_data_out();
    void thread_A_id_V_0_load_A();
    void thread_A_id_V_0_load_B();
    void thread_A_id_V_0_sel();
    void thread_A_id_V_0_state_cmp_full();
    void thread_A_id_V_0_vld_in();
    void thread_A_id_V_0_vld_out();
    void thread_A_keep_V_0_ack_in();
    void thread_A_keep_V_0_ack_out();
    void thread_A_keep_V_0_data_out();
    void thread_A_keep_V_0_load_A();
    void thread_A_keep_V_0_load_B();
    void thread_A_keep_V_0_sel();
    void thread_A_keep_V_0_state_cmp_full();
    void thread_A_keep_V_0_vld_in();
    void thread_A_keep_V_0_vld_out();
    void thread_A_last_V_0_ack_in();
    void thread_A_last_V_0_ack_out();
    void thread_A_last_V_0_data_out();
    void thread_A_last_V_0_load_A();
    void thread_A_last_V_0_load_B();
    void thread_A_last_V_0_sel();
    void thread_A_last_V_0_state_cmp_full();
    void thread_A_last_V_0_vld_in();
    void thread_A_last_V_0_vld_out();
    void thread_A_strb_V_0_ack_in();
    void thread_A_strb_V_0_ack_out();
    void thread_A_strb_V_0_data_out();
    void thread_A_strb_V_0_load_A();
    void thread_A_strb_V_0_load_B();
    void thread_A_strb_V_0_sel();
    void thread_A_strb_V_0_state_cmp_full();
    void thread_A_strb_V_0_vld_in();
    void thread_A_strb_V_0_vld_out();
    void thread_A_user_V_0_ack_in();
    void thread_A_user_V_0_ack_out();
    void thread_A_user_V_0_data_out();
    void thread_A_user_V_0_load_A();
    void thread_A_user_V_0_load_B();
    void thread_A_user_V_0_sel();
    void thread_A_user_V_0_state_cmp_full();
    void thread_A_user_V_0_vld_in();
    void thread_A_user_V_0_vld_out();
    void thread_B_TDATA();
    void thread_B_TDATA_blk_n();
    void thread_B_TDEST();
    void thread_B_TID();
    void thread_B_TKEEP();
    void thread_B_TLAST();
    void thread_B_TSTRB();
    void thread_B_TUSER();
    void thread_B_TVALID();
    void thread_B_data_V_1_ack_in();
    void thread_B_data_V_1_ack_out();
    void thread_B_data_V_1_data_out();
    void thread_B_data_V_1_load_A();
    void thread_B_data_V_1_load_B();
    void thread_B_data_V_1_sel();
    void thread_B_data_V_1_state_cmp_full();
    void thread_B_data_V_1_vld_in();
    void thread_B_data_V_1_vld_out();
    void thread_B_dest_V_1_ack_in();
    void thread_B_dest_V_1_ack_out();
    void thread_B_dest_V_1_data_out();
    void thread_B_dest_V_1_load_A();
    void thread_B_dest_V_1_load_B();
    void thread_B_dest_V_1_sel();
    void thread_B_dest_V_1_state_cmp_full();
    void thread_B_dest_V_1_vld_in();
    void thread_B_dest_V_1_vld_out();
    void thread_B_id_V_1_ack_in();
    void thread_B_id_V_1_ack_out();
    void thread_B_id_V_1_data_out();
    void thread_B_id_V_1_load_A();
    void thread_B_id_V_1_load_B();
    void thread_B_id_V_1_sel();
    void thread_B_id_V_1_state_cmp_full();
    void thread_B_id_V_1_vld_in();
    void thread_B_id_V_1_vld_out();
    void thread_B_keep_V_1_ack_in();
    void thread_B_keep_V_1_ack_out();
    void thread_B_keep_V_1_data_out();
    void thread_B_keep_V_1_load_A();
    void thread_B_keep_V_1_load_B();
    void thread_B_keep_V_1_sel();
    void thread_B_keep_V_1_state_cmp_full();
    void thread_B_keep_V_1_vld_in();
    void thread_B_keep_V_1_vld_out();
    void thread_B_last_V_1_ack_in();
    void thread_B_last_V_1_ack_out();
    void thread_B_last_V_1_data_out();
    void thread_B_last_V_1_load_A();
    void thread_B_last_V_1_load_B();
    void thread_B_last_V_1_sel();
    void thread_B_last_V_1_state_cmp_full();
    void thread_B_last_V_1_vld_in();
    void thread_B_last_V_1_vld_out();
    void thread_B_strb_V_1_ack_in();
    void thread_B_strb_V_1_ack_out();
    void thread_B_strb_V_1_data_out();
    void thread_B_strb_V_1_load_A();
    void thread_B_strb_V_1_load_B();
    void thread_B_strb_V_1_sel();
    void thread_B_strb_V_1_state_cmp_full();
    void thread_B_strb_V_1_vld_in();
    void thread_B_strb_V_1_vld_out();
    void thread_B_user_V_1_ack_in();
    void thread_B_user_V_1_ack_out();
    void thread_B_user_V_1_data_out();
    void thread_B_user_V_1_load_A();
    void thread_B_user_V_1_load_B();
    void thread_B_user_V_1_sel();
    void thread_B_user_V_1_state_cmp_full();
    void thread_B_user_V_1_vld_in();
    void thread_B_user_V_1_vld_out();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_block_state2();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_rst_n_inv();
    void thread_exitcond_fu_116_p2();
    void thread_i_1_fu_122_p2();
    void thread_val_assign_fu_162_p2();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
