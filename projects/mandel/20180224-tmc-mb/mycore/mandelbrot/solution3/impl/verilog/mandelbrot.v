// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="mandelbrot,hls_ip_2017_4,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=1,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200tfbg676-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.415083,HLS_SYN_LAT=515,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=10,HLS_SYN_FF=963,HLS_SYN_LUT=2095}" *)

module mandelbrot (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        re,
        im,
        outp,
        outp_ap_vld
);

parameter    ap_ST_fsm_state1 = 5'd1;
parameter    ap_ST_fsm_state2 = 5'd2;
parameter    ap_ST_fsm_state3 = 5'd4;
parameter    ap_ST_fsm_state4 = 5'd8;
parameter    ap_ST_fsm_state5 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] re;
input  [31:0] im;
output  [15:0] outp;
output   outp_ap_vld;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg outp_ap_vld;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [31:0] z_re_V;
reg   [31:0] z_im_V;
reg   [0:0] isneg_reg_853;
wire   [53:0] p_Result_s_fu_179_p1;
reg   [53:0] p_Result_s_reg_860;
wire   [53:0] man_V_1_fu_183_p2;
reg   [53:0] man_V_1_reg_865;
wire   [0:0] tmp_7_fu_189_p2;
reg   [0:0] tmp_7_reg_870;
wire   [11:0] F2_fu_195_p2;
reg   [11:0] F2_reg_876;
wire   [0:0] tmp_9_fu_201_p2;
reg   [0:0] tmp_9_reg_882;
wire   [11:0] tmp_s_fu_207_p2;
reg   [11:0] tmp_s_reg_889;
wire   [11:0] tmp_1_fu_213_p2;
reg   [11:0] tmp_1_reg_895;
reg   [0:0] isneg_1_reg_900;
wire   [53:0] p_Result_1_fu_261_p1;
reg   [53:0] p_Result_1_reg_907;
wire   [53:0] man_V_4_fu_265_p2;
reg   [53:0] man_V_4_reg_912;
wire   [0:0] tmp_17_fu_271_p2;
reg   [0:0] tmp_17_reg_917;
wire   [11:0] F2_1_fu_277_p2;
reg   [11:0] F2_1_reg_923;
wire   [0:0] tmp_18_fu_283_p2;
reg   [0:0] tmp_18_reg_929;
wire   [11:0] tmp_19_fu_289_p2;
reg   [11:0] tmp_19_reg_936;
wire   [11:0] tmp_20_fu_295_p2;
reg   [11:0] tmp_20_reg_942;
wire  signed [31:0] sh_amt_cast_fu_311_p1;
reg  signed [31:0] sh_amt_cast_reg_947;
wire    ap_CS_fsm_state2;
wire   [0:0] tmp_3_fu_315_p2;
reg   [0:0] tmp_3_reg_952;
wire   [31:0] tmp_23_fu_320_p1;
reg   [31:0] tmp_23_reg_958;
wire   [0:0] icmp_fu_340_p2;
reg   [0:0] icmp_reg_964;
wire   [31:0] p_Val2_4_fu_408_p2;
reg   [31:0] p_Val2_4_reg_969;
wire  signed [31:0] sh_amt_1_cast_fu_424_p1;
reg  signed [31:0] sh_amt_1_cast_reg_974;
wire   [0:0] tmp_21_fu_428_p2;
reg   [0:0] tmp_21_reg_979;
wire   [31:0] tmp_41_fu_433_p1;
reg   [31:0] tmp_41_reg_985;
wire   [0:0] icmp5_fu_453_p2;
reg   [0:0] icmp5_reg_991;
wire   [31:0] p_Val2_9_fu_521_p2;
reg   [31:0] p_Val2_9_reg_996;
wire   [31:0] p_Val2_5_fu_586_p3;
reg   [31:0] p_Val2_5_reg_1001;
wire    ap_CS_fsm_state3;
wire   [59:0] tmp_32_fu_673_p3;
reg   [59:0] tmp_32_reg_1006;
wire   [8:0] i_1_fu_687_p2;
reg   [8:0] i_1_reg_1014;
wire    ap_CS_fsm_state4;
reg   [31:0] p_Val2_7_reg_1019;
wire   [0:0] exitcond_fu_681_p2;
reg   [0:0] tmp_45_reg_1024;
reg   [31:0] p_Val2_12_reg_1029;
reg   [0:0] tmp_46_reg_1034;
wire   [59:0] tmp_47_fu_779_p1;
reg   [59:0] tmp_47_reg_1039;
reg   [0:0] tmp_48_reg_1044;
reg   [8:0] i_reg_118;
wire    ap_CS_fsm_state5;
wire   [31:0] p_Val2_1_fu_842_p2;
wire   [31:0] p_Val2_20_fu_659_p3;
wire   [31:0] p_Val2_17_fu_824_p2;
wire   [63:0] d_assign_fu_129_p1;
wire   [63:0] ireg_V_fu_137_p1;
wire   [10:0] exp_tmp_V_fu_153_p4;
wire   [51:0] tmp_11_fu_167_p1;
wire   [52:0] tmp_fu_171_p3;
wire   [62:0] tmp_4_fu_141_p1;
wire   [11:0] tmp_2_fu_163_p1;
wire   [63:0] d_assign_1_fu_133_p1;
wire   [63:0] ireg_V_1_fu_219_p1;
wire   [10:0] exp_tmp_V_1_fu_235_p4;
wire   [51:0] tmp_40_fu_249_p1;
wire   [52:0] tmp_16_fu_253_p3;
wire   [62:0] tmp_38_fu_223_p1;
wire   [11:0] tmp_15_fu_245_p1;
wire   [11:0] sh_amt_fu_306_p3;
wire   [53:0] p_Val2_18_fu_301_p3;
wire   [6:0] tmp_25_fu_330_p4;
wire   [53:0] tmp_8_fu_346_p1;
wire   [53:0] tmp_6_fu_350_p2;
wire   [0:0] tmp_5_fu_324_p2;
wire   [31:0] tmp_28_fu_356_p1;
wire   [31:0] p_Val2_0_i_i_i1_fu_360_p3;
wire   [11:0] tmp_13_fu_380_p2;
wire  signed [31:0] tmp_17_cast_fu_385_p1;
wire   [0:0] tmp_12_fu_375_p2;
wire   [0:0] tmp_37_fu_389_p3;
wire   [0:0] qb_fu_397_p3;
wire   [31:0] tmp_14_fu_404_p1;
wire   [31:0] p_Val2_3_fu_367_p3;
wire   [11:0] sh_amt_1_fu_419_p3;
wire   [53:0] p_Val2_21_fu_414_p3;
wire   [6:0] tmp_42_fu_443_p4;
wire   [53:0] tmp_24_fu_459_p1;
wire   [53:0] tmp_26_fu_463_p2;
wire   [0:0] tmp_22_fu_437_p2;
wire   [31:0] tmp_43_fu_469_p1;
wire   [31:0] p_Val2_0_i_i_i3_fu_473_p3;
wire   [11:0] tmp_30_fu_493_p2;
wire  signed [31:0] tmp_39_cast_fu_498_p1;
wire   [0:0] tmp_29_fu_488_p2;
wire   [0:0] tmp_44_fu_502_p3;
wire   [0:0] qb_1_fu_510_p3;
wire   [31:0] tmp_31_fu_517_p1;
wire   [31:0] p_Val2_8_fu_480_p3;
wire   [0:0] sel_tmp1_fu_531_p2;
wire   [0:0] sel_tmp2_fu_536_p2;
wire   [0:0] sel_tmp6_demorgan_fu_548_p2;
wire   [0:0] sel_tmp6_fu_552_p2;
wire   [0:0] sel_tmp7_fu_558_p2;
wire   [31:0] sel_tmp3_fu_541_p3;
wire   [0:0] sel_tmp13_demorgan_fu_570_p2;
wire   [0:0] sel_tmp_fu_575_p2;
wire   [0:0] sel_tmp4_fu_581_p2;
wire   [31:0] tmp_10_fu_527_p2;
wire   [31:0] sel_tmp8_fu_563_p3;
wire   [0:0] sel_tmp5_fu_604_p2;
wire   [0:0] sel_tmp9_fu_609_p2;
wire   [0:0] sel_tmp24_demorgan_fu_621_p2;
wire   [0:0] sel_tmp11_fu_625_p2;
wire   [0:0] sel_tmp12_fu_631_p2;
wire   [31:0] sel_tmp10_fu_614_p3;
wire   [0:0] sel_tmp31_demorgan_fu_643_p2;
wire   [0:0] sel_tmp14_fu_648_p2;
wire   [0:0] sel_tmp15_fu_654_p2;
wire   [31:0] tmp_27_fu_600_p2;
wire   [31:0] sel_tmp13_fu_636_p3;
wire  signed [31:0] p_Val2_2_fu_701_p0;
wire  signed [63:0] OP1_V_fu_697_p1;
wire  signed [31:0] p_Val2_2_fu_701_p1;
wire   [63:0] p_Val2_2_fu_701_p2;
wire  signed [31:0] p_Val2_11_fu_733_p0;
wire  signed [63:0] OP1_V_1_fu_729_p1;
wire  signed [31:0] p_Val2_11_fu_733_p1;
wire   [63:0] p_Val2_11_fu_733_p2;
wire   [32:0] r_V_fu_757_p3;
wire  signed [31:0] p_Val2_14_fu_773_p0;
wire  signed [32:0] p_Val2_14_fu_773_p1;
wire   [64:0] p_Val2_14_fu_773_p2;
wire   [31:0] tmp_33_fu_791_p1;
wire   [31:0] tmp_34_fu_799_p1;
wire   [59:0] p_Val2_15_fu_807_p2;
wire   [31:0] tmp_35_fu_821_p1;
wire   [31:0] p_Val2_16_fu_811_p4;
wire   [31:0] p_Val2_10_fu_794_p2;
wire   [31:0] p_Val2_13_fu_802_p2;
wire   [31:0] p_Val2_s_fu_836_p2;
reg   [4:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 z_re_V = 32'd0;
#0 z_im_V = 32'd0;
end

mandelbrot_fpext_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mandelbrot_fpext_bkb_U1(
    .din0(re),
    .dout(d_assign_fu_129_p1)
);

mandelbrot_fpext_bkb #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
mandelbrot_fpext_bkb_U2(
    .din0(im),
    .dout(d_assign_1_fu_133_p1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_reg_118 <= i_1_reg_1014;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        i_reg_118 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        z_im_V <= p_Val2_17_fu_824_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        z_im_V <= p_Val2_20_fu_659_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        z_re_V <= p_Val2_1_fu_842_p2;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        z_re_V <= p_Val2_5_fu_586_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        F2_1_reg_923 <= F2_1_fu_277_p2;
        F2_reg_876 <= F2_fu_195_p2;
        isneg_1_reg_900 <= ireg_V_1_fu_219_p1[32'd63];
        isneg_reg_853 <= ireg_V_fu_137_p1[32'd63];
        man_V_1_reg_865 <= man_V_1_fu_183_p2;
        man_V_4_reg_912 <= man_V_4_fu_265_p2;
        p_Result_1_reg_907[51 : 0] <= p_Result_1_fu_261_p1[51 : 0];
        p_Result_s_reg_860[51 : 0] <= p_Result_s_fu_179_p1[51 : 0];
        tmp_17_reg_917 <= tmp_17_fu_271_p2;
        tmp_18_reg_929 <= tmp_18_fu_283_p2;
        tmp_19_reg_936 <= tmp_19_fu_289_p2;
        tmp_1_reg_895 <= tmp_1_fu_213_p2;
        tmp_20_reg_942 <= tmp_20_fu_295_p2;
        tmp_7_reg_870 <= tmp_7_fu_189_p2;
        tmp_9_reg_882 <= tmp_9_fu_201_p2;
        tmp_s_reg_889 <= tmp_s_fu_207_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        i_1_reg_1014 <= i_1_fu_687_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp5_reg_991 <= icmp5_fu_453_p2;
        icmp_reg_964 <= icmp_fu_340_p2;
        p_Val2_4_reg_969 <= p_Val2_4_fu_408_p2;
        p_Val2_9_reg_996 <= p_Val2_9_fu_521_p2;
        sh_amt_1_cast_reg_974 <= sh_amt_1_cast_fu_424_p1;
        sh_amt_cast_reg_947 <= sh_amt_cast_fu_311_p1;
        tmp_21_reg_979 <= tmp_21_fu_428_p2;
        tmp_23_reg_958 <= tmp_23_fu_320_p1;
        tmp_3_reg_952 <= tmp_3_fu_315_p2;
        tmp_41_reg_985 <= tmp_41_fu_433_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond_fu_681_p2 == 1'd0))) begin
        p_Val2_12_reg_1029 <= {{p_Val2_11_fu_733_p2[59:28]}};
        p_Val2_7_reg_1019 <= {{p_Val2_2_fu_701_p2[59:28]}};
        tmp_45_reg_1024 <= p_Val2_2_fu_701_p2[32'd27];
        tmp_46_reg_1034 <= p_Val2_11_fu_733_p2[32'd27];
        tmp_47_reg_1039[59 : 1] <= tmp_47_fu_779_p1[59 : 1];
        tmp_48_reg_1044 <= p_Val2_14_fu_773_p2[32'd27];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        p_Val2_5_reg_1001 <= p_Val2_5_fu_586_p3;
        tmp_32_reg_1006[59 : 28] <= tmp_32_fu_673_p3[59 : 28];
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond_fu_681_p2 == 1'd1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond_fu_681_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (exitcond_fu_681_p2 == 1'd1))) begin
        outp_ap_vld = 1'b1;
    end else begin
        outp_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (exitcond_fu_681_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_1_fu_277_p2 = (12'd1075 - tmp_15_fu_245_p1);

assign F2_fu_195_p2 = (12'd1075 - tmp_2_fu_163_p1);

assign OP1_V_1_fu_729_p1 = $signed(z_im_V);

assign OP1_V_fu_697_p1 = $signed(z_re_V);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign exitcond_fu_681_p2 = ((i_reg_118 == 9'd256) ? 1'b1 : 1'b0);

assign exp_tmp_V_1_fu_235_p4 = {{ireg_V_1_fu_219_p1[62:52]}};

assign exp_tmp_V_fu_153_p4 = {{ireg_V_fu_137_p1[62:52]}};

assign i_1_fu_687_p2 = (i_reg_118 + 9'd1);

assign icmp5_fu_453_p2 = ((tmp_42_fu_443_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_fu_340_p2 = ((tmp_25_fu_330_p4 == 7'd0) ? 1'b1 : 1'b0);

assign ireg_V_1_fu_219_p1 = d_assign_1_fu_133_p1;

assign ireg_V_fu_137_p1 = d_assign_fu_129_p1;

assign man_V_1_fu_183_p2 = (54'd0 - p_Result_s_fu_179_p1);

assign man_V_4_fu_265_p2 = (54'd0 - p_Result_1_fu_261_p1);

assign outp = 16'd0;

assign p_Result_1_fu_261_p1 = tmp_16_fu_253_p3;

assign p_Result_s_fu_179_p1 = tmp_fu_171_p3;

assign p_Val2_0_i_i_i1_fu_360_p3 = ((isneg_reg_853[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign p_Val2_0_i_i_i3_fu_473_p3 = ((isneg_1_reg_900[0:0] === 1'b1) ? 32'd4294967295 : 32'd0);

assign p_Val2_10_fu_794_p2 = (tmp_33_fu_791_p1 + p_Val2_7_reg_1019);

assign p_Val2_11_fu_733_p0 = OP1_V_1_fu_729_p1;

assign p_Val2_11_fu_733_p1 = OP1_V_1_fu_729_p1;

assign p_Val2_11_fu_733_p2 = ($signed(p_Val2_11_fu_733_p0) * $signed(p_Val2_11_fu_733_p1));

assign p_Val2_13_fu_802_p2 = (tmp_34_fu_799_p1 + p_Val2_12_reg_1029);

assign p_Val2_14_fu_773_p0 = z_im_V;

assign p_Val2_14_fu_773_p1 = r_V_fu_757_p3;

assign p_Val2_14_fu_773_p2 = ($signed(p_Val2_14_fu_773_p0) * $signed(p_Val2_14_fu_773_p1));

assign p_Val2_15_fu_807_p2 = (tmp_47_reg_1039 + tmp_32_reg_1006);

assign p_Val2_16_fu_811_p4 = {{p_Val2_15_fu_807_p2[59:28]}};

assign p_Val2_17_fu_824_p2 = (tmp_35_fu_821_p1 + p_Val2_16_fu_811_p4);

assign p_Val2_18_fu_301_p3 = ((isneg_reg_853[0:0] === 1'b1) ? man_V_1_reg_865 : p_Result_s_reg_860);

assign p_Val2_1_fu_842_p2 = (p_Val2_5_reg_1001 + p_Val2_s_fu_836_p2);

assign p_Val2_20_fu_659_p3 = ((sel_tmp15_fu_654_p2[0:0] === 1'b1) ? tmp_27_fu_600_p2 : sel_tmp13_fu_636_p3);

assign p_Val2_21_fu_414_p3 = ((isneg_1_reg_900[0:0] === 1'b1) ? man_V_4_reg_912 : p_Result_1_reg_907);

assign p_Val2_2_fu_701_p0 = OP1_V_fu_697_p1;

assign p_Val2_2_fu_701_p1 = OP1_V_fu_697_p1;

assign p_Val2_2_fu_701_p2 = ($signed(p_Val2_2_fu_701_p0) * $signed(p_Val2_2_fu_701_p1));

assign p_Val2_3_fu_367_p3 = ((tmp_5_fu_324_p2[0:0] === 1'b1) ? tmp_28_fu_356_p1 : p_Val2_0_i_i_i1_fu_360_p3);

assign p_Val2_4_fu_408_p2 = (tmp_14_fu_404_p1 + p_Val2_3_fu_367_p3);

assign p_Val2_5_fu_586_p3 = ((sel_tmp4_fu_581_p2[0:0] === 1'b1) ? tmp_10_fu_527_p2 : sel_tmp8_fu_563_p3);

assign p_Val2_8_fu_480_p3 = ((tmp_22_fu_437_p2[0:0] === 1'b1) ? tmp_43_fu_469_p1 : p_Val2_0_i_i_i3_fu_473_p3);

assign p_Val2_9_fu_521_p2 = (tmp_31_fu_517_p1 + p_Val2_8_fu_480_p3);

assign p_Val2_s_fu_836_p2 = (p_Val2_10_fu_794_p2 - p_Val2_13_fu_802_p2);

assign qb_1_fu_510_p3 = ((tmp_29_fu_488_p2[0:0] === 1'b1) ? isneg_1_reg_900 : tmp_44_fu_502_p3);

assign qb_fu_397_p3 = ((tmp_12_fu_375_p2[0:0] === 1'b1) ? isneg_reg_853 : tmp_37_fu_389_p3);

assign r_V_fu_757_p3 = {{z_re_V}, {1'd0}};

assign sel_tmp10_fu_614_p3 = ((sel_tmp9_fu_609_p2[0:0] === 1'b1) ? tmp_41_reg_985 : 32'd0);

assign sel_tmp11_fu_625_p2 = (sel_tmp24_demorgan_fu_621_p2 ^ 1'd1);

assign sel_tmp12_fu_631_p2 = (tmp_18_reg_929 & sel_tmp11_fu_625_p2);

assign sel_tmp13_demorgan_fu_570_p2 = (tmp_9_reg_882 | sel_tmp6_demorgan_fu_548_p2);

assign sel_tmp13_fu_636_p3 = ((sel_tmp12_fu_631_p2[0:0] === 1'b1) ? p_Val2_9_reg_996 : sel_tmp10_fu_614_p3);

assign sel_tmp14_fu_648_p2 = (sel_tmp31_demorgan_fu_643_p2 ^ 1'd1);

assign sel_tmp15_fu_654_p2 = (sel_tmp14_fu_648_p2 & icmp5_reg_991);

assign sel_tmp1_fu_531_p2 = (tmp_7_reg_870 ^ 1'd1);

assign sel_tmp24_demorgan_fu_621_p2 = (tmp_21_reg_979 | tmp_17_reg_917);

assign sel_tmp2_fu_536_p2 = (tmp_3_reg_952 & sel_tmp1_fu_531_p2);

assign sel_tmp31_demorgan_fu_643_p2 = (tmp_18_reg_929 | sel_tmp24_demorgan_fu_621_p2);

assign sel_tmp3_fu_541_p3 = ((sel_tmp2_fu_536_p2[0:0] === 1'b1) ? tmp_23_reg_958 : 32'd0);

assign sel_tmp4_fu_581_p2 = (sel_tmp_fu_575_p2 & icmp_reg_964);

assign sel_tmp5_fu_604_p2 = (tmp_17_reg_917 ^ 1'd1);

assign sel_tmp6_demorgan_fu_548_p2 = (tmp_7_reg_870 | tmp_3_reg_952);

assign sel_tmp6_fu_552_p2 = (sel_tmp6_demorgan_fu_548_p2 ^ 1'd1);

assign sel_tmp7_fu_558_p2 = (tmp_9_reg_882 & sel_tmp6_fu_552_p2);

assign sel_tmp8_fu_563_p3 = ((sel_tmp7_fu_558_p2[0:0] === 1'b1) ? p_Val2_4_reg_969 : sel_tmp3_fu_541_p3);

assign sel_tmp9_fu_609_p2 = (tmp_21_reg_979 & sel_tmp5_fu_604_p2);

assign sel_tmp_fu_575_p2 = (sel_tmp13_demorgan_fu_570_p2 ^ 1'd1);

assign sh_amt_1_cast_fu_424_p1 = $signed(sh_amt_1_fu_419_p3);

assign sh_amt_1_fu_419_p3 = ((tmp_18_reg_929[0:0] === 1'b1) ? tmp_19_reg_936 : tmp_20_reg_942);

assign sh_amt_cast_fu_311_p1 = $signed(sh_amt_fu_306_p3);

assign sh_amt_fu_306_p3 = ((tmp_9_reg_882[0:0] === 1'b1) ? tmp_s_reg_889 : tmp_1_reg_895);

assign tmp_10_fu_527_p2 = tmp_23_reg_958 << sh_amt_cast_reg_947;

assign tmp_11_fu_167_p1 = ireg_V_fu_137_p1[51:0];

assign tmp_12_fu_375_p2 = (($signed(tmp_s_reg_889) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_13_fu_380_p2 = ($signed(12'd4067) + $signed(F2_reg_876));

assign tmp_14_fu_404_p1 = qb_fu_397_p3;

assign tmp_15_fu_245_p1 = exp_tmp_V_1_fu_235_p4;

assign tmp_16_fu_253_p3 = {{1'd1}, {tmp_40_fu_249_p1}};

assign tmp_17_cast_fu_385_p1 = $signed(tmp_13_fu_380_p2);

assign tmp_17_fu_271_p2 = ((tmp_38_fu_223_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_18_fu_283_p2 = (($signed(F2_1_fu_277_p2) > $signed(12'd28)) ? 1'b1 : 1'b0);

assign tmp_19_fu_289_p2 = ($signed(12'd4068) + $signed(F2_1_fu_277_p2));

assign tmp_1_fu_213_p2 = (12'd28 - F2_fu_195_p2);

assign tmp_20_fu_295_p2 = (12'd28 - F2_1_fu_277_p2);

assign tmp_21_fu_428_p2 = ((F2_1_reg_923 == 12'd28) ? 1'b1 : 1'b0);

assign tmp_22_fu_437_p2 = ((sh_amt_1_fu_419_p3 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_23_fu_320_p1 = p_Val2_18_fu_301_p3[31:0];

assign tmp_24_fu_459_p1 = $unsigned(sh_amt_1_cast_fu_424_p1);

assign tmp_25_fu_330_p4 = {{sh_amt_fu_306_p3[11:5]}};

assign tmp_26_fu_463_p2 = $signed(p_Val2_21_fu_414_p3) >>> tmp_24_fu_459_p1;

assign tmp_27_fu_600_p2 = tmp_41_reg_985 << sh_amt_1_cast_reg_974;

assign tmp_28_fu_356_p1 = tmp_6_fu_350_p2[31:0];

assign tmp_29_fu_488_p2 = (($signed(tmp_19_reg_936) > $signed(12'd54)) ? 1'b1 : 1'b0);

assign tmp_2_fu_163_p1 = exp_tmp_V_fu_153_p4;

assign tmp_30_fu_493_p2 = ($signed(12'd4067) + $signed(F2_1_reg_923));

assign tmp_31_fu_517_p1 = qb_1_fu_510_p3;

assign tmp_32_fu_673_p3 = {{p_Val2_20_fu_659_p3}, {28'd0}};

assign tmp_33_fu_791_p1 = tmp_45_reg_1024;

assign tmp_34_fu_799_p1 = tmp_46_reg_1034;

assign tmp_35_fu_821_p1 = tmp_48_reg_1044;

assign tmp_37_fu_389_p3 = p_Val2_18_fu_301_p3[tmp_17_cast_fu_385_p1];

assign tmp_38_fu_223_p1 = ireg_V_1_fu_219_p1[62:0];

assign tmp_39_cast_fu_498_p1 = $signed(tmp_30_fu_493_p2);

assign tmp_3_fu_315_p2 = ((F2_reg_876 == 12'd28) ? 1'b1 : 1'b0);

assign tmp_40_fu_249_p1 = ireg_V_1_fu_219_p1[51:0];

assign tmp_41_fu_433_p1 = p_Val2_21_fu_414_p3[31:0];

assign tmp_42_fu_443_p4 = {{sh_amt_1_fu_419_p3[11:5]}};

assign tmp_43_fu_469_p1 = tmp_26_fu_463_p2[31:0];

assign tmp_44_fu_502_p3 = p_Val2_21_fu_414_p3[tmp_39_cast_fu_498_p1];

assign tmp_47_fu_779_p1 = p_Val2_14_fu_773_p2[59:0];

assign tmp_4_fu_141_p1 = ireg_V_fu_137_p1[62:0];

assign tmp_5_fu_324_p2 = ((sh_amt_fu_306_p3 < 12'd54) ? 1'b1 : 1'b0);

assign tmp_6_fu_350_p2 = $signed(p_Val2_18_fu_301_p3) >>> tmp_8_fu_346_p1;

assign tmp_7_fu_189_p2 = ((tmp_4_fu_141_p1 == 63'd0) ? 1'b1 : 1'b0);

assign tmp_8_fu_346_p1 = $unsigned(sh_amt_cast_fu_311_p1);

assign tmp_9_fu_201_p2 = (($signed(F2_fu_195_p2) > $signed(12'd28)) ? 1'b1 : 1'b0);

assign tmp_fu_171_p3 = {{1'd1}, {tmp_11_fu_167_p1}};

assign tmp_s_fu_207_p2 = ($signed(12'd4068) + $signed(F2_fu_195_p2));

always @ (posedge ap_clk) begin
    p_Result_s_reg_860[53:52] <= 2'b01;
    p_Result_1_reg_907[53:52] <= 2'b01;
    tmp_32_reg_1006[27:0] <= 28'b0000000000000000000000000000;
    tmp_47_reg_1039[0] <= 1'b0;
end

endmodule //mandelbrot
