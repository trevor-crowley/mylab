// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2017.4
// Copyright (C) 1986-2017 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _cpp_ap_fixed_HH_
#define _cpp_ap_fixed_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "cpp_ap_fixed_mul_bkb.h"

namespace ap_rtl {

struct cpp_ap_fixed : public sc_module {
    // Port declarations 9
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<10> > d_in1_V;
    sc_in< sc_lv<6> > d_in2_V;
    sc_out< sc_lv<36> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    cpp_ap_fixed(sc_module_name name);
    SC_HAS_PROCESS(cpp_ap_fixed);

    ~cpp_ap_fixed();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    cpp_ap_fixed_mul_bkb<1,3,6,13,19>* cpp_ap_fixed_mul_bkb_U1;
    sc_signal< sc_lv<4> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<19> > grp_fu_67_p2;
    sc_signal< sc_lv<19> > p_Val2_s_reg_83;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<13> > tmp_1_fu_38_p3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<17> > tmp_2_fu_54_p4;
    sc_signal< sc_lv<13> > grp_fu_67_p1;
    sc_signal< sc_lv<4> > ap_NS_fsm;
    sc_signal< sc_lv<19> > grp_fu_67_p10;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<4> ap_ST_fsm_state1;
    static const sc_lv<4> ap_ST_fsm_state2;
    static const sc_lv<4> ap_ST_fsm_state3;
    static const sc_lv<4> ap_ST_fsm_state4;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<32> ap_const_lv32_3;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_fu_67_p1();
    void thread_grp_fu_67_p10();
    void thread_tmp_1_fu_38_p3();
    void thread_tmp_2_fu_54_p4();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
