

================================================================
== Vivado HLS Report for 'example'
================================================================
* Date:           Sun Mar 11 20:20:29 2018

* Version:        2017.4 (Build 2086221 on Fri Dec 15 21:13:33 MST 2017)
* Project:        proj_axi_lite
* Solution:       solution1
* Product family: zynq
* Target device:  xc7z020clg484-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  13.33|      4.97|        1.67|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    2|    2|    2|    2|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        N/A



================================================================
== Utilization Estimates
================================================================
* Summary: 
+-----------------+---------+-------+--------+-------+
|       Name      | BRAM_18K| DSP48E|   FF   |  LUT  |
+-----------------+---------+-------+--------+-------+
|DSP              |        -|      -|       -|      -|
|Expression       |        -|      -|       0|     16|
|FIFO             |        -|      -|       -|      -|
|Instance         |        0|      -|      92|    104|
|Memory           |        -|      -|       -|      -|
|Multiplexer      |        -|      -|       -|     21|
|Register         |        -|      -|      36|      -|
+-----------------+---------+-------+--------+-------+
|Total            |        0|      0|     128|    141|
+-----------------+---------+-------+--------+-------+
|Available        |      280|    220|  106400|  53200|
+-----------------+---------+-------+--------+-------+
|Utilization (%)  |        0|      0|   ~0   |   ~0  |
+-----------------+---------+-------+--------+-------+

+ Detail: 
    * Instance: 
    +-----------------------+---------------------+---------+-------+----+-----+
    |        Instance       |        Module       | BRAM_18K| DSP48E| FF | LUT |
    +-----------------------+---------------------+---------+-------+----+-----+
    |example_BUS_A_s_axi_U  |example_BUS_A_s_axi  |        0|      0|  92|  104|
    +-----------------------+---------------------+---------+-------+----+-----+
    |Total                  |                     |        0|      0|  92|  104|
    +-----------------------+---------------------+---------+-------+----+-----+

    * DSP48: 
    N/A

    * Memory: 
    N/A

    * FIFO: 
    N/A

    * Expression: 
    +----------------+----------+-------+---+----+------------+------------+
    |  Variable Name | Operation| DSP48E| FF| LUT| Bitwidth P0| Bitwidth P1|
    +----------------+----------+-------+---+----+------------+------------+
    |tmp1_fu_53_p2   |     +    |      0|  0|   8|           8|           8|
    |tmp_1_fu_58_p2  |     +    |      0|  0|   8|           8|           8|
    +----------------+----------+-------+---+----+------------+------------+
    |Total           |          |      0|  0|  16|          16|          16|
    +----------------+----------+-------+---+----+------------+------------+

    * Multiplexer: 
    +-----------+----+-----------+-----+-----------+
    |    Name   | LUT| Input Size| Bits| Total Bits|
    +-----------+----+-----------+-----+-----------+
    |ap_NS_fsm  |  21|          4|    1|          4|
    +-----------+----+-----------+-----+-----------+
    |Total      |  21|          4|    1|          4|
    +-----------+----+-----------+-----+-----------+

    * Register: 
    +---------------+---+----+-----+-----------+
    |      Name     | FF| LUT| Bits| Const Bits|
    +---------------+---+----+-----+-----------+
    |a_read_reg_64  |  8|   0|    8|          0|
    |ap_CS_fsm      |  3|   0|    3|          0|
    |b_read_reg_69  |  8|   0|    8|          0|
    |c_0_data_reg   |  8|   0|    8|          0|
    |c_0_vld_reg    |  0|   0|    1|          1|
    |c_1_data_reg   |  8|   0|    8|          0|
    |c_1_vld_reg    |  1|   0|    1|          0|
    +---------------+---+----+-----+-----------+
    |Total          | 36|   0|   37|          1|
    +---------------+---+----+-----+-----------+



================================================================
== Interface
================================================================
* Summary: 
+---------------------+-----+-----+------------+--------------+--------------+
|      RTL Ports      | Dir | Bits|  Protocol  | Source Object|    C Type    |
+---------------------+-----+-----+------------+--------------+--------------+
|s_axi_BUS_A_AWVALID  |  in |    1|    s_axi   |     BUS_A    |    pointer   |
|s_axi_BUS_A_AWREADY  | out |    1|    s_axi   |     BUS_A    |    pointer   |
|s_axi_BUS_A_AWADDR   |  in |    6|    s_axi   |     BUS_A    |    pointer   |
|s_axi_BUS_A_WVALID   |  in |    1|    s_axi   |     BUS_A    |    pointer   |
|s_axi_BUS_A_WREADY   | out |    1|    s_axi   |     BUS_A    |    pointer   |
|s_axi_BUS_A_WDATA    |  in |   32|    s_axi   |     BUS_A    |    pointer   |
|s_axi_BUS_A_WSTRB    |  in |    4|    s_axi   |     BUS_A    |    pointer   |
|s_axi_BUS_A_ARVALID  |  in |    1|    s_axi   |     BUS_A    |    pointer   |
|s_axi_BUS_A_ARREADY  | out |    1|    s_axi   |     BUS_A    |    pointer   |
|s_axi_BUS_A_ARADDR   |  in |    6|    s_axi   |     BUS_A    |    pointer   |
|s_axi_BUS_A_RVALID   | out |    1|    s_axi   |     BUS_A    |    pointer   |
|s_axi_BUS_A_RREADY   |  in |    1|    s_axi   |     BUS_A    |    pointer   |
|s_axi_BUS_A_RDATA    | out |   32|    s_axi   |     BUS_A    |    pointer   |
|s_axi_BUS_A_RRESP    | out |    2|    s_axi   |     BUS_A    |    pointer   |
|s_axi_BUS_A_BVALID   | out |    1|    s_axi   |     BUS_A    |    pointer   |
|s_axi_BUS_A_BREADY   |  in |    1|    s_axi   |     BUS_A    |    pointer   |
|s_axi_BUS_A_BRESP    | out |    2|    s_axi   |     BUS_A    |    pointer   |
|ap_clk               |  in |    1| ap_ctrl_hs |    example   | return value |
|ap_rst_n             |  in |    1| ap_ctrl_hs |    example   | return value |
|interrupt            | out |    1| ap_ctrl_hs |    example   | return value |
+---------------------+-----+-----+------------+--------------+--------------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 1
ResetActiveHigh: 1
IsCombinational: 2
IsDatapathOnly: 2
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 3
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 

* FSM state operations: 

 <State 1> : 1.00ns
ST_1 : Operation 4 [1/1] (1.00ns)   --->   "%a_read = call i8 @_ssdm_op_Read.s_axilite.i8P(i8* %a) nounwind" [example.cpp:102]   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 5 [1/1] (1.00ns)   --->   "%b_read = call i8 @_ssdm_op_Read.s_axilite.i8P(i8* %b) nounwind" [example.cpp:102]   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_1 : Operation 6 [2/2] (1.00ns)   --->   "%c_read = call i8 @_ssdm_op_Read.s_axilite.i8P(i8* %c) nounwind" [example.cpp:102]   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>

 <State 2> : 4.97ns
ST_2 : Operation 7 [1/2] (1.00ns)   --->   "%c_read = call i8 @_ssdm_op_Read.s_axilite.i8P(i8* %c) nounwind" [example.cpp:102]   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_2 : Operation 8 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%tmp1 = add i8 %a_read, %c_read" [example.cpp:102]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.48> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 9 [1/1] (2.96ns) (root node of TernaryAdder)   --->   "%tmp_1 = add i8 %tmp1, %b_read" [example.cpp:102]   --->   Core 80 'TAddSub' <Latency = 0> <II = 1> <Delay = 1.48> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync> <CReg>
ST_2 : Operation 10 [2/2] (1.00ns)   --->   "call void @_ssdm_op_Write.s_axilite.i8P(i8* %c, i8 %tmp_1) nounwind" [example.cpp:102]   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>

 <State 3> : 1.00ns
ST_3 : Operation 11 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %a) nounwind, !map !7"
ST_3 : Operation 12 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %b) nounwind, !map !13"
ST_3 : Operation 13 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecBitsMap(i8* %c) nounwind, !map !17"
ST_3 : Operation 14 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecTopModule([8 x i8]* @example_str) nounwind"
ST_3 : Operation 15 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %a, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [6 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [example.cpp:97]
ST_3 : Operation 16 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %b, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [6 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [example.cpp:98]
ST_3 : Operation 17 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i8* %c, [10 x i8]* @p_str, i32 1, i32 1, [1 x i8]* @p_str1, i32 0, i32 0, [6 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [example.cpp:99]
ST_3 : Operation 18 [1/1] (0.00ns)   --->   "call void (...)* @_ssdm_op_SpecInterface(i32 0, [10 x i8]* @p_str, i32 0, i32 0, [1 x i8]* @p_str1, i32 0, i32 0, [6 x i8]* @p_str2, [1 x i8]* @p_str1, [1 x i8]* @p_str1, i32 0, i32 0, i32 0, i32 0, [1 x i8]* @p_str1, [1 x i8]* @p_str1) nounwind" [example.cpp:100]
ST_3 : Operation 19 [1/2] (1.00ns)   --->   "call void @_ssdm_op_Write.s_axilite.i8P(i8* %c, i8 %tmp_1) nounwind" [example.cpp:102]   --->   Core 10 's_axilite' <Latency = 0> <II = 1> <Delay = 1.00> <Adapter> <Opcode : 'read' 'write'>
ST_3 : Operation 20 [1/1] (0.00ns)   --->   "ret void" [example.cpp:103]


============================================================
+ Verbose Summary: Binding
============================================================
STG Binding: 
---------------- STG Properties BEGIN ----------------
- Is combinational: 0
- Is one-state seq: 0
- Is datapath-only: 0
- Is pipelined: 0
- Is top level: 1
Port [ Return ] is wired: 1; IO mode=ap_ctrl_hs:ce=0
Port [ a]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ b]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=0; type=0; pingpong=0; private_global=0; IO mode=ap_none:ce=0
Port [ c]:  wired=1; compound=0; hidden=0; nouse=0; global=0; static=0; extern=0; dir=2; type=0; pingpong=0; private_global=0; IO mode=ap_ovld:ce=0
---------------- STG Properties END ------------------

---------------- Datapath Model BEGIN ----------------

<LifeTime>
<method=bitvector/>
a_read      (read         ) [ 0010]
b_read      (read         ) [ 0010]
c_read      (read         ) [ 0000]
tmp1        (add          ) [ 0000]
tmp_1       (add          ) [ 0001]
StgValue_11 (specbitsmap  ) [ 0000]
StgValue_12 (specbitsmap  ) [ 0000]
StgValue_13 (specbitsmap  ) [ 0000]
StgValue_14 (spectopmodule) [ 0000]
StgValue_15 (specinterface) [ 0000]
StgValue_16 (specinterface) [ 0000]
StgValue_17 (specinterface) [ 0000]
StgValue_18 (specinterface) [ 0000]
StgValue_19 (write        ) [ 0000]
StgValue_20 (ret          ) [ 0000]
</LifeTime>

<model>

<comp_list>
<comp id="0" class="1000" name="a">
<pin_list>
<pin id="1" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="a"/></StgValue>
</bind>
</comp>

<comp id="2" class="1000" name="b">
<pin_list>
<pin id="3" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="b"/></StgValue>
</bind>
</comp>

<comp id="4" class="1000" name="c">
<pin_list>
<pin id="5" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="c"/></StgValue>
</bind>
</comp>

<comp id="6" class="1001" name="const_6">
<pin_list>
<pin id="7" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Read.s_axilite.i8P"/></StgValue>
</bind>
</comp>

<comp id="8" class="1001" name="const_8">
<pin_list>
<pin id="9" dir="1" index="0" bw="1" slack="0"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_Write.s_axilite.i8P"/></StgValue>
</bind>
</comp>

<comp id="10" class="1001" name="const_10">
<pin_list>
<pin id="11" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecBitsMap"/></StgValue>
</bind>
</comp>

<comp id="12" class="1001" name="const_12">
<pin_list>
<pin id="13" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecTopModule"/></StgValue>
</bind>
</comp>

<comp id="14" class="1001" name="const_14">
<pin_list>
<pin id="15" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="example_str"/></StgValue>
</bind>
</comp>

<comp id="16" class="1001" name="const_16">
<pin_list>
<pin id="17" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="_ssdm_op_SpecInterface"/></StgValue>
</bind>
</comp>

<comp id="18" class="1001" name="const_18">
<pin_list>
<pin id="19" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str"/></StgValue>
</bind>
</comp>

<comp id="20" class="1001" name="const_20">
<pin_list>
<pin id="21" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="22" class="1001" name="const_22">
<pin_list>
<pin id="23" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str1"/></StgValue>
</bind>
</comp>

<comp id="24" class="1001" name="const_24">
<pin_list>
<pin id="25" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name="p_str2"/></StgValue>
</bind>
</comp>

<comp id="26" class="1001" name="const_26">
<pin_list>
<pin id="27" dir="1" index="0" bw="1" slack="2147483647"/>
</pin_list>
<bind>
<StgValue><ssdm name=""/></StgValue>
</bind>
</comp>

<comp id="28" class="1004" name="a_read_read_fu_28">
<pin_list>
<pin id="29" dir="0" index="0" bw="8" slack="0"/>
<pin id="30" dir="0" index="1" bw="8" slack="0"/>
<pin id="31" dir="1" index="2" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="a_read/1 "/>
</bind>
</comp>

<comp id="34" class="1004" name="b_read_read_fu_34">
<pin_list>
<pin id="35" dir="0" index="0" bw="8" slack="0"/>
<pin id="36" dir="0" index="1" bw="8" slack="0"/>
<pin id="37" dir="1" index="2" bw="8" slack="1"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="b_read/1 "/>
</bind>
</comp>

<comp id="40" class="1004" name="grp_read_fu_40">
<pin_list>
<pin id="41" dir="0" index="0" bw="8" slack="0"/>
<pin id="42" dir="0" index="1" bw="8" slack="0"/>
<pin id="43" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="read(1150) " fcode="read"/>
<opset="c_read/1 "/>
</bind>
</comp>

<comp id="46" class="1004" name="grp_write_fu_46">
<pin_list>
<pin id="47" dir="0" index="0" bw="0" slack="0"/>
<pin id="48" dir="0" index="1" bw="8" slack="0"/>
<pin id="49" dir="0" index="2" bw="8" slack="0"/>
<pin id="50" dir="1" index="3" bw="0" slack="2147483647"/>
</pin_list>
<bind>
<opcode="write(1151) " fcode="write"/>
<opset="StgValue_10/2 "/>
</bind>
</comp>

<comp id="53" class="1004" name="tmp1_fu_53">
<pin_list>
<pin id="54" dir="0" index="0" bw="8" slack="1"/>
<pin id="55" dir="0" index="1" bw="8" slack="0"/>
<pin id="56" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="tmp1/2 "/>
</bind>
</comp>

<comp id="58" class="1004" name="tmp_1_fu_58">
<pin_list>
<pin id="59" dir="0" index="0" bw="8" slack="0"/>
<pin id="60" dir="0" index="1" bw="8" slack="1"/>
<pin id="61" dir="1" index="2" bw="8" slack="0"/>
</pin_list>
<bind>
<opcode="add(8) " fcode="add"/>
<opset="tmp_1/2 "/>
</bind>
</comp>

<comp id="64" class="1005" name="a_read_reg_64">
<pin_list>
<pin id="65" dir="0" index="0" bw="8" slack="1"/>
<pin id="66" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="a_read "/>
</bind>
</comp>

<comp id="69" class="1005" name="b_read_reg_69">
<pin_list>
<pin id="70" dir="0" index="0" bw="8" slack="1"/>
<pin id="71" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="b_read "/>
</bind>
</comp>

<comp id="74" class="1005" name="tmp_1_reg_74">
<pin_list>
<pin id="75" dir="0" index="0" bw="8" slack="1"/>
<pin id="76" dir="1" index="1" bw="8" slack="1"/>
</pin_list>
<bind>
<opset="tmp_1 "/>
</bind>
</comp>

</comp_list>

<net_list>
<net id="32"><net_src comp="6" pin="0"/><net_sink comp="28" pin=0"/></net>

<net id="33"><net_src comp="0" pin="0"/><net_sink comp="28" pin=1"/></net>

<net id="38"><net_src comp="6" pin="0"/><net_sink comp="34" pin=0"/></net>

<net id="39"><net_src comp="2" pin="0"/><net_sink comp="34" pin=1"/></net>

<net id="44"><net_src comp="6" pin="0"/><net_sink comp="40" pin=0"/></net>

<net id="45"><net_src comp="4" pin="0"/><net_sink comp="40" pin=1"/></net>

<net id="51"><net_src comp="8" pin="0"/><net_sink comp="46" pin=0"/></net>

<net id="52"><net_src comp="4" pin="0"/><net_sink comp="46" pin=1"/></net>

<net id="57"><net_src comp="40" pin="2"/><net_sink comp="53" pin=1"/></net>

<net id="62"><net_src comp="53" pin="2"/><net_sink comp="58" pin=0"/></net>

<net id="63"><net_src comp="58" pin="2"/><net_sink comp="46" pin=2"/></net>

<net id="67"><net_src comp="28" pin="2"/><net_sink comp="64" pin=0"/></net>

<net id="68"><net_src comp="64" pin="1"/><net_sink comp="53" pin=0"/></net>

<net id="72"><net_src comp="34" pin="2"/><net_sink comp="69" pin=0"/></net>

<net id="73"><net_src comp="69" pin="1"/><net_sink comp="58" pin=1"/></net>

<net id="77"><net_src comp="58" pin="2"/><net_sink comp="74" pin=0"/></net>

<net id="78"><net_src comp="74" pin="1"/><net_sink comp="46" pin=2"/></net>

</net_list>

</model> 
---------------- Datapath Model END ------------------

* FSMD analyzer results:
  - Output states:
	Port: c | {3 }
 - Input state : 
	Port: example : a | {1 }
	Port: example : b | {1 }
	Port: example : c | {1 }
  - Chain level:
	State 1
	State 2
		tmp_1 : 1
		StgValue_10 : 2
	State 3


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================

* Functional unit list:
|----------|-------------------|---------|---------|
| Operation|  Functional Unit  |    FF   |   LUT   |
|----------|-------------------|---------|---------|
|    add   |     tmp1_fu_53    |    0    |    8    |
|          |    tmp_1_fu_58    |    0    |    8    |
|----------|-------------------|---------|---------|
|          | a_read_read_fu_28 |    0    |    0    |
|   read   | b_read_read_fu_34 |    0    |    0    |
|          |   grp_read_fu_40  |    0    |    0    |
|----------|-------------------|---------|---------|
|   write  |  grp_write_fu_46  |    0    |    0    |
|----------|-------------------|---------|---------|
|   Total  |                   |    0    |    16   |
|----------|-------------------|---------|---------|

Memories:
N/A

* Register list:
+-------------+--------+
|             |   FF   |
+-------------+--------+
|a_read_reg_64|    8   |
|b_read_reg_69|    8   |
| tmp_1_reg_74|    8   |
+-------------+--------+
|    Total    |   24   |
+-------------+--------+

* Multiplexer (MUX) list: 
|-----------------|------|------|------|--------||---------||---------|
|       Comp      |  Pin | Size |  BW  | S x BW ||  Delay  ||   LUT   |
|-----------------|------|------|------|--------||---------||---------|
| grp_write_fu_46 |  p2  |   2  |   8  |   16   ||    9    |
|-----------------|------|------|------|--------||---------||---------|
|      Total      |      |      |      |   16   ||  1.304  ||    9    |
|-----------------|------|------|------|--------||---------||---------|



* Summary:
+-----------+--------+--------+--------+
|           |  Delay |   FF   |   LUT  |
+-----------+--------+--------+--------+
|  Function |    -   |    0   |   16   |
|   Memory  |    -   |    -   |    -   |
|Multiplexer|    1   |    -   |    9   |
|  Register |    -   |   24   |    -   |
+-----------+--------+--------+--------+
|   Total   |    1   |   24   |   25   |
+-----------+--------+--------+--------+
