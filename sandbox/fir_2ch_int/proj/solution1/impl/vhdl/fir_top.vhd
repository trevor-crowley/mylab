-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.1
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity fir_top is
port (
    din_i_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    din_i_V_empty_n : IN STD_LOGIC;
    din_i_V_read : OUT STD_LOGIC;
    din_q_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
    din_q_V_empty_n : IN STD_LOGIC;
    din_q_V_read : OUT STD_LOGIC;
    dout_i_V_din : OUT STD_LOGIC_VECTOR (39 downto 0);
    dout_i_V_full_n : IN STD_LOGIC;
    dout_i_V_write : OUT STD_LOGIC;
    dout_q_V_din : OUT STD_LOGIC_VECTOR (39 downto 0);
    dout_q_V_full_n : IN STD_LOGIC;
    dout_q_V_write : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC );
end;


architecture behav of fir_top is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "fir_top,hls_ip_2020_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7k160t-fbg484-1,HLS_INPUT_CLOCK=4.000000,HLS_INPUT_ARCH=dataflow,HLS_SYN_CLOCK=3.500000,HLS_SYN_LAT=5001,HLS_SYN_TPT=5002,HLS_SYN_MEM=0,HLS_SYN_DSP=48,HLS_SYN_FF=359,HLS_SYN_LUT=555,HLS_VERSION=2020_1}";
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv40_0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';

    signal dummy_fe_U0_ap_start : STD_LOGIC;
    signal dummy_fe_U0_start_full_n : STD_LOGIC;
    signal dummy_fe_U0_ap_done : STD_LOGIC;
    signal dummy_fe_U0_ap_continue : STD_LOGIC;
    signal dummy_fe_U0_ap_idle : STD_LOGIC;
    signal dummy_fe_U0_ap_ready : STD_LOGIC;
    signal dummy_fe_U0_start_out : STD_LOGIC;
    signal dummy_fe_U0_start_write : STD_LOGIC;
    signal dummy_fe_U0_din_i_V_read : STD_LOGIC;
    signal dummy_fe_U0_din_q_V_read : STD_LOGIC;
    signal dummy_fe_U0_out_V_din : STD_LOGIC_VECTOR (15 downto 0);
    signal dummy_fe_U0_out_V_write : STD_LOGIC;
    signal run_U0_ap_start : STD_LOGIC;
    signal run_U0_ap_done : STD_LOGIC;
    signal run_U0_ap_idle : STD_LOGIC;
    signal run_U0_ap_ready : STD_LOGIC;
    signal run_U0_ap_continue : STD_LOGIC;
    signal run_U0_in_V_read : STD_LOGIC;
    signal run_U0_out_V_din : STD_LOGIC_VECTOR (39 downto 0);
    signal run_U0_out_V_write : STD_LOGIC;
    signal dummy_be_U0_ap_start : STD_LOGIC;
    signal dummy_be_U0_ap_done : STD_LOGIC;
    signal dummy_be_U0_ap_continue : STD_LOGIC;
    signal dummy_be_U0_ap_idle : STD_LOGIC;
    signal dummy_be_U0_ap_ready : STD_LOGIC;
    signal dummy_be_U0_in_V_read : STD_LOGIC;
    signal dummy_be_U0_dout_i_V_din : STD_LOGIC_VECTOR (39 downto 0);
    signal dummy_be_U0_dout_i_V_write : STD_LOGIC;
    signal dummy_be_U0_dout_q_V_din : STD_LOGIC_VECTOR (39 downto 0);
    signal dummy_be_U0_dout_q_V_write : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal fir_in_channel_full_n : STD_LOGIC;
    signal fir_in_channel_dout : STD_LOGIC_VECTOR (15 downto 0);
    signal fir_in_channel_empty_n : STD_LOGIC;
    signal fir_out_channel_full_n : STD_LOGIC;
    signal fir_out_channel_dout : STD_LOGIC_VECTOR (39 downto 0);
    signal fir_out_channel_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal start_for_run_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_run_U0_full_n : STD_LOGIC;
    signal start_for_run_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_run_U0_empty_n : STD_LOGIC;
    signal start_for_dummy_be_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_dummy_be_U0_full_n : STD_LOGIC;
    signal start_for_dummy_be_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_dummy_be_U0_empty_n : STD_LOGIC;
    signal run_U0_start_full_n : STD_LOGIC;
    signal run_U0_start_write : STD_LOGIC;
    signal dummy_be_U0_start_full_n : STD_LOGIC;
    signal dummy_be_U0_start_write : STD_LOGIC;

    component dummy_fe IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        din_i_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        din_i_V_empty_n : IN STD_LOGIC;
        din_i_V_read : OUT STD_LOGIC;
        din_q_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        din_q_V_empty_n : IN STD_LOGIC;
        din_q_V_read : OUT STD_LOGIC;
        out_V_din : OUT STD_LOGIC_VECTOR (15 downto 0);
        out_V_full_n : IN STD_LOGIC;
        out_V_write : OUT STD_LOGIC );
    end component;


    component run IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ce : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        in_V_dout : IN STD_LOGIC_VECTOR (15 downto 0);
        in_V_empty_n : IN STD_LOGIC;
        in_V_read : OUT STD_LOGIC;
        out_V_din : OUT STD_LOGIC_VECTOR (39 downto 0);
        out_V_full_n : IN STD_LOGIC;
        out_V_write : OUT STD_LOGIC );
    end component;


    component dummy_be IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_V_dout : IN STD_LOGIC_VECTOR (39 downto 0);
        in_V_empty_n : IN STD_LOGIC;
        in_V_read : OUT STD_LOGIC;
        dout_i_V_din : OUT STD_LOGIC_VECTOR (39 downto 0);
        dout_i_V_full_n : IN STD_LOGIC;
        dout_i_V_write : OUT STD_LOGIC;
        dout_q_V_din : OUT STD_LOGIC_VECTOR (39 downto 0);
        dout_q_V_full_n : IN STD_LOGIC;
        dout_q_V_write : OUT STD_LOGIC );
    end component;


    component fifo_w16_d1_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (15 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (15 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w40_d1_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (39 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (39 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_run_U0 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_dummy_bbkb IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    dummy_fe_U0 : component dummy_fe
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dummy_fe_U0_ap_start,
        start_full_n => dummy_fe_U0_start_full_n,
        ap_done => dummy_fe_U0_ap_done,
        ap_continue => dummy_fe_U0_ap_continue,
        ap_idle => dummy_fe_U0_ap_idle,
        ap_ready => dummy_fe_U0_ap_ready,
        start_out => dummy_fe_U0_start_out,
        start_write => dummy_fe_U0_start_write,
        din_i_V_dout => din_i_V_dout,
        din_i_V_empty_n => din_i_V_empty_n,
        din_i_V_read => dummy_fe_U0_din_i_V_read,
        din_q_V_dout => din_q_V_dout,
        din_q_V_empty_n => din_q_V_empty_n,
        din_q_V_read => dummy_fe_U0_din_q_V_read,
        out_V_din => dummy_fe_U0_out_V_din,
        out_V_full_n => fir_in_channel_full_n,
        out_V_write => dummy_fe_U0_out_V_write);

    run_U0 : component run
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => run_U0_ap_start,
        ap_ce => ap_const_logic_1,
        ap_done => run_U0_ap_done,
        ap_idle => run_U0_ap_idle,
        ap_ready => run_U0_ap_ready,
        ap_continue => run_U0_ap_continue,
        in_V_dout => fir_in_channel_dout,
        in_V_empty_n => fir_in_channel_empty_n,
        in_V_read => run_U0_in_V_read,
        out_V_din => run_U0_out_V_din,
        out_V_full_n => fir_out_channel_full_n,
        out_V_write => run_U0_out_V_write);

    dummy_be_U0 : component dummy_be
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => dummy_be_U0_ap_start,
        ap_done => dummy_be_U0_ap_done,
        ap_continue => dummy_be_U0_ap_continue,
        ap_idle => dummy_be_U0_ap_idle,
        ap_ready => dummy_be_U0_ap_ready,
        in_V_dout => fir_out_channel_dout,
        in_V_empty_n => fir_out_channel_empty_n,
        in_V_read => dummy_be_U0_in_V_read,
        dout_i_V_din => dummy_be_U0_dout_i_V_din,
        dout_i_V_full_n => dout_i_V_full_n,
        dout_i_V_write => dummy_be_U0_dout_i_V_write,
        dout_q_V_din => dummy_be_U0_dout_q_V_din,
        dout_q_V_full_n => dout_q_V_full_n,
        dout_q_V_write => dummy_be_U0_dout_q_V_write);

    fir_in_channel_U : component fifo_w16_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => dummy_fe_U0_out_V_din,
        if_full_n => fir_in_channel_full_n,
        if_write => dummy_fe_U0_out_V_write,
        if_dout => fir_in_channel_dout,
        if_empty_n => fir_in_channel_empty_n,
        if_read => run_U0_in_V_read);

    fir_out_channel_U : component fifo_w40_d1_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => run_U0_out_V_din,
        if_full_n => fir_out_channel_full_n,
        if_write => run_U0_out_V_write,
        if_dout => fir_out_channel_dout,
        if_empty_n => fir_out_channel_empty_n,
        if_read => dummy_be_U0_in_V_read);

    start_for_run_U0_U : component start_for_run_U0
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_run_U0_din,
        if_full_n => start_for_run_U0_full_n,
        if_write => dummy_fe_U0_start_write,
        if_dout => start_for_run_U0_dout,
        if_empty_n => start_for_run_U0_empty_n,
        if_read => run_U0_ap_ready);

    start_for_dummy_bbkb_U : component start_for_dummy_bbkb
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_dummy_be_U0_din,
        if_full_n => start_for_dummy_be_U0_full_n,
        if_write => dummy_fe_U0_start_write,
        if_dout => start_for_dummy_be_U0_dout,
        if_empty_n => start_for_dummy_be_U0_empty_n,
        if_read => dummy_be_U0_ap_ready);




    ap_done <= dummy_be_U0_ap_done;
    ap_idle <= (run_U0_ap_idle and dummy_fe_U0_ap_idle and dummy_be_U0_ap_idle);
    ap_ready <= dummy_fe_U0_ap_ready;
    ap_sync_continue <= ap_const_logic_1;
    ap_sync_done <= dummy_be_U0_ap_done;
    ap_sync_ready <= dummy_fe_U0_ap_ready;
    din_i_V_read <= dummy_fe_U0_din_i_V_read;
    din_q_V_read <= dummy_fe_U0_din_q_V_read;
    dout_i_V_din <= dummy_be_U0_dout_i_V_din;
    dout_i_V_write <= dummy_be_U0_dout_i_V_write;
    dout_q_V_din <= dummy_be_U0_dout_q_V_din;
    dout_q_V_write <= dummy_be_U0_dout_q_V_write;
    dummy_be_U0_ap_continue <= ap_const_logic_1;
    dummy_be_U0_ap_start <= start_for_dummy_be_U0_empty_n;
    dummy_be_U0_start_full_n <= ap_const_logic_1;
    dummy_be_U0_start_write <= ap_const_logic_0;
    dummy_fe_U0_ap_continue <= ap_const_logic_1;
    dummy_fe_U0_ap_start <= ap_start;
    dummy_fe_U0_start_full_n <= (start_for_run_U0_full_n and start_for_dummy_be_U0_full_n);
    run_U0_ap_continue <= ap_const_logic_1;
    run_U0_ap_start <= start_for_run_U0_empty_n;
    run_U0_start_full_n <= ap_const_logic_1;
    run_U0_start_write <= ap_const_logic_0;
    start_for_dummy_be_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_run_U0_din <= (0=>ap_const_logic_1, others=>'-');
end behav;
