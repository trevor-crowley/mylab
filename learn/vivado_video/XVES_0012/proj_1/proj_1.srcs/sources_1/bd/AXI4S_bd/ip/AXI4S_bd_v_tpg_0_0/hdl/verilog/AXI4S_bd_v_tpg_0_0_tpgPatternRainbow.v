// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module AXI4S_bd_v_tpg_0_0_tpgPatternRainbow (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        ap_ce,
        x,
        color,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5
);

parameter    ap_ST_fsm_pp0_stage0 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input   ap_ce;
input  [15:0] x;
input  [7:0] color;
output  [7:0] ap_return_0;
output  [7:0] ap_return_1;
output  [7:0] ap_return_2;
output  [7:0] ap_return_3;
output  [7:0] ap_return_4;
output  [7:0] ap_return_5;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
reg    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [10:0] tpgSinTableArray_9bi_address0;
reg    tpgSinTableArray_9bi_ce0;
wire   [8:0] tpgSinTableArray_9bi_q0;
wire   [10:0] tpgSinTableArray_9bi_address1;
reg    tpgSinTableArray_9bi_ce1;
wire   [8:0] tpgSinTableArray_9bi_q1;
wire   [10:0] tpgSinTableArray_9bi_address2;
reg    tpgSinTableArray_9bi_ce2;
wire   [8:0] tpgSinTableArray_9bi_q2;
wire   [10:0] tpgSinTableArray_9bi_address3;
reg    tpgSinTableArray_9bi_ce3;
wire   [8:0] tpgSinTableArray_9bi_q3;
wire   [10:0] tpgSinTableArray_9bi_address4;
reg    tpgSinTableArray_9bi_ce4;
wire   [8:0] tpgSinTableArray_9bi_q4;
wire   [10:0] tpgSinTableArray_9bi_address5;
reg    tpgSinTableArray_9bi_ce5;
wire   [8:0] tpgSinTableArray_9bi_q5;
wire   [0:0] icmp_ln1227_fu_167_p2;
wire   [0:0] icmp_ln1260_fu_183_p2;
wire   [0:0] trunc_ln1260_fu_220_p1;
reg   [0:0] trunc_ln1260_reg_1192;
reg    ap_block_pp0_stage0_subdone;
wire   [63:0] zext_ln1223_fu_193_p1;
wire   [63:0] zext_ln1224_fu_204_p1;
wire   [63:0] zext_ln1225_fu_215_p1;
wire   [63:0] zext_ln1223_1_fu_230_p1;
wire   [63:0] zext_ln1224_1_fu_241_p1;
wire   [63:0] zext_ln1225_1_fu_252_p1;
wire   [6:0] tmp_fu_173_p4;
wire   [10:0] trunc_ln1223_fu_189_p1;
wire   [10:0] add_ln1224_fu_198_p2;
wire   [10:0] add_ln1225_fu_209_p2;
wire   [10:0] add_ln1223_2_fu_224_p2;
wire   [10:0] add_ln1224_2_fu_235_p2;
wire   [10:0] add_ln1225_2_fu_246_p2;
wire   [7:0] trunc_ln1223_1_fu_257_p1;
wire   [8:0] add_ln1223_fu_261_p2;
wire   [0:0] tmp_3_fu_273_p3;
wire   [7:0] xor_ln1223_fu_267_p2;
wire   [7:0] trunc_ln1224_fu_289_p1;
wire   [8:0] add_ln1224_1_fu_293_p2;
wire   [0:0] tmp_4_fu_305_p3;
wire   [7:0] xor_ln1224_fu_299_p2;
wire   [7:0] trunc_ln1225_fu_321_p1;
wire   [8:0] add_ln1225_1_fu_325_p2;
wire   [0:0] tmp_5_fu_337_p3;
wire   [7:0] xor_ln1225_fu_331_p2;
wire   [7:0] select_ln1223_fu_281_p3;
wire   [7:0] select_ln1224_fu_313_p3;
wire   [7:0] select_ln1225_fu_345_p3;
wire   [14:0] grp_fu_1050_p3;
wire   [15:0] grp_fu_1059_p3;
wire   [16:0] grp_fu_1068_p3;
wire   [14:0] shl_ln_fu_380_p3;
wire  signed [15:0] grp_fu_1079_p3;
wire   [16:0] zext_ln1238_1_fu_392_p1;
wire   [16:0] zext_ln1238_fu_388_p1;
wire   [16:0] add_ln1238_2_fu_395_p2;
wire   [14:0] shl_ln1_fu_411_p3;
wire   [7:0] mul_ln1239_fu_423_p1;
wire   [15:0] zext_ln1237_1_fu_357_p1;
wire  signed [15:0] grp_fu_1096_p3;
wire   [16:0] zext_ln1239_fu_419_p1;
wire  signed [16:0] sext_ln1239_1_fu_429_p1;
wire   [16:0] add_ln1239_1_fu_432_p2;
wire   [16:0] add_ln1239_2_fu_438_p2;
wire   [8:0] trunc_ln6_fu_371_p4;
wire   [0:0] tmp_6_fu_454_p3;
wire   [0:0] icmp_ln1240_fu_461_p2;
wire   [7:0] trunc_ln1240_1_fu_473_p4;
wire   [0:0] or_ln1240_fu_467_p2;
wire   [7:0] select_ln1240_fu_482_p3;
wire   [8:0] trunc_ln7_fu_401_p4;
wire   [0:0] icmp_ln1241_fu_498_p2;
wire   [0:0] icmp_ln1241_1_fu_512_p2;
wire   [7:0] select_ln1241_fu_504_p3;
wire   [7:0] trunc_ln9_fu_518_p4;
wire   [8:0] trunc_ln8_fu_444_p4;
wire   [0:0] tmp_7_fu_542_p3;
wire   [7:0] trunc_ln_fu_550_p4;
wire   [7:0] select_ln1240_1_fu_490_p3;
wire   [0:0] icmp_ln1242_fu_536_p2;
wire   [0:0] xor_ln1227_fu_575_p2;
wire   [0:0] and_ln1242_fu_580_p2;
wire   [7:0] select_ln1227_fu_568_p3;
wire   [7:0] select_ln1241_1_fu_528_p3;
wire   [7:0] select_ln1227_1_fu_594_p3;
wire   [7:0] select_ln1242_fu_560_p3;
wire   [7:0] select_ln1227_2_fu_609_p3;
wire   [7:0] select_ln1242_3_fu_616_p3;
wire   [7:0] select_ln1242_2_fu_601_p3;
wire   [7:0] empty_fu_624_p3;
wire   [7:0] trunc_ln1223_2_fu_638_p1;
wire   [8:0] add_ln1223_1_fu_642_p2;
wire   [0:0] tmp_8_fu_654_p3;
wire   [7:0] xor_ln1223_1_fu_648_p2;
wire   [7:0] trunc_ln1224_1_fu_670_p1;
wire   [8:0] add_ln1224_3_fu_674_p2;
wire   [0:0] tmp_9_fu_686_p3;
wire   [7:0] xor_ln1224_1_fu_680_p2;
wire   [7:0] trunc_ln1225_1_fu_702_p1;
wire   [8:0] add_ln1225_3_fu_706_p2;
wire   [0:0] tmp_10_fu_718_p3;
wire   [7:0] xor_ln1225_1_fu_712_p2;
wire   [7:0] select_ln1223_1_fu_662_p3;
wire   [7:0] select_ln1224_1_fu_694_p3;
wire   [7:0] select_ln1225_1_fu_726_p3;
wire   [14:0] grp_fu_1105_p3;
wire   [15:0] grp_fu_1114_p3;
wire   [16:0] grp_fu_1123_p3;
wire   [14:0] shl_ln1238_1_fu_761_p3;
wire  signed [15:0] grp_fu_1134_p3;
wire   [16:0] zext_ln1238_3_fu_773_p1;
wire   [16:0] zext_ln1238_2_fu_769_p1;
wire   [16:0] add_ln1238_5_fu_776_p2;
wire   [14:0] shl_ln1239_1_fu_792_p3;
wire   [7:0] mul_ln1239_2_fu_804_p1;
wire   [15:0] zext_ln1237_7_fu_738_p1;
wire  signed [15:0] grp_fu_1151_p3;
wire   [16:0] zext_ln1239_1_fu_800_p1;
wire  signed [16:0] sext_ln1239_3_fu_810_p1;
wire   [16:0] add_ln1239_4_fu_813_p2;
wire   [16:0] add_ln1239_5_fu_819_p2;
wire   [8:0] trunc_ln1237_1_fu_752_p4;
wire   [0:0] tmp_11_fu_835_p3;
wire   [0:0] icmp_ln1240_1_fu_842_p2;
wire   [7:0] trunc_ln1240_3_fu_854_p4;
wire   [0:0] or_ln1240_1_fu_848_p2;
wire   [7:0] select_ln1240_2_fu_863_p3;
wire   [8:0] trunc_ln1239_1_fu_782_p4;
wire   [0:0] icmp_ln1241_2_fu_879_p2;
wire   [0:0] icmp_ln1241_3_fu_893_p2;
wire   [7:0] select_ln1241_2_fu_885_p3;
wire   [7:0] trunc_ln1241_1_fu_899_p4;
wire   [8:0] trunc_ln1240_2_fu_825_p4;
wire   [0:0] tmp_12_fu_923_p3;
wire   [7:0] trunc_ln1242_1_fu_931_p4;
wire   [7:0] select_ln1240_3_fu_871_p3;
wire   [0:0] icmp_ln1242_1_fu_917_p2;
wire   [0:0] and_ln1242_1_fu_956_p2;
wire   [7:0] select_ln1227_3_fu_949_p3;
wire   [7:0] select_ln1241_3_fu_909_p3;
wire   [7:0] select_ln1227_4_fu_970_p3;
wire   [7:0] select_ln1242_4_fu_941_p3;
wire   [7:0] select_ln1227_5_fu_985_p3;
wire   [7:0] select_ln1242_6_fu_977_p3;
wire   [7:0] select_ln1242_7_fu_992_p3;
wire   [7:0] empty_32_fu_1000_p3;
wire   [7:0] select_ln1242_1_fu_586_p3;
wire   [7:0] select_ln1260_fu_631_p3;
wire   [7:0] select_ln1242_5_fu_962_p3;
wire   [7:0] select_ln1260_1_fu_1007_p3;
wire   [7:0] grp_fu_1050_p0;
wire   [7:0] grp_fu_1050_p1;
wire   [14:0] zext_ln1237_fu_353_p1;
wire   [13:0] grp_fu_1050_p2;
wire   [8:0] grp_fu_1059_p0;
wire   [7:0] grp_fu_1059_p1;
wire   [14:0] grp_fu_1059_p2;
wire   [5:0] grp_fu_1068_p0;
wire   [7:0] grp_fu_1068_p1;
wire   [13:0] zext_ln1237_2_fu_361_p1;
wire   [15:0] grp_fu_1068_p2;
wire  signed [6:0] grp_fu_1079_p0;
wire   [7:0] grp_fu_1079_p1;
wire  signed [15:0] grp_fu_1087_p3;
wire  signed [7:0] grp_fu_1087_p0;
wire   [7:0] grp_fu_1087_p1;
wire  signed [5:0] grp_fu_1096_p0;
wire   [7:0] grp_fu_1096_p1;
wire   [15:0] grp_fu_1096_p2;
wire   [7:0] grp_fu_1105_p0;
wire   [7:0] grp_fu_1105_p1;
wire   [14:0] zext_ln1237_6_fu_734_p1;
wire   [13:0] grp_fu_1105_p2;
wire   [8:0] grp_fu_1114_p0;
wire   [7:0] grp_fu_1114_p1;
wire   [14:0] grp_fu_1114_p2;
wire   [5:0] grp_fu_1123_p0;
wire   [7:0] grp_fu_1123_p1;
wire   [13:0] zext_ln1237_8_fu_742_p1;
wire   [15:0] grp_fu_1123_p2;
wire  signed [6:0] grp_fu_1134_p0;
wire   [7:0] grp_fu_1134_p1;
wire  signed [15:0] grp_fu_1142_p3;
wire  signed [7:0] grp_fu_1142_p0;
wire   [7:0] grp_fu_1142_p1;
wire  signed [5:0] grp_fu_1151_p0;
wire   [7:0] grp_fu_1151_p1;
wire   [15:0] grp_fu_1151_p2;
reg   [0:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
wire    ap_enable_pp0;
wire   [15:0] grp_fu_1059_p20;
wire   [16:0] grp_fu_1068_p20;
wire   [15:0] grp_fu_1114_p20;
wire   [16:0] grp_fu_1123_p20;

// power-on initialization
initial begin
#0 ap_CS_fsm = 1'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

AXI4S_bd_v_tpg_0_0_tpgPatternRainbow_tpgSinTableArray_9bi #(
    .DataWidth( 9 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
tpgSinTableArray_9bi_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tpgSinTableArray_9bi_address0),
    .ce0(tpgSinTableArray_9bi_ce0),
    .q0(tpgSinTableArray_9bi_q0),
    .address1(tpgSinTableArray_9bi_address1),
    .ce1(tpgSinTableArray_9bi_ce1),
    .q1(tpgSinTableArray_9bi_q1),
    .address2(tpgSinTableArray_9bi_address2),
    .ce2(tpgSinTableArray_9bi_ce2),
    .q2(tpgSinTableArray_9bi_q2),
    .address3(tpgSinTableArray_9bi_address3),
    .ce3(tpgSinTableArray_9bi_ce3),
    .q3(tpgSinTableArray_9bi_q3),
    .address4(tpgSinTableArray_9bi_address4),
    .ce4(tpgSinTableArray_9bi_ce4),
    .q4(tpgSinTableArray_9bi_q4),
    .address5(tpgSinTableArray_9bi_address5),
    .ce5(tpgSinTableArray_9bi_ce5),
    .q5(tpgSinTableArray_9bi_q5)
);

AXI4S_bd_v_tpg_0_0_v_tpg_mac_muladd_8ns_8ns_14ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 15 ))
v_tpg_mac_muladd_8ns_8ns_14ns_15_1_1_U38(
    .din0(grp_fu_1050_p0),
    .din1(grp_fu_1050_p1),
    .din2(grp_fu_1050_p2),
    .dout(grp_fu_1050_p3)
);

AXI4S_bd_v_tpg_0_0_v_tpg_mac_muladd_9ns_8ns_15ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 15 ),
    .dout_WIDTH( 16 ))
v_tpg_mac_muladd_9ns_8ns_15ns_16_1_1_U39(
    .din0(grp_fu_1059_p0),
    .din1(grp_fu_1059_p1),
    .din2(grp_fu_1059_p2),
    .dout(grp_fu_1059_p3)
);

AXI4S_bd_v_tpg_0_0_v_tpg_mac_muladd_6ns_8ns_16ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
v_tpg_mac_muladd_6ns_8ns_16ns_17_1_1_U40(
    .din0(grp_fu_1068_p0),
    .din1(grp_fu_1068_p1),
    .din2(grp_fu_1068_p2),
    .dout(grp_fu_1068_p3)
);

AXI4S_bd_v_tpg_0_0_v_tpg_mac_muladd_7s_8ns_16s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
v_tpg_mac_muladd_7s_8ns_16s_16_1_1_U41(
    .din0(grp_fu_1079_p0),
    .din1(grp_fu_1079_p1),
    .din2(grp_fu_1087_p3),
    .dout(grp_fu_1079_p3)
);

AXI4S_bd_v_tpg_0_0_v_tpg_mac_muladd_8s_8ns_16s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
v_tpg_mac_muladd_8s_8ns_16s_16_1_1_U42(
    .din0(grp_fu_1087_p0),
    .din1(grp_fu_1087_p1),
    .din2(16'd32896),
    .dout(grp_fu_1087_p3)
);

AXI4S_bd_v_tpg_0_0_v_tpg_mac_muladd_6s_8ns_16ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
v_tpg_mac_muladd_6s_8ns_16ns_16_1_1_U43(
    .din0(grp_fu_1096_p0),
    .din1(grp_fu_1096_p1),
    .din2(grp_fu_1096_p2),
    .dout(grp_fu_1096_p3)
);

AXI4S_bd_v_tpg_0_0_v_tpg_mac_muladd_8ns_8ns_14ns_15_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 14 ),
    .dout_WIDTH( 15 ))
v_tpg_mac_muladd_8ns_8ns_14ns_15_1_1_U44(
    .din0(grp_fu_1105_p0),
    .din1(grp_fu_1105_p1),
    .din2(grp_fu_1105_p2),
    .dout(grp_fu_1105_p3)
);

AXI4S_bd_v_tpg_0_0_v_tpg_mac_muladd_9ns_8ns_15ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 9 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 15 ),
    .dout_WIDTH( 16 ))
v_tpg_mac_muladd_9ns_8ns_15ns_16_1_1_U45(
    .din0(grp_fu_1114_p0),
    .din1(grp_fu_1114_p1),
    .din2(grp_fu_1114_p2),
    .dout(grp_fu_1114_p3)
);

AXI4S_bd_v_tpg_0_0_v_tpg_mac_muladd_6ns_8ns_16ns_17_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 17 ))
v_tpg_mac_muladd_6ns_8ns_16ns_17_1_1_U46(
    .din0(grp_fu_1123_p0),
    .din1(grp_fu_1123_p1),
    .din2(grp_fu_1123_p2),
    .dout(grp_fu_1123_p3)
);

AXI4S_bd_v_tpg_0_0_v_tpg_mac_muladd_7s_8ns_16s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 7 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
v_tpg_mac_muladd_7s_8ns_16s_16_1_1_U47(
    .din0(grp_fu_1134_p0),
    .din1(grp_fu_1134_p1),
    .din2(grp_fu_1142_p3),
    .dout(grp_fu_1134_p3)
);

AXI4S_bd_v_tpg_0_0_v_tpg_mac_muladd_8s_8ns_16s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
v_tpg_mac_muladd_8s_8ns_16s_16_1_1_U48(
    .din0(grp_fu_1142_p0),
    .din1(grp_fu_1142_p1),
    .din2(16'd32896),
    .dout(grp_fu_1142_p3)
);

AXI4S_bd_v_tpg_0_0_v_tpg_mac_muladd_6s_8ns_16ns_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 6 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
v_tpg_mac_muladd_6s_8ns_16ns_16_1_1_U49(
    .din0(grp_fu_1151_p0),
    .din1(grp_fu_1151_p1),
    .din2(grp_fu_1151_p2),
    .dout(grp_fu_1151_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
            ap_enable_reg_pp0_iter1 <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln1260_reg_1192 <= trunc_ln1260_fu_220_p1;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b0 == ap_block_pp0_stage0) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tpgSinTableArray_9bi_ce0 = 1'b1;
    end else begin
        tpgSinTableArray_9bi_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tpgSinTableArray_9bi_ce1 = 1'b1;
    end else begin
        tpgSinTableArray_9bi_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tpgSinTableArray_9bi_ce2 = 1'b1;
    end else begin
        tpgSinTableArray_9bi_ce2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tpgSinTableArray_9bi_ce3 = 1'b1;
    end else begin
        tpgSinTableArray_9bi_ce3 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tpgSinTableArray_9bi_ce4 = 1'b1;
    end else begin
        tpgSinTableArray_9bi_ce4 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_ce) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_start == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tpgSinTableArray_9bi_ce5 = 1'b1;
    end else begin
        tpgSinTableArray_9bi_ce5 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1223_1_fu_642_p2 = (9'd128 + tpgSinTableArray_9bi_q3);

assign add_ln1223_2_fu_224_p2 = (11'd1 + trunc_ln1223_fu_189_p1);

assign add_ln1223_fu_261_p2 = (9'd128 + tpgSinTableArray_9bi_q0);

assign add_ln1224_1_fu_293_p2 = (9'd128 + tpgSinTableArray_9bi_q1);

assign add_ln1224_2_fu_235_p2 = (11'd683 + trunc_ln1223_fu_189_p1);

assign add_ln1224_3_fu_674_p2 = (9'd128 + tpgSinTableArray_9bi_q4);

assign add_ln1224_fu_198_p2 = (11'd682 + trunc_ln1223_fu_189_p1);

assign add_ln1225_1_fu_325_p2 = (9'd128 + tpgSinTableArray_9bi_q2);

assign add_ln1225_2_fu_246_p2 = ($signed(11'd1365) + $signed(trunc_ln1223_fu_189_p1));

assign add_ln1225_3_fu_706_p2 = (9'd128 + tpgSinTableArray_9bi_q5);

assign add_ln1225_fu_209_p2 = ($signed(11'd1364) + $signed(trunc_ln1223_fu_189_p1));

assign add_ln1238_2_fu_395_p2 = (zext_ln1238_1_fu_392_p1 + zext_ln1238_fu_388_p1);

assign add_ln1238_5_fu_776_p2 = (zext_ln1238_3_fu_773_p1 + zext_ln1238_2_fu_769_p1);

assign add_ln1239_1_fu_432_p2 = (17'd32896 + zext_ln1239_fu_419_p1);

assign add_ln1239_2_fu_438_p2 = ($signed(sext_ln1239_1_fu_429_p1) + $signed(add_ln1239_1_fu_432_p2));

assign add_ln1239_4_fu_813_p2 = (17'd32896 + zext_ln1239_1_fu_800_p1);

assign add_ln1239_5_fu_819_p2 = ($signed(sext_ln1239_3_fu_810_p1) + $signed(add_ln1239_4_fu_813_p2));

assign and_ln1242_1_fu_956_p2 = (xor_ln1227_fu_575_p2 & icmp_ln1242_1_fu_917_p2);

assign and_ln1242_fu_580_p2 = (xor_ln1227_fu_575_p2 & icmp_ln1242_fu_536_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_start == 1'b0) & (ap_start == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((1'b0 == ap_ce) | ((ap_start == 1'b0) & (ap_start == 1'b1)));
end

always @ (*) begin
    ap_block_state1_pp0_stage0_iter0 = (ap_start == 1'b0);
end

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_reg_pp0_iter0 = ap_start;

assign ap_return_0 = select_ln1242_1_fu_586_p3;

assign ap_return_1 = select_ln1260_fu_631_p3;

assign ap_return_2 = select_ln1242_3_fu_616_p3;

assign ap_return_3 = select_ln1242_5_fu_962_p3;

assign ap_return_4 = select_ln1260_1_fu_1007_p3;

assign ap_return_5 = select_ln1242_7_fu_992_p3;

assign empty_32_fu_1000_p3 = ((trunc_ln1260_reg_1192[0:0] === 1'b1) ? select_ln1242_6_fu_977_p3 : select_ln1242_7_fu_992_p3);

assign empty_fu_624_p3 = ((trunc_ln1260_reg_1192[0:0] === 1'b1) ? select_ln1242_3_fu_616_p3 : select_ln1242_2_fu_601_p3);

assign grp_fu_1050_p0 = 15'd77;

assign grp_fu_1050_p1 = zext_ln1237_fu_353_p1;

assign grp_fu_1050_p2 = 15'd4224;

assign grp_fu_1059_p0 = 16'd150;

assign grp_fu_1059_p1 = zext_ln1237_1_fu_357_p1;

assign grp_fu_1059_p2 = grp_fu_1059_p20;

assign grp_fu_1059_p20 = grp_fu_1050_p3;

assign grp_fu_1068_p0 = 14'd29;

assign grp_fu_1068_p1 = zext_ln1237_2_fu_361_p1;

assign grp_fu_1068_p2 = grp_fu_1068_p20;

assign grp_fu_1068_p20 = grp_fu_1059_p3;

assign grp_fu_1079_p0 = 15'd32725;

assign grp_fu_1079_p1 = zext_ln1237_fu_353_p1;

assign grp_fu_1087_p0 = 16'd65451;

assign grp_fu_1087_p1 = zext_ln1237_1_fu_357_p1;

assign grp_fu_1096_p0 = 14'd16363;

assign grp_fu_1096_p1 = zext_ln1237_2_fu_361_p1;

assign grp_fu_1096_p2 = ($signed(16'd65429) * $signed({{1'b0}, {mul_ln1239_fu_423_p1}}));

assign grp_fu_1105_p0 = 15'd77;

assign grp_fu_1105_p1 = zext_ln1237_6_fu_734_p1;

assign grp_fu_1105_p2 = 15'd4224;

assign grp_fu_1114_p0 = 16'd150;

assign grp_fu_1114_p1 = zext_ln1237_7_fu_738_p1;

assign grp_fu_1114_p2 = grp_fu_1114_p20;

assign grp_fu_1114_p20 = grp_fu_1105_p3;

assign grp_fu_1123_p0 = 14'd29;

assign grp_fu_1123_p1 = zext_ln1237_8_fu_742_p1;

assign grp_fu_1123_p2 = grp_fu_1123_p20;

assign grp_fu_1123_p20 = grp_fu_1114_p3;

assign grp_fu_1134_p0 = 15'd32725;

assign grp_fu_1134_p1 = zext_ln1237_6_fu_734_p1;

assign grp_fu_1142_p0 = 16'd65451;

assign grp_fu_1142_p1 = zext_ln1237_7_fu_738_p1;

assign grp_fu_1151_p0 = 14'd16363;

assign grp_fu_1151_p1 = zext_ln1237_8_fu_742_p1;

assign grp_fu_1151_p2 = ($signed(16'd65429) * $signed({{1'b0}, {mul_ln1239_2_fu_804_p1}}));

assign icmp_ln1227_fu_167_p2 = ((color == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln1240_1_fu_842_p2 = ((trunc_ln1237_1_fu_752_p4 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln1240_fu_461_p2 = ((trunc_ln6_fu_371_p4 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln1241_1_fu_512_p2 = (($signed(trunc_ln7_fu_401_p4) < $signed(9'd1)) ? 1'b1 : 1'b0);

assign icmp_ln1241_2_fu_879_p2 = ((trunc_ln1239_1_fu_782_p4 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln1241_3_fu_893_p2 = (($signed(trunc_ln1239_1_fu_782_p4) < $signed(9'd1)) ? 1'b1 : 1'b0);

assign icmp_ln1241_fu_498_p2 = ((trunc_ln7_fu_401_p4 != 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln1242_1_fu_917_p2 = ((trunc_ln1240_2_fu_825_p4 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln1242_fu_536_p2 = ((trunc_ln8_fu_444_p4 == 9'd0) ? 1'b1 : 1'b0);

assign icmp_ln1260_fu_183_p2 = ((tmp_fu_173_p4 == 7'd0) ? 1'b1 : 1'b0);

assign mul_ln1239_2_fu_804_p1 = zext_ln1237_7_fu_738_p1;

assign mul_ln1239_fu_423_p1 = zext_ln1237_1_fu_357_p1;

assign or_ln1240_1_fu_848_p2 = (tmp_11_fu_835_p3 | icmp_ln1240_1_fu_842_p2);

assign or_ln1240_fu_467_p2 = (tmp_6_fu_454_p3 | icmp_ln1240_fu_461_p2);

assign select_ln1223_1_fu_662_p3 = ((tmp_8_fu_654_p3[0:0] === 1'b1) ? 8'd255 : xor_ln1223_1_fu_648_p2);

assign select_ln1223_fu_281_p3 = ((tmp_3_fu_273_p3[0:0] === 1'b1) ? 8'd255 : xor_ln1223_fu_267_p2);

assign select_ln1224_1_fu_694_p3 = ((tmp_9_fu_686_p3[0:0] === 1'b1) ? 8'd255 : xor_ln1224_1_fu_680_p2);

assign select_ln1224_fu_313_p3 = ((tmp_4_fu_305_p3[0:0] === 1'b1) ? 8'd255 : xor_ln1224_fu_299_p2);

assign select_ln1225_1_fu_726_p3 = ((tmp_10_fu_718_p3[0:0] === 1'b1) ? 8'd255 : xor_ln1225_1_fu_712_p2);

assign select_ln1225_fu_345_p3 = ((tmp_5_fu_337_p3[0:0] === 1'b1) ? 8'd255 : xor_ln1225_fu_331_p2);

assign select_ln1227_1_fu_594_p3 = ((icmp_ln1227_fu_167_p2[0:0] === 1'b1) ? select_ln1224_fu_313_p3 : select_ln1241_1_fu_528_p3);

assign select_ln1227_2_fu_609_p3 = ((icmp_ln1227_fu_167_p2[0:0] === 1'b1) ? select_ln1225_fu_345_p3 : select_ln1242_fu_560_p3);

assign select_ln1227_3_fu_949_p3 = ((icmp_ln1227_fu_167_p2[0:0] === 1'b1) ? select_ln1223_1_fu_662_p3 : select_ln1240_3_fu_871_p3);

assign select_ln1227_4_fu_970_p3 = ((icmp_ln1227_fu_167_p2[0:0] === 1'b1) ? select_ln1224_1_fu_694_p3 : select_ln1241_3_fu_909_p3);

assign select_ln1227_5_fu_985_p3 = ((icmp_ln1227_fu_167_p2[0:0] === 1'b1) ? select_ln1225_1_fu_726_p3 : select_ln1242_4_fu_941_p3);

assign select_ln1227_fu_568_p3 = ((icmp_ln1227_fu_167_p2[0:0] === 1'b1) ? select_ln1223_fu_281_p3 : select_ln1240_1_fu_490_p3);

assign select_ln1240_1_fu_490_p3 = ((or_ln1240_fu_467_p2[0:0] === 1'b1) ? select_ln1240_fu_482_p3 : 8'd0);

assign select_ln1240_2_fu_863_p3 = ((tmp_11_fu_835_p3[0:0] === 1'b1) ? 8'd255 : trunc_ln1240_3_fu_854_p4);

assign select_ln1240_3_fu_871_p3 = ((or_ln1240_1_fu_848_p2[0:0] === 1'b1) ? select_ln1240_2_fu_863_p3 : 8'd0);

assign select_ln1240_fu_482_p3 = ((tmp_6_fu_454_p3[0:0] === 1'b1) ? 8'd255 : trunc_ln1240_1_fu_473_p4);

assign select_ln1241_1_fu_528_p3 = ((icmp_ln1241_1_fu_512_p2[0:0] === 1'b1) ? select_ln1241_fu_504_p3 : trunc_ln9_fu_518_p4);

assign select_ln1241_2_fu_885_p3 = ((icmp_ln1241_2_fu_879_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln1241_3_fu_909_p3 = ((icmp_ln1241_3_fu_893_p2[0:0] === 1'b1) ? select_ln1241_2_fu_885_p3 : trunc_ln1241_1_fu_899_p4);

assign select_ln1241_fu_504_p3 = ((icmp_ln1241_fu_498_p2[0:0] === 1'b1) ? 8'd255 : 8'd0);

assign select_ln1242_1_fu_586_p3 = ((and_ln1242_fu_580_p2[0:0] === 1'b1) ? select_ln1240_1_fu_490_p3 : select_ln1227_fu_568_p3);

assign select_ln1242_2_fu_601_p3 = ((and_ln1242_fu_580_p2[0:0] === 1'b1) ? select_ln1241_1_fu_528_p3 : select_ln1227_1_fu_594_p3);

assign select_ln1242_3_fu_616_p3 = ((and_ln1242_fu_580_p2[0:0] === 1'b1) ? 8'd0 : select_ln1227_2_fu_609_p3);

assign select_ln1242_4_fu_941_p3 = ((tmp_12_fu_923_p3[0:0] === 1'b1) ? 8'd255 : trunc_ln1242_1_fu_931_p4);

assign select_ln1242_5_fu_962_p3 = ((and_ln1242_1_fu_956_p2[0:0] === 1'b1) ? select_ln1240_3_fu_871_p3 : select_ln1227_3_fu_949_p3);

assign select_ln1242_6_fu_977_p3 = ((and_ln1242_1_fu_956_p2[0:0] === 1'b1) ? select_ln1241_3_fu_909_p3 : select_ln1227_4_fu_970_p3);

assign select_ln1242_7_fu_992_p3 = ((and_ln1242_1_fu_956_p2[0:0] === 1'b1) ? 8'd0 : select_ln1227_5_fu_985_p3);

assign select_ln1242_fu_560_p3 = ((tmp_7_fu_542_p3[0:0] === 1'b1) ? 8'd255 : trunc_ln_fu_550_p4);

assign select_ln1260_1_fu_1007_p3 = ((icmp_ln1260_fu_183_p2[0:0] === 1'b1) ? select_ln1242_6_fu_977_p3 : empty_32_fu_1000_p3);

assign select_ln1260_fu_631_p3 = ((icmp_ln1260_fu_183_p2[0:0] === 1'b1) ? select_ln1242_2_fu_601_p3 : empty_fu_624_p3);

assign sext_ln1239_1_fu_429_p1 = grp_fu_1096_p3;

assign sext_ln1239_3_fu_810_p1 = grp_fu_1151_p3;

assign shl_ln1238_1_fu_761_p3 = {{select_ln1225_1_fu_726_p3}, {7'd0}};

assign shl_ln1239_1_fu_792_p3 = {{select_ln1223_1_fu_662_p3}, {7'd0}};

assign shl_ln1_fu_411_p3 = {{select_ln1223_fu_281_p3}, {7'd0}};

assign shl_ln_fu_380_p3 = {{select_ln1225_fu_345_p3}, {7'd0}};

assign tmp_10_fu_718_p3 = add_ln1225_3_fu_706_p2[32'd8];

assign tmp_11_fu_835_p3 = grp_fu_1123_p3[32'd16];

assign tmp_12_fu_923_p3 = add_ln1239_5_fu_819_p2[32'd16];

assign tmp_3_fu_273_p3 = add_ln1223_fu_261_p2[32'd8];

assign tmp_4_fu_305_p3 = add_ln1224_1_fu_293_p2[32'd8];

assign tmp_5_fu_337_p3 = add_ln1225_1_fu_325_p2[32'd8];

assign tmp_6_fu_454_p3 = grp_fu_1068_p3[32'd16];

assign tmp_7_fu_542_p3 = add_ln1239_2_fu_438_p2[32'd16];

assign tmp_8_fu_654_p3 = add_ln1223_1_fu_642_p2[32'd8];

assign tmp_9_fu_686_p3 = add_ln1224_3_fu_674_p2[32'd8];

assign tmp_fu_173_p4 = {{color[7:1]}};

assign tpgSinTableArray_9bi_address0 = zext_ln1223_fu_193_p1;

assign tpgSinTableArray_9bi_address1 = zext_ln1224_fu_204_p1;

assign tpgSinTableArray_9bi_address2 = zext_ln1225_fu_215_p1;

assign tpgSinTableArray_9bi_address3 = zext_ln1223_1_fu_230_p1;

assign tpgSinTableArray_9bi_address4 = zext_ln1224_1_fu_241_p1;

assign tpgSinTableArray_9bi_address5 = zext_ln1225_1_fu_252_p1;

assign trunc_ln1223_1_fu_257_p1 = tpgSinTableArray_9bi_q0[7:0];

assign trunc_ln1223_2_fu_638_p1 = tpgSinTableArray_9bi_q3[7:0];

assign trunc_ln1223_fu_189_p1 = x[10:0];

assign trunc_ln1224_1_fu_670_p1 = tpgSinTableArray_9bi_q4[7:0];

assign trunc_ln1224_fu_289_p1 = tpgSinTableArray_9bi_q1[7:0];

assign trunc_ln1225_1_fu_702_p1 = tpgSinTableArray_9bi_q5[7:0];

assign trunc_ln1225_fu_321_p1 = tpgSinTableArray_9bi_q2[7:0];

assign trunc_ln1237_1_fu_752_p4 = {{grp_fu_1123_p3[16:8]}};

assign trunc_ln1239_1_fu_782_p4 = {{add_ln1238_5_fu_776_p2[16:8]}};

assign trunc_ln1240_1_fu_473_p4 = {{grp_fu_1068_p3[15:8]}};

assign trunc_ln1240_2_fu_825_p4 = {{add_ln1239_5_fu_819_p2[16:8]}};

assign trunc_ln1240_3_fu_854_p4 = {{grp_fu_1123_p3[15:8]}};

assign trunc_ln1241_1_fu_899_p4 = {{add_ln1238_5_fu_776_p2[15:8]}};

assign trunc_ln1242_1_fu_931_p4 = {{add_ln1239_5_fu_819_p2[15:8]}};

assign trunc_ln1260_fu_220_p1 = x[0:0];

assign trunc_ln6_fu_371_p4 = {{grp_fu_1068_p3[16:8]}};

assign trunc_ln7_fu_401_p4 = {{add_ln1238_2_fu_395_p2[16:8]}};

assign trunc_ln8_fu_444_p4 = {{add_ln1239_2_fu_438_p2[16:8]}};

assign trunc_ln9_fu_518_p4 = {{add_ln1238_2_fu_395_p2[15:8]}};

assign trunc_ln_fu_550_p4 = {{add_ln1239_2_fu_438_p2[15:8]}};

assign xor_ln1223_1_fu_648_p2 = (trunc_ln1223_2_fu_638_p1 ^ 8'd128);

assign xor_ln1223_fu_267_p2 = (trunc_ln1223_1_fu_257_p1 ^ 8'd128);

assign xor_ln1224_1_fu_680_p2 = (trunc_ln1224_1_fu_670_p1 ^ 8'd128);

assign xor_ln1224_fu_299_p2 = (trunc_ln1224_fu_289_p1 ^ 8'd128);

assign xor_ln1225_1_fu_712_p2 = (trunc_ln1225_1_fu_702_p1 ^ 8'd128);

assign xor_ln1225_fu_331_p2 = (trunc_ln1225_fu_321_p1 ^ 8'd128);

assign xor_ln1227_fu_575_p2 = (icmp_ln1227_fu_167_p2 ^ 1'd1);

assign zext_ln1223_1_fu_230_p1 = add_ln1223_2_fu_224_p2;

assign zext_ln1223_fu_193_p1 = trunc_ln1223_fu_189_p1;

assign zext_ln1224_1_fu_241_p1 = add_ln1224_2_fu_235_p2;

assign zext_ln1224_fu_204_p1 = add_ln1224_fu_198_p2;

assign zext_ln1225_1_fu_252_p1 = add_ln1225_2_fu_246_p2;

assign zext_ln1225_fu_215_p1 = add_ln1225_fu_209_p2;

assign zext_ln1237_1_fu_357_p1 = select_ln1224_fu_313_p3;

assign zext_ln1237_2_fu_361_p1 = select_ln1225_fu_345_p3;

assign zext_ln1237_6_fu_734_p1 = select_ln1223_1_fu_662_p3;

assign zext_ln1237_7_fu_738_p1 = select_ln1224_1_fu_694_p3;

assign zext_ln1237_8_fu_742_p1 = select_ln1225_1_fu_726_p3;

assign zext_ln1237_fu_353_p1 = select_ln1223_fu_281_p3;

assign zext_ln1238_1_fu_392_p1 = $unsigned(grp_fu_1079_p3);

assign zext_ln1238_2_fu_769_p1 = shl_ln1238_1_fu_761_p3;

assign zext_ln1238_3_fu_773_p1 = $unsigned(grp_fu_1134_p3);

assign zext_ln1238_fu_388_p1 = shl_ln_fu_380_p3;

assign zext_ln1239_1_fu_800_p1 = shl_ln1239_1_fu_792_p3;

assign zext_ln1239_fu_419_p1 = shl_ln1_fu_411_p3;

endmodule //AXI4S_bd_v_tpg_0_0_tpgPatternRainbow
